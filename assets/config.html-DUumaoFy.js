import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,a as t,b as i,d as n,e as a,w as s,r as c,o as d}from"./app-Bh18iEp9.js";const p={};function h(f,e){const o=c("RouteLink");return d(),r("div",null,[e[6]||(e[6]=t('<h1 id="规则相关" tabindex="-1"><a class="header-anchor" href="#规则相关"><span>规则相关</span></a></h1><h2 id="config-group" tabindex="-1"><a class="header-anchor" href="#config-group"><span>规则分组</span></a></h2><h3 id="config-group-summary" tabindex="-1"><a class="header-anchor" href="#config-group-summary"><span>概述</span></a></h3><p>PLS 基于由 CWT 规则文件组成的规则分组，实现了诸多语言功能。</p><p>规则分组可以有不同的来源，而对于同一来源的规则分组，又区分为各自游戏类型的规则分组，以及所有游戏类型共享的规则分组。</p><p>你可以在插件的设置页面（<code>Paradox Language Support &gt; Config Related</code>）中按需启用或禁用各类规则分组。 这些规则分组的父目录，以及远程规则分组的仓库地址，也都可以在对应的插件设置页面中进行配置。</p><p>参考链接：</p><ul><li><a href="https://github.com/DragonKnightOfBreeze/Paradox-Language-Support/tree/master/cwt" target="_blank" rel="noopener noreferrer">仓库一览</a></li></ul><h3 id="config-group-sources" tabindex="-1"><a class="header-anchor" href="#config-group-sources"><span>来源</span></a></h3><h4 id="config-group-builtin" tabindex="-1"><a class="header-anchor" href="#config-group-builtin"><span>内置的规则分组</span></a></h4><ul><li>位置：<code>config/{gameType}</code></li><li>位于插件压缩包中的插件 jar 包中。</li><li><code>{gameType}</code> 为游戏类型 ID<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup>，对于共享的规则分组则为 <code>core</code>。</li><li>共享的内置规则分组总是会被启用。</li></ul><h4 id="config-group-remote" tabindex="-1"><a class="header-anchor" href="#config-group-remote"><span>远程的规则分组</span></a></h4><ul><li>位置：<code>{configDir}/{dirName}</code></li><li><code>{configDir}</code> 为包含所有远程的规则分组目录的父目录，可在插件设置页面中自定义。</li><li><code>{dirName}</code> 为仓库目录的名字，对于共享的规则分组则为 <code>core</code>。</li></ul><p>更改配置后，PLS 会自动从配置的远程仓库中克隆和拉取这些规则分组。</p><h4 id="config-group-local" tabindex="-1"><a class="header-anchor" href="#config-group-local"><span>本地的规则分组</span></a></h4><ul><li>位置：<code>{configDir}/{gameType}</code></li><li><code>{configDir}</code> 为包含所有本地的规则分组目录的父目录，可在插件设置页面中自定义。</li><li><code>{gameType}</code> 为游戏类型 ID<sup class="footnote-ref"><a href="#footnote1">[1:1]</a><a class="footnote-anchor" id="footnote-ref1:1"></a></sup>，对于共享的规则分组则为 <code>core</code>。</li></ul><p>其中的规则文件由用户自定义，适用于所有项目。对它们的更改需要手动确认导入。</p><h4 id="config-group-project-local" tabindex="-1"><a class="header-anchor" href="#config-group-project-local"><span>项目本地的规则分组</span></a></h4><ul><li>位置：<code>{configDirName}/{gameType}</code></li><li><code>{configDirName}</code> 为项目本地的规则目录的名字，直接位于项目根目录下，默认为 <code>.config</code>，可在插件设置页面中自定义。</li><li><code>{gameType}</code> 为游戏类型 ID<sup class="footnote-ref"><a href="#footnote1">[1:2]</a><a class="footnote-anchor" id="footnote-ref1:2"></a></sup>，对于共享的规则分组则为 <code>core</code>。</li></ul><p>其中的规则文件由用户自定义，仅适用于当前项目。对它们的更改需要手动确认导入。</p><h3 id="config-group-override" tabindex="-1"><a class="header-anchor" href="#config-group-override"><span>覆盖方式</span></a></h3><p>规则会按照文件路径和规则 ID 进行后序覆盖。</p><p>读取规则时，插件会依次遍历内置的规则分组、本地的规则分组以及项目本地的规则分组。 共享的规则分组由所有游戏类型共享，会在对应游戏类型的规则分组之前被遍历。</p><p>例如，如果你在项目根目录下的规则文件 <code>.config/stellaris/modifiers.cwt</code> 中编写了自定义的规则，它将完全覆盖插件内置的修正规则。 因为插件内置的修正规则位于插件 jar 包中的规则文件 <code>config/stellaris/modifiers.cwt</code> 中，它们的文件路径都是 <code>modifiers.cwt</code>。 如果此自定义的规则文件中没有任何内容，应用后插件将无法解析脚本文件中的任何修正。</p><h2 id="config-file" tabindex="-1"><a class="header-anchor" href="#config-file"><span>规则文件</span></a></h2><h3 id="config-file-summary" tabindex="-1"><a class="header-anchor" href="#config-file-summary"><span>概述</span></a></h3><p>CWT 规则文件使用一种特殊的文件格式，可以视为 Paradox 脚本语言的变种。它的文件扩展名为 <code>.cwt</code>。</p><h3 id="config-file-syntax" tabindex="-1"><a class="header-anchor" href="#config-file-syntax"><span>语法</span></a></h3><p>CWT 规则文件的基本语法如下所示：</p><div class="language-cwt line-numbers-mode" data-highlighter="shiki" data-ext="cwt" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cwt"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># both equal sign (`=`, `==`) and not equal sign (`&lt;&gt;`, `!=`) can be used as the k-v separator (also available in options)</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># options and values can be mixed in option clauses (`{...}`)</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># properties and values can be mixed in clauses (`{...}`)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">### documentation comment</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">## option = option_value</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">## option_0 = { k = v }</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">## option_value</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">prop</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # line comment</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    k</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    v</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>关于更加详细的语法说明，可以参考：</p>',31)),i("ul",null,[i("li",null,[n(o,{to:"/zh/ref-syntax.html"},{default:s(()=>[...e[0]||(e[0]=[a("附录：语法参考",-1)])]),_:1}),e[2]||(e[2]=a("中的",-1)),n(o,{to:"/zh/ref-syntax.html#cwt"},{default:s(()=>[...e[1]||(e[1]=[a("对应章节",-1)])]),_:1})])]),e[7]||(e[7]=i("h2",{id:"customization",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#customization"},[i("span",null,"自定义")])],-1)),e[8]||(e[8]=i("h3",{id:"write-config-files",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#write-config-files"},[i("span",null,"编写规则文件")])],-1)),e[9]||(e[9]=i("p",null,"关于每种CWT规则的更加详细的编写规范，目前可以参考：",-1)),i("ul",null,[e[4]||(e[4]=i("li",null,[a("插件内置的规则文件。它们分别位于插件仓库的 "),i("code",null,"cwt/core"),a(" 目录下，以及各个规则仓库中。")],-1)),i("li",null,[n(o,{to:"/zh/ref-config-format.html"},{default:s(()=>[...e[3]||(e[3]=[a("附录：规则格式参考",-1)])]),_:1})]),e[5]||(e[5]=i("li",null,[a("CWTools 的"),i("a",{href:"https://github.com/DragonKnightOfBreeze/Paradox-Language-Support/blob/master/references/cwt/guidance.md",target:"_blank",rel:"noopener noreferrer"},"指引文档")],-1))]),e[10]||(e[10]=t('<h3 id="import-config-files" tabindex="-1"><a class="header-anchor" href="#import-config-files"><span>导入规则文件</span></a></h3><p>你可以选择启用<a href="#config-group-remote">远程的规则分组</a>，其中的规则文件来自各个远程规则仓库。 或者，你也可以选择启用<a href="#config-group-local">本地的规则分组</a>或<a href="#config-group-project-local">项目本地的规则分组</a>，并在对应的规则目录下编写自定义规则文件。<br> 这些文件可用于完善插件内置的规则，或是增强插件功能。</p><p>当检测到有变更时，编辑器右上角的悬浮工具栏会出现刷新按钮。<br> 点击确认导入后，这些自定义规则文件的更改将会被应用。 之后，IDE 会在后台重新解析已打开的文件。</p><p>注意：如果规则文件的更改会影响索引逻辑（如新增定义类型、修改某定义类型的匹配条件等），你可能需要重新索引整个项目（这可能需要数分钟），以确保在涉及到这些更改的场合，插件能正常工作。</p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="footnote1" class="footnote-item"><p>目前有以下可选值：<code>stellaris</code>, <code>ck2</code>, <code>ck3</code>, <code>eu4</code>, <code>eu5</code>, <code>hoi4</code>, <code>ir</code>, <code>vic2</code>, <code>vic3</code>。对于共享的规则分组则为 <code>core</code>。 <a href="#footnote-ref1" class="footnote-backref">↩︎</a> <a href="#footnote-ref1:1" class="footnote-backref">↩︎</a> <a href="#footnote-ref1:2" class="footnote-backref">↩︎</a></p></li></ol></section>',6))])}const m=l(p,[["render",h]]),k=JSON.parse('{"path":"/zh/config.html","title":"规则相关","lang":"zh-CN","frontmatter":{"description":"规则相关 规则分组 概述 PLS 基于由 CWT 规则文件组成的规则分组，实现了诸多语言功能。 规则分组可以有不同的来源，而对于同一来源的规则分组，又区分为各自游戏类型的规则分组，以及所有游戏类型共享的规则分组。 你可以在插件的设置页面（Paradox Language Support > Config Related）中按需启用或禁用各类规则分组。 ...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"规则相关\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-11-01T10:36:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"DragonKnightOfBreeze\\",\\"url\\":\\"https://github.com/DragonKnightOfBreeze\\",\\"email\\":\\"dk_breeze@qq.com\\"}]}"],["meta",{"property":"og:url","content":"https://windea.icu/Paradox-Language-Support/zh/config.html"}],["meta",{"property":"og:site_name","content":"Paradox Language Support"}],["meta",{"property":"og:title","content":"规则相关"}],["meta",{"property":"og:description","content":"规则相关 规则分组 概述 PLS 基于由 CWT 规则文件组成的规则分组，实现了诸多语言功能。 规则分组可以有不同的来源，而对于同一来源的规则分组，又区分为各自游戏类型的规则分组，以及所有游戏类型共享的规则分组。 你可以在插件的设置页面（Paradox Language Support > Config Related）中按需启用或禁用各类规则分组。 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-11-01T10:36:54.000Z"}],["meta",{"property":"article:modified_time","content":"2025-11-01T10:36:54.000Z"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://windea.icu/Paradox-Language-Support/en/config.html"}]]},"git":{"createdTime":1761993414000,"updatedTime":1761993414000,"contributors":[{"name":"DragonKnightOfBreeze","username":"DragonKnightOfBreeze","email":"dk_breeze@qq.com","commits":1,"url":"https://github.com/DragonKnightOfBreeze"}]},"readingTime":{"minutes":4.39,"words":1316},"filePathRelative":"zh/config.md","autoDesc":true}');export{m as comp,k as data};
