
types = {
	type[federation_law_category] = {
		path = "game/common/federation_law_categories"
		localisation = {
			## required
			Name = "$"
			## required
			Description = "$_desc"
		}
	}
	type[federation_law] = {
		path = "game/common/federation_laws"
		localisation = {
			## required
			Name = "$"
			## required
			Description = "$_desc"
		}
	}
	type[federation_perk] = {
		path = "game/common/federation_perks"
		localisation = {
			## required
			Name = "$"
			## required
			Description = "$_desc"
		}
	}
	type[federation_type] = {
		path = "game/common/federation_types"
		localisation = {
			## required
			Name = "$"
			## required
			Description = "$_desc"
		}
	}
}

federation_law_category = {
	## cardinality = 0..1
	centralization = yes
	laws = {
		## cardinality = 1..inf
		<federation_law>
	}
	## cardinality = 0..1
	## replace_scopes = { this = federation root = federation }
	potential = {
		alias_name[trigger] = alias_match_left[trigger]
	}
}

federation_law = {
	## cardinality = 0..1
	unlocks_centralization = int
	## cardinality = 0..1
	cohesion_growth = float
	## cardinality = 0..1
	required_centralization = {
		base = int
	}
	## cardinality = 0..1
	display_level = int
	## replace_scopes = { this = federation root = federation }
	allow = {
		alias_name[trigger] = alias_match_left[trigger]
	}
	## cardinality = 0..1
	## replace_scopes = { this = federation root = federation }
	potential = {
		alias_name[trigger] = alias_match_left[trigger]
	}
	## cardinality = 0..1
	## replace_scopes = { this = federation root = federation }
	modifier = {
		## cardinality = 0..1
		description = localisation
		## cardinality = 0..1
		federation_fleet_contribution_factor = float
		## cardinality = 0..1
		cohesion_add = float
	}
	## cardinality = 0..1
	## replace_scopes = { this = federation root = federation }
	on_enact = {
		alias_name[effect] = alias_match_left[effect]
	}
	## replace_scopes = { this = country root = country }
	ai_weight = {
		base = float
		alias_name[modifier_rule_with_loc] = alias_match_left[modifier_rule_with_loc]
	}
}

federation_perk = {
	## cardinality = 0..1
	## replace_scopes = { this = federation root = federation }
	potential = {
		alias_name[trigger] = alias_match_left[trigger]
	}
	## cardinality = 0..1
	## replace_scopes = { this = country root = country }
	members_modifier = {
		## cardinality = 0..1
		description = localisation
		alias_name[modifier] = alias_match_left[modifier]
	}
	## cardinality = 0..1
	## replace_scopes = { this = country root = country }
	member_triggered_modifier = {
		key = localisation
		potential = {
			alias_name[trigger] = alias_match_left[trigger]
		}
		alias_name[modifier] = alias_match_left[modifier]
	}
	## cardinality = 0..1
	## replace_scopes = { this = country root = country }
	leader_modifier = {
		## cardinality = 0..1
		description = localisation
		alias_name[modifier] = alias_match_left[modifier]
	}
	## cardinality = 0..1
	## replace_scopes = { this = country root = country }
	envoy_modifier = {
		## cardinality = 0..1
		description = localisation
		alias_name[modifier] = alias_match_left[modifier]
	}
	## cardinality = 0..1
	## replace_scopes = { this = federation root = federation }
	federation_modifier = {
		## cardinality = 0..1
		description = localisation
		alias_name[modifier] = alias_match_left[modifier]
	}
	## cardinality = 0..1
	## replace_scopes = { this = federation root = federation }
	on_activate = {
		alias_name[effect] = alias_match_left[effect]
	}
	## cardinality = 0..1
	## replace_scopes = { this = federation root = federation }
	on_deactivate = {
		alias_name[effect] = alias_match_left[effect]
	}
}

federation_type = {
	icon = <sprite>
	## replace_scopes = { this = country root = country }
	potential = {
		alias_name[trigger] = alias_match_left[trigger]
	}
	## cardinality = 0..1
	## replace_scopes = { this = country root = country }
	allow = {
		alias_name[trigger] = alias_match_left[trigger]
	}
	levels = {
		## cardinality = 1..inf
		localisation = {
			## cardinality = 0..1
			experience = int
			perks = {
				## cardinality = 0..inf
				<federation_perk>
			}
		}
	}
	## replace_scopes = { this = federation root = federation }
	on_create = {
		alias_name[effect] = alias_match_left[effect]
	}

	## replace_scopes = { this = country root = country from = country }
	ai_weight = {
		base = float
		alias_name[modifier_rule_with_loc] = alias_match_left[modifier_rule_with_loc]
	}
}
