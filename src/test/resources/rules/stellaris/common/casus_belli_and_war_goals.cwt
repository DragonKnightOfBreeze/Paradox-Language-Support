
types = {
	type[casus_belli] = {
		path = "game/common/casus_belli"
		localisation = {
			## required
			Name = "casus_belli_$"
			## optional
			Hint = "casus_belli_$_acquire_hint"
		}
	}
	type[war_goal] = {
		path = "game/common/war_goals"
		localisation = {
			## required
			Name = "war_goal_$"
			## required
			Desc = "war_goal_$_desc"
		}
	}
}

enums = {
	enum[cede_claims] = {
		yes
		occupied_only
		no
	}
	enum[peace_offers] = {
		status_quo
		surrender
		demand_surrender
	}
}

# TODO Confirm
# TODO Document
casus_belli = {
	#not needed?
	#casus_belli = <casus_belli>

	## cardinality = 0..1
	###trigger to make some CBs invalid for certain types of countries; this = attacker (CB owner); default: { always = yes }
	potential = {
		alias_name[trigger] = alias_match_left[trigger]
	}

	## cardinality = 0..1
	## replace_scope = { this = country root = country from = country }
	###trigger, evaluated daily to check if CB should be created or destroyed automatically, does not affect CBs granted via script; this = attacker (CB owner), from = defender (target country); default: { always = yes }
	is_valid = {
		alias_name[trigger] = alias_match_left[trigger]
	}

	## cardinality = 0..1
	## replace_scope = { this = country root = country from = country }
	###trigger, evaluated daily to destroy CBs that have been granted via script ahead of expiration date; this = attacker (CB owner), from = defender (target country); default: { always = no }
	destroy_if = {
		alias_name[trigger] = alias_match_left[trigger]
	}

	###optional (default = yes), flag to control whether this CB will generate a notification (to avoid duplicate notification when a claim CB is generated). Caligula's note: Always used in Vanilla (even when yes), so marked as obligatory unless someone knows better
	show_notification = bool

	## cardinality = 0..1
	show_in_diplomacy = bool
}


#localisation is wg_<war_goal>

war_goal = {
	casus_belli = <casus_belli>

	## cardinality = 0..1
	###Cede claims on peace? Yes by default (I think - Caligula)
	cede_claims = enum[cede_claims]
	## cardinality = 0..1
	###Defenders get this war goal if no war goal is picked in time. If multiple war goals are set to be defender default, the first one scripted in the file is chosen. No by default.
	defender_default = bool


	###Affects threat generated by conquering systems & planets. 1.0 by default.
	## cardinality = 0..1
	threat_multiplier = float

	## cardinality = 0..1
	###This decides whether claims should be listed in the description. No by default.
	show_claims_in_description = bool

	## cardinality = 0..1
	total_war = bool
	## cardinality = 0..1
	###Hide this wargoal if country doesn't have the requisite CB. No by default.
	hide_if_no_cb = bool

	## cardinality = 0..1
	###This affects how likely the AI is to surrender to this wargoal, generally less willing on more severe wargoals (negative numbers = less willing). 0 by default.
	surrender_acceptance = int
	## cardinality = 0..1
	###This affects how quickly war exhaustion builds up for this side in the war (2.0 = twice as fast). 1.0 by default.
	war_exhaustion = float

	## cardinality = 0..1
	###If used as attacker wargoal and set, defender will have their wargoal predetermined by this. If not set, defender gets to pick their own wargoal.
	set_defender_wargoal = <war_goal>

	## cardinality = 0..1
	release_occupied_systems_on_status_quo = bool


	## replace_scope = { this = country root = country from = country }
	###FROM = The targeted country, THIS = The acting country
	potential = {
		alias_name[trigger] = alias_match_left[trigger]
	}
	## replace_scope = { this = country root = country from = country }
	###FROM = The targeted country, THIS = The acting country
	possible = {
		alias_name[trigger] = alias_match_left[trigger]
	}

	# TODO: add replace_scope if necessary and add comment
	allowed_peace_offers = {
		## cardinality = 1..3	
		enum[peace_offers]
	}

	## cardinality = 0..1
	## replace_scope = { this = country root = country from = country }
	###Run when war ends in status quo. The targeted country, THIS = The acting country
	on_status_quo = {
		alias_name[effect] = alias_match_left[effect]
	}

	## cardinality = 0..1
	## replace_scope = { this = country root = country from = country }
	on_wargoal_set = {
		alias_name[effect] = alias_match_left[effect]
	}

	## cardinality = 0..1
	## replace_scope = { this = country root = country from = country }
	###Run when target surrenders after claims are ceded. The targeted country, THIS = The acting country
	on_accept = {
		alias_name[effect] = alias_match_left[effect]
	}

	## replace_scope = { this = country root = country from = country }
	###FROM = The targeted country, THIS = The acting country
	ai_weight = {
		weight = int
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}
}
