//Stellaris官方本地化文件中本身就存在语法解析错误，需要保证存在错误的情况下仍然会解析后续的本地化文本，草

{
	parserClass="com.windea.plugin.idea.paradox.localisation.psi.ParadoxLocalisationParser"
	extends="com.intellij.extapi.psi.ASTWrapperPsiElement"
	psiClassPrefix="ParadoxLocalisation"
	psiImplClassSuffix="Impl"
	psiPackage="com.windea.plugin.idea.paradox.localisation.psi"
	psiImplPackage="com.windea.plugin.idea.paradox.localisation.psi.impl"

	elementTypeClass="com.windea.plugin.idea.paradox.localisation.psi.ParadoxLocalisationElementType"
	elementTypeHolderClass="com.windea.plugin.idea.paradox.localisation.psi.ParadoxLocalisationTypes"
	tokenTypeClass="com.windea.plugin.idea.paradox.localisation.psi.ParadoxLocalisationTokenType"
	psiImplUtilClass="com.windea.plugin.idea.paradox.localisation.psi.impl.ParadoxLocalisationPsiImplUtil"

	tokens=[
	  COLON=':'
	  PARAMETER_SEPARATOR="|"
	  NUMBER='regexp:\d+'
	  BLANK='wregexp:\s+'
	  COMMENT='regexp:#[^\r\n]*'
	  ROOT_COMMENT='regexp:#[^\r\n]*'
	  //行尾注释不能包含双引号，否则会有解析冲突
	  END_OF_LINE_COMMENT='regexp:#[^"\r\n]*'
	  LOCALE_ID='regexp:[a-z_]+'
	  PROPERTY_KEY_ID="regexp:[a-zA-Z0-9_.\-']+"
	  VALID_ESCAPE_TOKEN='regexp:\\[rnt"$£§%]'
	  INVALID_ESCAPE_TOKEN='regexp:\\.'
	  LEFT_QUOTE="\""
	  RIGHT_QUOTE="\""
	  PROPERTY_REFERENCE_START="$"
	  PROPERTY_REFERENCE_ID="regexp:[a-zA-Z0-9_.\-' \t]+"
      PROPERTY_REFERENCE_PARAMETER='regexp:[a-zA-Z0-9+\-*%=\[.\]]++'
	  PROPERTY_REFERENCE_END="$"
	  ICON_START="£"
	  ICON_ID='regexp:[a-zA-Z0-9_\-\\/]+'
	  ICON_PARAMETER='regexp:[a-zA-Z0-9+\-*%=]+'
	  ICON_END="£"
	  SERIAL_NUMBER_START="%"
	  SERIAL_NUMBER_ID="regexp:[A-Z]"
	  SERIAL_NUMBER_END="%"
      COMMAND_START="["
      COMMAND_KEY_TOKEN='regexp:[a-zA-Z0-9_$]+' //加$是为了兼容性
      COMMAND_KEY_SEPARATOR='.'
      COMMAND_END="]"
	  COLORFUL_TEXT_START="§"
	  COLOR_CODE="regexp:[a-zA-Z]"
	  COLORFUL_TEXT_END="§!"
	  //双引号和百分号实际上不需要转义
	  STRING_TOKEN='regexp:[^\[\r\n\\]+'
	]
}

//规则定义可以忽略空白
//直接导向token的rule，在flex文件中需要使用对应的token
//即使idea提示不需要转义，一些字符在regexp中仍然需要转义

root ::= ROOT_COMMENT * [root_item]
private root_item ::= [locale] property_list * //locale尽管实际上是必须的，为了兼容快速导航功能，改为可选
private property_list ::= END_OF_LINE_COMMENT | COMMENT | property

locale ::= LOCALE_ID ":" {
  pin(".*")=1
  mixin="com.windea.plugin.idea.paradox.localisation.psi.impl.ParadoxLocalisationNamedElementImpl"
  implements="com.windea.plugin.idea.paradox.localisation.psi.ParadoxLocalisationNamedElement"
  methods=[getName setName getNameIdentifier getIcon getParadoxLocale]
}

property ::= property_key ":" [NUMBER] property_value {
  pin(".*")=1
  elementTypeFactory="com.windea.plugin.idea.paradox.localisation.psi.ParadoxLocalisationStubElementTypes.getPropertyType"
  extends="com.windea.plugin.idea.paradox.localisation.psi.impl.ParadoxLocalisationStubElementImpl<?>"
  implements="com.windea.plugin.idea.paradox.localisation.psi.ParadoxLocalisationNamedElement"
  stubClass="com.windea.plugin.idea.paradox.localisation.psi.ParadoxLocalisationPropertyStub"
  methods=[getName setName getNameIdentifier getIcon getValue getParadoxLocale]
}
property_key ::= PROPERTY_KEY_ID
property_value ::= LEFT_QUOTE rich_text * RIGHT_QUOTE{
  pin(".*")=1
}

rich_text ::= property_reference | command | icon | serial_number | colorful_text | escape | string

string ::= STRING_TOKEN{
  extends=rich_text
}

escape ::= VALID_ESCAPE_TOKEN | INVALID_ESCAPE_TOKEN{
  extends=rich_text
}

property_reference ::= PROPERTY_REFERENCE_START [property_reference_name] [PARAMETER_SEPARATOR [property_reference_param]] PROPERTY_REFERENCE_END {
  pin=1
  extends=rich_text
  mixin="com.windea.plugin.idea.paradox.localisation.psi.impl.ParadoxLocalisationNamedElementImpl"
  implements="com.windea.plugin.idea.paradox.localisation.psi.ParadoxLocalisationNamedElement"
  methods=[getName setName getNameIdentifier getTextOffset getReference getParadoxColor]
}
private property_reference_name ::= command | PROPERTY_REFERENCE_ID
private property_reference_param ::= PROPERTY_REFERENCE_PARAMETER

icon ::= ICON_START icon_name [PARAMETER_SEPARATOR [icon_param]] ICON_END {
  pin(".*")=1
  extends=rich_text
  mixin="com.windea.plugin.idea.paradox.localisation.psi.impl.ParadoxLocalisationNamedElementImpl"
  implements="com.windea.plugin.idea.paradox.localisation.psi.ParadoxLocalisationNamedElement"
  methods=[getName setName getNameIdentifier getTextOffset getReference]
}
private icon_name ::= command | property_reference | ICON_ID
private icon_param ::= ICON_PARAMETER | property_reference

command ::= COMMAND_START command_expression? COMMAND_END{
  pin(".*")=1
  extends=rich_text
  implements="com.windea.plugin.idea.paradox.localisation.psi.ParadoxLocalisationRichText"
}
private command_expression ::= command_Key (COMMAND_KEY_SEPARATOR command_Key)*{
  pin(".*")=1
}
command_Key ::= COMMAND_KEY_TOKEN{
  mixin="com.windea.plugin.idea.paradox.localisation.psi.impl.ParadoxLocalisationNamedElementImpl"
  implements="com.windea.plugin.idea.paradox.localisation.psi.ParadoxLocalisationNamedElement"
  methods=[getName setName getNameIdentifier getReference]
}

serial_number ::= SERIAL_NUMBER_START SERIAL_NUMBER_ID SERIAL_NUMBER_END {
  pin(".*")=1
  extends=rich_text
  mixin="com.windea.plugin.idea.paradox.localisation.psi.impl.ParadoxLocalisationNamedElementImpl"
  implements="com.windea.plugin.idea.paradox.localisation.psi.ParadoxLocalisationNamedElement"
  methods=[getName setName getNameIdentifier getTextOffset getParadoxSerialNumber]
}

colorful_text ::= COLORFUL_TEXT_START COLOR_CODE rich_text* [COLORFUL_TEXT_END]{
  pin(".*")=1
  extends=rich_text
  mixin="com.windea.plugin.idea.paradox.localisation.psi.impl.ParadoxLocalisationNamedElementImpl"
  implements="com.windea.plugin.idea.paradox.localisation.psi.ParadoxLocalisationNamedElement"
  methods=[getName setName getNameIdentifier getTextOffset getParadoxColor]
}
