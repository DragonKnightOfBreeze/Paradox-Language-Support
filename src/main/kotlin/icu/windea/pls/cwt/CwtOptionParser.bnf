{
  parserClass="icu.windea.pls.cwt.psi.CwtOptionParser"
  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"
  psiClassPrefix="Cwt"
  psiImplClassSuffix="Impl"
  psiPackage="icu.windea.pls.cwt.psi"
  psiImplPackage="icu.windea.pls.cwt.psi.impl"
  elementTypeHolderClass="icu.windea.pls.cwt.psi.CwtElementTypes"
  elementTypeClass="icu.windea.pls.cwt.psi.CwtElementType"
  tokenTypeClass="icu.windea.pls.cwt.psi.CwtTokenType"
  psiImplUtilClass="icu.windea.pls.cwt.psi.util.CwtPsiImplUtil"
  parserUtilClass="icu.windea.pls.cwt.psi.util.CwtParserUtil"
  psiVisitorName=""
  methods(".*")=[getPresentation getUseScope]
}

option_comment ::= OPTION_COMMENT_START option_comment_item ? {
  pin=1
  implements=["com.intellij.psi.PsiComment"]
  methods=[getTokenType]
}
private option_comment_item ::= option | option_value

option ::= option_key option_separator option_value {
  pin=1
  mixin="icu.windea.pls.cwt.psi.impl.CwtNamedElementImpl"
  implements=["icu.windea.pls.cwt.psi.CwtNamedElement"]
  methods=[
    getOptionValue
    getIcon getName setName getNameIdentifier getValue getSeparatorType
  ]
}
option_key ::= OPTION_KEY_TOKEN {
  methods=[getIcon getName getValue]
}
private option_separator ::= EQUAL_SIGN | NOT_EQUAL_SIGN
private option_value ::= <<parseOptionValue>>
