{
	parserClass="icu.windea.pls.cwt.psi.CwtParser"
	extends="com.intellij.extapi.psi.ASTWrapperPsiElement"
	psiClassPrefix="Cwt"
	psiImplClassSuffix="Impl"
	psiPackage="icu.windea.pls.cwt.psi"
	psiImplPackage="icu.windea.pls.cwt.psi.impl"
	elementTypeHolderClass="icu.windea.pls.cwt.psi.CwtElementTypes"
	elementTypeClass="icu.windea.pls.cwt.psi.CwtElementType"
	tokenTypeClass="icu.windea.pls.cwt.psi.CwtTokenType"
	psiImplUtilClass="icu.windea.pls.cwt.psi.impl.CwtPsiImplUtil"
}

root ::= root_block
root_block ::= root_block_item * {
  extends=block
}
private root_block_item ::=  comment | property | value

private comment ::= documentation_comment | option_comment | COMMENT

documentation_comment ::= DOCUMENTATION_START documentation_text ?{
  pin=1
  implements=["com.intellij.psi.PsiComment"]
  methods=[getTokenType]
}
documentation_text ::= DOCUMENTATION_TOKEN

option_comment ::= OPTION_START option_comment_item{
  pin=1
  recoverWhile=option_comment_recover
  implements=["com.intellij.psi.PsiComment"]
  methods=[getTokenType]
}
private option_comment_item ::= option | value
private option_comment_recover ::= !(BOOLEAN_TOKEN | COMMENT | DOCUMENTATION_START | FLOAT_TOKEN | INT_TOKEN | LEFT_BRACE | OPTION_KEY_TOKEN | OPTION_START | PROPERTY_KEY_TOKEN | RIGHT_BRACE | STRING_TOKEN)

option ::= option_key option_separator value{
  pin=1
  mixin="icu.windea.pls.cwt.psi.impl.CwtNamedElementImpl"
  implements="icu.windea.pls.cwt.psi.CwtNamedElement"
  methods=[getIcon getName setName getNameIdentifier getOptionName getOptionValue getOptionTruncatedValue getSeparatorType]
}
option_key ::= OPTION_KEY_TOKEN{
  methods=[getValue]
}
private option_separator ::= EQUAL_SIGN | NOT_EQUAL_SIGN

property ::= property_key property_separator value {
  pin=1
  recoverWhile=property_recover
  mixin="icu.windea.pls.cwt.psi.impl.CwtNamedElementImpl"
  implements="icu.windea.pls.cwt.psi.CwtNamedElement"
  methods=[getIcon getPresentation getName setName getNameIdentifier getPropertyName getPropertyValue getPropertyTruncatedValue getSeparatorType]
}
property_key ::= PROPERTY_KEY_TOKEN{
  methods=[getValue]
}
private property_separator ::= EQUAL_SIGN | NOT_EQUAL_SIGN
private property_recover ::= !(BOOLEAN_TOKEN | COMMENT | DOCUMENTATION_START | FLOAT_TOKEN | INT_TOKEN | LEFT_BRACE | OPTION_KEY_TOKEN | OPTION_START | PROPERTY_KEY_TOKEN | RIGHT_BRACE | STRING_TOKEN)

value ::= boolean | number | string | block{
  methods=[getIcon getPresentation getValue getTruncatedValue]
}
boolean ::= BOOLEAN_TOKEN {
  extends=value
  methods=[getBooleanValue]
}
number ::= int | float {
  extends=value
}
int ::= INT_TOKEN {
  extends=number
  methods=[getIntValue]
}
float ::= FLOAT_TOKEN{
  extends=number
  methods=[getFloatValue]
}
string ::= STRING_TOKEN{
  extends=value
  mixin="icu.windea.pls.cwt.psi.impl.CwtNamedElementImpl"
  implements="icu.windea.pls.cwt.psi.CwtNamedElement"
  methods=[getValue getTruncatedValue getStringValue getName setName getNameIdentifier]
}
block ::= LEFT_BRACE block_item * RIGHT_BRACE {
  pin=1
  extends=value
  implements="com.intellij.psi.PsiListLikeElement"
  methods=[getValue getTruncatedValue isEmpty isNotEmpty isObject isArray getComponents]
}
private block_item ::= comment | property | option | value
