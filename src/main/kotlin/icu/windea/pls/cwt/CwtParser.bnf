{
	parserClass="icu.windea.pls.cwt.psi.CwtParser"
	extends="com.intellij.extapi.psi.ASTWrapperPsiElement"
	psiClassPrefix="Cwt"
	psiImplClassSuffix="Impl"
	psiPackage="icu.windea.pls.cwt.psi"
	psiImplPackage="icu.windea.pls.cwt.psi.impl"
	elementTypeHolderClass="icu.windea.pls.cwt.psi.CwtElementTypes"
	elementTypeClass="icu.windea.pls.cwt.psi.CwtElementType"
	tokenTypeClass="icu.windea.pls.cwt.psi.CwtTokenType"
	psiImplUtilClass="icu.windea.pls.cwt.psi.impl.CwtPsiImplUtil"
}

root ::= root_block ?
root_block ::= root_block_item + {
  implements="icu.windea.pls.cwt.psi.CwtBlockElement"
  methods=[getValue isEmpty isNotEmpty getComponents]
}
private root_block_item ::= comment | property | value {
  recoverWhile="#auto"
}

private comment ::= documentation_comment | option_comment | COMMENT

documentation_comment ::= DOCUMENTATION_START documentation_text ? {
  pin=1
  implements=["com.intellij.psi.PsiComment"]
  methods=[getTokenType]
}
documentation_text ::= DOCUMENTATION_TOKEN

option_comment ::= OPTION_START option_comment_item ? {
  pin=1
  implements=["com.intellij.psi.PsiComment"]
  methods=[getTokenType]
}
private option_comment_item ::= option | value

option ::= option_key option_separator value {
  pin=1
  methods=[
    optionKey="option_key" optionValue="value"
    getIcon getName getValue getSeparatorType
  ]
}
option_key ::= OPTION_KEY_TOKEN {
  methods=[getValue]
}
private option_separator ::= EQUAL_SIGN | NOT_EQUAL_SIGN

property ::= property_key property_separator value {
  pin=1
  recoverWhile="#auto"
  mixin="icu.windea.pls.cwt.psi.impl.CwtNamedElementImpl"
  implements="icu.windea.pls.cwt.psi.CwtNamedElement"
  methods=[
    propertyKey="property_key" propertyValue="value"
    getIcon getName setName getNameIdentifier getValue getSeparatorType
  ]
}
property_key ::= PROPERTY_KEY_TOKEN {
  methods=[getValue]
}
private property_separator ::= EQUAL_SIGN | NOT_EQUAL_SIGN

value ::= boolean | int | float | string | block {
  methods=[getIcon getValue]
}
boolean ::= BOOLEAN_TOKEN {
  extends=value
  methods=[getBooleanValue]
}
int ::= INT_TOKEN {
  extends=value
  methods=[getIntValue]
}
float ::= FLOAT_TOKEN {
  extends=value
  methods=[getFloatValue]
}
string ::= STRING_TOKEN {
  extends=value
  mixin="icu.windea.pls.cwt.psi.impl.CwtNamedElementImpl"
  implements="icu.windea.pls.cwt.psi.CwtNamedElement"
  methods=[getIcon getName setName getNameIdentifier getValue getStringValue]
}
block ::= LEFT_BRACE block_item * RIGHT_BRACE {
  pin=1
  extends=value
  implements="icu.windea.pls.cwt.psi.CwtBlockElement"
  methods=[getIcon getValue isEmpty isNotEmpty getComponents]
}
private block_item ::= comment | property | option | value{
  recoverWhile="#auto"
}
