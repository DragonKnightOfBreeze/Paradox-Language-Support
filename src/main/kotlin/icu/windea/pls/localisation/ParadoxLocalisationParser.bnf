//Stellaris官方本地化文件中本身就存在语法解析错误，需要保证存在错误的情况下仍然会解析后续的本地化文本，草

{
	parserClass="icu.windea.pls.localisation.psi.ParadoxLocalisationParser"
	extends="com.intellij.extapi.psi.ASTWrapperPsiElement"
	psiClassPrefix="ParadoxLocalisation"
	psiImplClassSuffix="Impl"
	psiPackage="icu.windea.pls.localisation.psi"
	psiImplPackage="icu.windea.pls.localisation.psi.impl"

	elementTypeHolderClass="icu.windea.pls.localisation.psi.ParadoxLocalisationElementTypes"
	elementTypeClass="icu.windea.pls.localisation.psi.ParadoxLocalisationElementType"
	tokenTypeClass="icu.windea.pls.localisation.psi.ParadoxLocalisationTokenType"
	psiImplUtilClass="icu.windea.pls.localisation.psi.impl.ParadoxLocalisationPsiImplUtil"
}

//规则定义可以忽略空白
//直接导向token的rule，在flex文件中需要使用对应的token
//即使idea提示不需要转义，一些字符在regexp中仍然需要转义

root ::= property_list *
//locale之前可以添加注释，wiki中的说明有误
property_list ::= COMMENT * locale property_item * {
  pin=2
  implements="com.intellij.psi.PsiListLikeElement"
  methods=[getIcon getComponents]
}
private property_item ::= COMMENT | property{
  recoverWhile="#auto"
}

locale ::= LOCALE_ID COLON {
  pin=1
  recoverWhile="#auto"
  methods=[getIcon getName setName getReference]
}

property ::= property_key COLON property_number? property_value {
  pin=1
  recoverWhile="#auto" 
  elementTypeFactory="icu.windea.pls.localisation.psi.ParadoxLocalisationStubElementTypes.getPropertyType"
  extends="icu.windea.pls.localisation.psi.impl.ParadoxLocalisationStubElementImpl<?>"
  implements="icu.windea.pls.localisation.psi.ParadoxLocalisationNamedElement"
  stubClass="icu.windea.pls.localisation.psi.ParadoxLocalisationStub"
  methods=[getIcon getName setName getNameIdentifier getTextOffset getCategory getValue]
}
//https://stellaris.paradoxwikis.com/Localisation_modding
//The number seen in vanilla files right after the colon can be omitted, as it is only useful for Paradox’s internal translation tracking
//https://twitter.com/Martin_Anward/status/1039175213773144066
private property_number ::= PROPERTY_NUMBER
property_key ::= PROPERTY_KEY_ID
property_value ::= LEFT_QUOTE property_value_item RIGHT_QUOTE{
  pin=1
}

private property_value_item ::= (rich_text | COLORFUL_TEXT_END) * //允许多余的彩色文本结束标记（"§!"）
rich_text ::= property_reference | command | icon | colorful_text | escape | string

string ::= STRING_TOKEN{
  extends=rich_text
}

escape ::= VALID_ESCAPE_TOKEN | INVALID_ESCAPE_TOKEN | DOUBLE_LEFT_BRACKET{
  extends=rich_text
}

//property reference
//see: https://stellaris.paradoxwikis.com/Localisation_modding#.24_Codes
//may be resolved to localisation / variable / system statistics in GUI elements 
property_reference ::= PROPERTY_REFERENCE_START [property_reference_name] [PIPE [property_reference_parameter]] PROPERTY_REFERENCE_END {
  pin=1
  extends=rich_text
  methods=[getName setName getReference]
}
private property_reference_name ::= command | PROPERTY_REFERENCE_ID
property_reference_parameter ::= PROPERTY_REFERENCE_PARAMETER_TOKEN //TODO check syntax

//icon
//see: https://stellaris.paradoxwikis.com/Localisation_modding#.C2.A3_Codes
icon ::= ICON_START icon_name [PIPE icon_frame] ICON_END {
  pin=1
  extends=rich_text
  methods=[getIcon getName setName getFrame getReference]
}
private icon_name ::= command | property_reference | ICON_ID //can be command / property reference
private icon_frame ::= ICON_FRAME | property_reference //can be property reference (resolved as parameter)

//command
//see: https://stellaris.paradoxwikis.com/Localisation_modding#Bracket_Commands
command ::= COMMAND_START command_expression? COMMAND_END{
  pin=1
  extends=rich_text
  implements="icu.windea.pls.localisation.psi.ParadoxLocalisationRichText"
}
private command_expression ::= (command_scope DOT)* command_field {
  pin=1
}
//noinspection BnfUnusedRule
command_identifier ::= {
  methods=[getPrevIdentifier getNextIdentifier]
}
command_scope ::= COMMAND_SCOPE_ID{
  extends=command_identifier
  methods=[getIcon getName setName getReference getPrevIdentifier getNextIdentifier]
}
command_field ::= COMMAND_FIELD_ID | property_reference { //can be property reference (resolved as parameter)
  extends=command_identifier
  methods=[getIcon getName setName getReference getPrevIdentifier getNextIdentifier]
}

//colorful_text
//see: https://stellaris.paradoxwikis.com/Localisation_modding#Color_Codes
colorful_text ::= COLORFUL_TEXT_START COLOR_ID colorful_text_item [COLORFUL_TEXT_END]{
  pin=1
  extends=rich_text
  methods=[getName getName setName getReference]
}
private colorful_text_item ::= rich_text *