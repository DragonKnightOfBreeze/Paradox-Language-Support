//Stellaris官方本地化文件中本身就存在语法解析错误，需要保证存在错误的情况下仍然会解析后续的本地化文本，草

{
	parserClass="icu.windea.pls.localisation.psi.ParadoxLocalisationParser"
	extends="com.intellij.extapi.psi.ASTWrapperPsiElement"
	psiClassPrefix="ParadoxLocalisation"
	psiImplClassSuffix="Impl"
	psiPackage="icu.windea.pls.localisation.psi"
	psiImplPackage="icu.windea.pls.localisation.psi.impl"

	elementTypeHolderClass="icu.windea.pls.localisation.psi.ParadoxLocalisationElementTypes"
	elementTypeClass="icu.windea.pls.localisation.psi.ParadoxLocalisationElementType"
	tokenTypeClass="icu.windea.pls.localisation.psi.ParadoxLocalisationTokenType"
	psiImplUtilClass="icu.windea.pls.localisation.psi.impl.ParadoxLocalisationPsiImplUtil"
}

//规则定义可以忽略空白
//直接导向token的rule，在flex文件中需要使用对应的token
//即使idea提示不需要转义，一些字符在regexp中仍然需要转义

//locale尽管实际上是必须的，为了兼容快速定义功能，改为可选
root ::= ROOT_COMMENT * [locale] property_list {
  pin=1
}
private property_list ::= property_item *
private property_item ::= END_OF_LINE_COMMENT | COMMENT | property

locale ::= LOCALE_ID COLON {
  pin=1
  mixin="icu.windea.pls.localisation.psi.impl.ParadoxLocalisationNamedElementImpl"
  implements="icu.windea.pls.localisation.psi.ParadoxLocalisationNamedElement"
  methods=[getIcon getName setName getNameIdentifier]
}

property ::= property_key COLON property_key_no? property_value {
  pin=1
  recoverWhile=property_recover
  elementTypeFactory="icu.windea.pls.localisation.psi.ParadoxLocalisationStubElementTypes.getPropertyType"
  extends="icu.windea.pls.localisation.psi.impl.ParadoxLocalisationStubElementImpl<?>"
  implements="icu.windea.pls.localisation.psi.ParadoxLocalisationNamedElement"
  stubClass="icu.windea.pls.localisation.psi.ParadoxLocalisationStub"
  methods=[getIcon getName setName getNameIdentifier getCategory getValue]
}
//https://stellaris.paradoxwikis.com/Localisation_modding
//The number seen in vanilla files right after the colon can be omitted, as it is only useful for Paradox’s internal translation tracking
//https://twitter.com/Martin_Anward/status/1039175213773144066
private property_key_no ::= NUMBER
property_key ::= PROPERTY_KEY_ID
property_value ::= LEFT_QUOTE property_value_item RIGHT_QUOTE{
  pin=1
}
//当前本地化属性解析失败时，需要跳过继续解析下一行
private property_recover ::= !(COMMENT | END_OF_LINE_COMMENT | PROPERTY_KEY_ID)

private property_value_item ::= (rich_text | COLORFUL_TEXT_END) * //允许多余的彩色文本结束标记（"§!"）
rich_text ::= property_reference | command | icon | sequential_number | colorful_text | escape | string

string ::= STRING_TOKEN{
  extends=rich_text
}

escape ::= VALID_ESCAPE_TOKEN | INVALID_ESCAPE_TOKEN | DOUBLE_LEFT_BRACKET{
  extends=rich_text
}

property_reference ::= PROPERTY_REFERENCE_START [property_reference_name] [PARAMETER_SEPARATOR [property_reference_parameter]] PROPERTY_REFERENCE_END {
  pin=1
  extends=rich_text
  methods=[getName setName getTextOffset getReference]
}
private property_reference_name ::= command | PROPERTY_REFERENCE_ID
property_reference_parameter ::= PROPERTY_REFERENCE_PARAMETER_TOKEN

icon ::= ICON_START icon_name [PARAMETER_SEPARATOR [icon_param]] ICON_END {
  pin=1
  extends=rich_text
  mixin="icu.windea.pls.localisation.psi.impl.ParadoxLocalisationNamedElementImpl"
  implements="icu.windea.pls.localisation.psi.ParadoxLocalisationNamedElement"
  methods=[getIcon getName setName getNameIdentifier getTextOffset getReference]
}
private icon_name ::= command | property_reference | ICON_ID
private icon_param ::= ICON_PARAMETER | property_reference

sequential_number ::= SEQUENTIAL_NUMBER_START SEQUENTIAL_NUMBER_ID SEQUENTIAL_NUMBER_END {
  pin=1
  extends=rich_text
  mixin="icu.windea.pls.localisation.psi.impl.ParadoxLocalisationNamedElementImpl"
  implements="icu.windea.pls.localisation.psi.ParadoxLocalisationNamedElement"
  methods=[getIcon getName setName getNameIdentifier getTextOffset]
}

command ::= COMMAND_START command_expression? COMMAND_END{
  pin=1
  extends=rich_text
  implements="icu.windea.pls.localisation.psi.ParadoxLocalisationRichText"
}
private command_expression ::= (command_scope COMMAND_SEPARATOR)* command_field {
  pin=1
}
//noinspection BnfUnusedRule
command_identifier ::= {
  methods=[getPrevIdentifier getNextIdentifier]
}
command_scope ::= COMMAND_SCOPE_ID{
  extends=command_identifier
  mixin="icu.windea.pls.localisation.psi.impl.ParadoxLocalisationNamedElementImpl"
  implements="icu.windea.pls.localisation.psi.ParadoxLocalisationNamedElement"
  methods=[getIcon getName setName getNameIdentifier getReference getPrevIdentifier getNextIdentifier]
}
command_field ::= property_reference | COMMAND_FIELD_ID{
  extends=command_identifier
  mixin="icu.windea.pls.localisation.psi.impl.ParadoxLocalisationNamedElementImpl"
  implements="icu.windea.pls.localisation.psi.ParadoxLocalisationNamedElement"
  methods=[getIcon getName setName getNameIdentifier getReference getPrevIdentifier getNextIdentifier]
}

colorful_text ::= COLORFUL_TEXT_START COLOR_ID colorful_text_item [COLORFUL_TEXT_END]{
  pin=1
  extends=rich_text
  mixin="icu.windea.pls.localisation.psi.impl.ParadoxLocalisationNamedElementImpl"
  implements="icu.windea.pls.localisation.psi.ParadoxLocalisationNamedElement"
  methods=[getName setName getNameIdentifier getTextOffset]
}
private colorful_text_item ::= rich_text *