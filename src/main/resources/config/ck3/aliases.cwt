# Single aliases

single_alias[trigger_clause] = {
    alias_name[trigger] = alias_match_left[trigger]
}

single_alias[effect_clause] = {
    alias_name[effect] = alias_match_left[effect]
}

single_alias[cost] = {
    ## cardinality = 0..1
    gold = int_value_field

    ## cardinality = 0..1
    piety = int_value_field

    ## cardinality = 0..1
    prestige = int_value_field
}

single_alias[character_modifier] = {
    ## push_scope = character
    alias_name[modifier] = alias_match_left[modifier]
}

single_alias[weighted_localisation_list] = {
    ## cardinality = 1..inf
    int = single_alias_right[localisation_list]
}

single_alias[localisation_list] = {
    ## cardinality = 1..inf
    localisation
}

single_alias[doctrine_character_modifier] = {
    doctrine = <doctrine>
    ## push_scope = character
    alias_name[modifier] = alias_match_left[modifier]
}

single_alias[complex_desc] = {
    ## cardinality = 0..inf
    desc = localisation
    ## cardinality = 0..inf
    triggered_desc = single_alias_right[triggered_desc]

    ## cardinality = 0..inf
    random_valid = {
        ## cardinality = 2..inf
        desc = localisation
    }

    ## cardinality = 0..inf
    first_valid = {
        ## cardinality = 1..inf
        triggered_desc = single_alias_right[triggered_desc]
        # This should probably be recursive, but referencing an alias in itself causes a parser crash.
        ## cardinality = 0..inf
        desc = localisation
    }
}

single_alias[triggered_desc] = {
    desc = localisation
    # We can omit the trigger. Common as the 'else' block in a first_valid block.
    ## cardinality = 0..inf
    trigger = {
        ## cardinality = 1..inf
        alias_name[trigger] = alias_match_left[trigger]
    }
}

single_alias[scaled_modifier] = {
    ## cardinality = 0..1
    scale = int_value_field
    ## push_scope = character
    alias_name[modifier] = alias_match_left[modifier]
}

single_alias[relation_flag_clause] = {
    ### Flag to interact with.
	flag = value[relation_flag]
    ### Target to interact with.
	target = scope[character]
    ### Relation to interact with.
	relation = <scripted_relation>
}

single_alias[regular_building_list] = {
    ## cardinality = 1..inf
    <building.regular>
}

single_alias[title_list] = {
    ## cardinality = 1..inf
    <title>
}

single_alias[added_modifier] = {
    modifier = <modifier_container>
    ## cardinality = 0..1
    enum[duration] = int
}

single_alias[title_change] = {
    holder = scope[character]
    change = scope[title_and_vassal_change]
    ## cardinality = 0..1
    take_baronies = bool
}

single_alias[random_traits_list] = {
    ## cardinality = 0..1
    count = int
    ## cardinality = 0..1
    count = { int int }
    ## cardinality = 0..inf
    <trait> = {
        ## cardinality = 0..1
        weight = alias_match_left[weight]
        ## cardinality = 0..inf
        alias_name[trigger] = alias_match_left[trigger]
    }
}

## scope = character
alias[modifier:ignore_negative_culture_opinion] = bool
## scope = character
alias[modifier:ignore_different_faith_opinion] = bool
## scope = { character combat }
alias[modifier:no_water_crossing_penalty] = bool