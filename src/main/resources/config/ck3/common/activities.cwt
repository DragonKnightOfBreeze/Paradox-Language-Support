types = {
    type[activity] = {
        path = "game/common/activity"
    }
}

activity = {
    # TODO: figure out, confirm bounds
    expiration_days = int[0..inf]

    # TODO: figure out, confirm default
    ## cardinality = 0..1
    ### If yes, ???. Defaults to no.
    has_activity_window = bool

    # TODO: figure out, confirm default
    ## cardinality = 0..1
    ### If yes, ???. Defaults to no.
    solo = bool

    # TODO: figure out, confirm bounds
    ## cardinality = 0..1
    days_until_auto_start = int[0..inf]

    # TODO: figure out, figure out the bounds
    frame = int

    # TODO: alias for colour; probably not as rigid as activities make it look (see interface files for comp.)
    # TODO: figure out
    color = {
        ## cardinality = 4..4
        float
    }

    # TODO: figure out
    ## cardinality = 0..1
    ## replace_scope = { ROOT = activity THIS = activity }
    valid = single_alias_right[trigger_clause]

    # TODO: figure out, confirm cardinality
    ## replace_scope = { ROOT = activity THIS = activity }
    on_spawn = single_alias_right[effect_clause]

    # TODO: figure out, confirm cardinality
    ## replace_scope = { ROOT = activity THIS = activity }
    on_activate = single_alias_right[effect_clause]

    # TODO: figure out, confirm cardinality
    ## replace_scope = { ROOT = activity THIS = activity }
    on_complete = single_alias_right[effect_clause]

    # TODO: figure out
    ## cardinality = 0..1
    ## replace_scope = { ROOT = activity THIS = activity }
    on_expire = single_alias_right[effect_clause]

    # TODO: figure out
    ## cardinality = 0..1
    ## replace_scope = { ROOT = activity THIS = activity }
    on_participant_death = single_alias_right[effect_clause]

    # TODO: figure out
    ## cardinality = 0..1
    ## replace_scope = { ROOT = activity THIS = activity }
    on_invalidated = single_alias_right[effect_clause]
}