types = {
	type[legacy] = {
        path = "game/common/dynasty_legacies"
        localisation = {
            ## required
            ## primary
            Name = "$_name"
		}
	}
	type[dynasty_perk] = {
		path = "game/common/dynasty_perks"
        localisation = {
            ## required
            ## primary
            Name = "$_name"
		}
	}
}

legacy = {
}

dynasty_perk = {
    ### Which legacy the perk belongs to.
    legacy = <legacy>

    # TODO: Are these actually scoped to the dynasty head?
    ## cardinality = 0..1
    ## push_scope = character
    ### Trigger for picking the perk, scope is the dynasty head.
    can_be_picked = single_alias_right[trigger_clause]
    ## cardinality = 0..1
    ## push_scope = character
    ### Run on unlock. Scope is the dynasty head.
    effect = single_alias_right[effect_clause]

    ## cardinality = 0..1
    ### Applied to characters in dynasties with the perk
    character_modifier = single_alias_right[character_modifier]
    ## cardinality = 0..inf
    ### Unlocks the given MaA for everyone in the dynasty and also locks it for everyone without the perk.
    unlock_maa = <regiment_type>

    ## cardinality = 0..1
    ## push_scope = character
    ### Script value for weight for selection by the AI. Defaults to 1000.
    ai_chance = int_value_field
    ## cardinality = 0..1
    ## push_scope = character
    ### Dynasty prestige cost for selecting the perk.
    cost = int_value_field

    ## cardinality = 0..1
    ### If you do this, traits will be selectable when unlocking this perk. The selected trait will be saved as a variable in the dynasty, like this: var:<perk_key>_<trait_key>. E.G., var:blood_4_beauty_good_1. The number on the right is the AI chance; at least one trait needs to have a non-zero chance.
    traits = {
        ## cardinality = 1..inf
        <trait> = int
    }
    # TODO: Is this useful?
    ## cardinality = 0..1
    ### Found in documentation, have no clue if this is useful at all.
    trait = scalar
}