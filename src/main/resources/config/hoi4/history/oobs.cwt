types = {
	type[oob] = {
		path = "game/history/units"
		type_per_file = yes
	}
}

oob = {
	## cardinality = 0..1
	start_equipment_factor = float

	## cardinality = 0..1
	focus = {
		current = <focus>
		progress = float[0..inf]
	}

	## cardinality = 0..inf
	division_template = {
		name = scalar
		## cardinality = 0..1
		division_names_group = <division_name>
		## cardinality = 0..1
		template_counter = int
		## cardinality = 0..1
		is_locked = bool
		regiments = {
			## cardinality = 1..25
			<unit> = { x = int[0..5] y = int[0..5] }
		}
		## cardinality = 0..1
		support = {
			## cardinality = ~1..5
			<unit> = { x = int[0..5] y = int[0..5] }
		}
		## cardinality = 0..1
		template_counter = int
		## cardinality = 0..1
		priority = int
	}

	## cardinality = 0..1
	instant_effect = {
		alias_name[effect] = alias_match_left[effect]
	}

	## cardinality = 0..1
	units = {
		## cardinality = 0..inf
		division = {
			## cardinality = 0..1
			name = scalar
			## cardinality = 0..1
			division_name = {
				is_name_ordered = bool
				## cardinality = 0..1
				name_order = int
			}
			location = enum[provinces]
			division_template = scalar
			## cardinality = 0..1
			start_experience_factor = float[0..1]
			## cardinality = 0..1
			start_equipment_factor = float
			## cardinality = 0..inf
			force_equipment_variants = {
				## cardinality = ~1..inf
				<equipment.regular_equip> = {
					owner = enum[country_tags]
					## cardinality = 0..1
					creator = enum[country_tags]
				}
			}
		}

		## cardinality = 0..inf
		fleet = {
			name = scalar
			naval_base = enum[provinces]
			## cardinality = ~1..inf
			task_force = {
				name = scalar
				location = enum[provinces]
				## cardinality = 1..inf
				ship = {
					## cardinality = 0..1
					name = scalar
					## cardinality = 0..1
					ordered_name = scalar
					## cardinality = 0..1
					pride_of_the_fleet = yes
					definition = <unit.ship_unit>
					## cardinality = 0..1
					start_experience_factor = float[0..1]
					equipment = {
						<equipment.naval_equip> = {
							amount = int
							owner = enum[country_tags]
							## cardinality = 0..1
							version_name = scalar
							## cardinality = 0..1
							creator = enum[country_tags]
						}
					}
					## cardinality = 0..1
					air_wings = {
						# should have something to force ace to be directly after <equipment.air_equip>

						## cardinality = 0..inf
						<equipment.air_equip> = {
							owner = enum[country_tags]
							## cardinality = 0..1
							creator = enum[country_tags]
							amount = int
						}
						## cardinality = 0..inf
						### Order is important. Ace will be assigned to the wing above.
						ace = {
							modifier = <ace>
							name = localisation_inline
							surname = localisation_inline
							## cardinality = 0..1
							callsign = localisation_inline
							## cardinality = 0..1
							portrait = int
							## cardinality = 0..1
							is_female = yes
						}
						## cardinality = 0..inf
						### Order is important. start_experience_factor will be assigned to the ace above.
						start_experience_factor = float[0..1]
					}
				}
			}
		}
	}

	## cardinality = 0..1
	air_wings = {
		## cardinality = 1..inf
		<state> = {
			# should have something to force ace to be directly after <equipment.air_equip>

			## cardinality = 1..inf
			<equipment.air_equip> = {
				owner = enum[country_tags]
				## cardinality = 0..1
				creator = enum[country_tags]
				amount = int
			}
			## cardinality = 0..inf
			### Order is important. Ace will be assigned to the wing above.
			ace = {
				modifier = <ace>
				name = localisation_inline
				surname = localisation_inline
				## cardinality = 0..1
				callsign = localisation_inline
				## cardinality = 0..1
				portrait = int
				## cardinality = 0..1
				is_female = yes
			}
			## cardinality = 0..inf
			### Order is important. start_experience_factor will be assigned to the ace above.
			start_experience_factor = float[0..1]
		}
	}

	## cardinality = 0..inf
	navy_leader = {
		name = scalar
		## cardinality = 0..1
		desc = localisation
		## cardinality = 0..1
		picture = scalar
		## cardinality = 0..1
		portrait_path = scalar
		## cardinality = 0..1
		flags = {
			## cardinality = ~1..inf
			value_set[leader_flag] = {
				value = 1
			}
		}
		## cardinality = 0..1
		gfx = scalar
		### Sets starting traits for this leader. If empty, sets no traits. If missing, assigns a random trait.
		traits = {
			## cardinality = 0..inf
			<unit_leader_trait>
		}
		## cardinality = ~1..1
		skill = int
		## cardinality = ~1..1
		attack_skill = int
		## cardinality = ~1..1
		defense_skill = int
		## cardinality = ~1..1
		maneuvering_skill = int
		## cardinality = ~1..1
		coordination_skill = int
		## cardinality = 0..1
		id = value_set[unit_leader_ids]
		## cardinality = 0..1
		female = bool
	}

	## cardinality = 0..inf
	field_marshal = {
		name = scalar
		## cardinality = 0..1
		desc = localisation
		## cardinality = 0..1
		picture = scalar
		## cardinality = 0..1
		portrait_path = scalar
		## cardinality = 0..1
		flags = {
			## cardinality = ~1..inf
			value_set[leader_flag] = {
				value = 1
			}
		}
		## cardinality = 0..1
		gfx = scalar
		### Sets starting traits for this leader. If empty, sets no traits. If missing, assigns a random trait.
		traits = {
			## cardinality = 0..inf
			<unit_leader_trait>
		}
		## cardinality = ~1..1
		skill = int
		## cardinality = ~1..1
		attack_skill = int
		## cardinality = ~1..1
		defense_skill = int
		## cardinality = ~1..1
		planning_skill = int
		## cardinality = ~1..1
		logistics_skill = int
		## cardinality = 0..1
		id = value_set[unit_leader_ids]
		## cardinality = 0..1
		female = bool
	}

	## cardinality = 0..inf
	corps_commander = {
		## cardinality = 0..1
		name = scalar
		## cardinality = 0..1
		desc = localisation
		## cardinality = 0..1
		picture = scalar
		## cardinality = 0..1
		portrait_path = scalar

		## cardinality = 0..1
		flags = {
			## cardinality = ~1..inf
			value_set[leader_flag] = {
				value = 1
			}
		}

		## cardinality = 0..1
		gfx = scalar
		### Sets starting traits for this leader. If empty, sets no traits. If missing, assigns a random trait.
		traits = {
			## cardinality = 0..inf
			<unit_leader_trait>
		}
		## cardinality = ~1..1
		skill = int
		## cardinality = ~1..1
		attack_skill = int
		## cardinality = ~1..1
		defense_skill = int
		## cardinality = ~1..1
		planning_skill = int
		## cardinality = ~1..1
		logistics_skill = int
		## cardinality = 0..1
		id = value_set[unit_leader_ids]
		## cardinality = 0..1
		female = bool
	}
}
