types = {
	## type_key_filter = light
	type[light] = {
		path = "game/gfx/entities"
		path = "game/gfx/models"
		name_field = "name"
	}
}

light = {
	name = scalar

	color = {
		r = { float }
		g = { float }
		b = { float }
	}

	## cardinality = 0..1
	alias_name[intensity] = alias_match_left[intensity]

	radius = float
	falloff = float
	## cardinality = 0..1
	duration = float

	position = {
		x = int
		y = int
		z = int
	}

	## cardinality = 0..1
	animation = {
		name = scalar
		start = float
		duration = float

		## cardinality = 0..1
		repeat = bool
		op = enum[animation_op]

		## cardinality = 0..1
		minValue = float

		## cardinality = 0..1
		maxValue = float

		curve = {
			## cardinality = 4..inf
			float
		}
	}
}

alias[intensity:intensity] = scalar #TODO #int,<light_animation>
alias[intensity:intensity] = int
alias[intensity:intensity] = enum[light_animations]

enums = {
	enum[animation_op] = {
		"MUL"
		"ADD"
		"ABS"
	}
	complex_enum[light_animations] = {
		path = "game/gfx/entities"
		path = "game/gfx/models"
		name = {
			animation = {
				name = enum_name
			}
		}
	}
}
