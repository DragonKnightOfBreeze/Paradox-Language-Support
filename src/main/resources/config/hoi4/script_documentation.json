{
	"effects":	{
		"add_legitimacy":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"add_legitimacy = 10. Adds legitimacy to scope country. Value has to be 0-100."
		},
		"add_stability":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Adds the stability to the country in scope. Example: add_stability = 5"
		},
		"add_manpower":	{
			"supported_scope":	["STATE", "COUNTRY"],
			"supported_target":	["none"],
			"description":	"Adds manpower to the country in scope or locally on a state if in state scope"
		},
		"custom_effect_tooltip":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Shows just a custom tooltip"
		},
		"set_capital":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"move capital to state"
		},
		"add_state_core":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"add core on state"
		},
		"remove_state_core":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"remove core on state"
		},
		"change_tag_from":	{
			"supported_scope":	["any"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Changes player to other country"
		},
		"add_province_modifier":	{
			"supported_scope":	["STATE"],
			"supported_target":	["none"],
			"description":	"Adds static modifiers to specified province.\nadd_province_modifier = {\n\tstatic_modifiers = { mod_1 mod_2 }\nSelect 1 province:\n\tprovince = 500\nOr use:\n\tprovince = {\n\t\tid = 500 id = 501 id = 502 (evaluate for specified provinces)\n\t\tall_provinces (includes all in current state)\n\t\tlimit_to_coastal (only coastal provinces)\n\t\tlimit_to_border (only provinces bordering different country)\n\t\tlimit_to_naval_base (only provinces with a naval base)\n\t\tlimit_to_victory_point (only provinces with a VP)\n\t}\n}"
		},
		"set_country_flag":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"set country flag"
		},
		"clr_country_flag":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"clear country flag"
		},
		"set_global_flag":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"set global flag"
		},
		"clr_global_flag":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"clear global flag"
		},
		"remove_building":	{
			"supported_scope":	["STATE", "COUNTRY"],
			"supported_target":	["none"],
			"description":	"Removes specified building in specified state or province"
		},
		"release":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"releases specified country as a puppet using your owned states"
		},
		"every_country":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Executes children effects on every country that fulfills the \"limit\" trigger. tooltip=key can be defined to override tooltip title."
		},
		"random_country":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Executes children effects on random country that fulfills the \"limit\" trigger."
		},
		"every_neighbor_country":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Executes children effects on every neighbor country that fulfills the \"limit\" trigger. tooltip=key can be defined to override tooltip title"
		},
		"random_neighbor_country":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Executes children effects on random neighbor country that fulfills the \"limit\" trigger."
		},
		"every_enemy_country":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Executes children effects on random enemy country that fulfills the \"limit\" trigger. tooltip=key can be defined to override tooltip title"
		},
		"random_enemy_country":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Executes children effects on random enemy country that fulfills the \"limit\" trigger."
		},
		"country_event":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Fires a country event.\nExample:\ncountry_event = {\n\tid = germany.75 # The event to fire.\n\t# Optional Fields:\n\thours = 12 # The number of hours to wait before firing the event.\n\tdays = 5 # The number of days to wait before firing the event.\n\tmonths = 1 # The number of months to wait before firing the event, where a month is treated as 30 days.\n\t# Note:  hours, days, and months can all be used and will simply be added together.\n\trandom_hours = 18 # A random amount of hours to be added to the delay before firing, from 0 up to but not including random_hours.\n\trandom_days = 2 # A random amount of days to be added to the delay before firing, from 0 up to but one hour less than random_days.\n\t# Note:  random_hours and random_days can both be used and will simply be added together.\n\trandom = 6 # Equivalent to random_hours; preserverd for backwards compatibility.\n\trandom = { chance = 50 ... } # Specify a set of child effects to execute as part of this effect, with a percentage chance of randomly happening or not (as a group, not individually).\n\ttooltip = germany.75.t # Manually specify which tooltip to use for this effect.\n}\n"
		},
		"state_event":	{
			"supported_scope":	["STATE", "COUNTRY"],
			"supported_target":	["none"],
			"description":	"Fires a state event.\nExample:\nstate_event = {\n\tid = usa.61 # The event to fire.\n\t# Optional Fields:\n\thours = 12 # The number of hours to wait before firing the event.\n\tdays = 5 # The number of days to wait before firing the event.\n\tmonths = 1 # The number of months to wait before firing the event, where a month is treated as 30 days.\n\t\t# Note:  hours, days, and months can all be used and will simply be added together.\n\trandom_hours = 18 # A random amount of hours to be added to the delay before firing, from 0 up to but not including random_hours.\n\trandom_days = 2 # A random amount of days to be added to the delay before firing, from 0 up to but one hour less than random_days.\n\t\t# Note:  random_hours and random_days can both be used and will simply be added together.\n\trandom = 6 # Equivalent to random_hours; preserverd for backwards compatibility.\n\trandom = { chance = 50 ... } # Specify a set of child effects to execute as part of this effect, with a percentage chance of randomly happening or not (as a group, not individually).\n\ttooltip = usa.61.t # Manually specify which tooltip to use for this effect.\n\ttrigger_for = GER # Indicate which country this state effect applies to. Value can be any of the following:\n\t\t# controller - The country that currently controls the state.\n\t\t# owner - The country that currently owns the state.\n\t\t# occupied - The country that has been occupied in the state by the current controller.\n\t\t# from - The country of the from scope.\n\t\t# prev - The country of the prev scope.\n\t\t# root - The country of the root scope.\n\t\t# TAG - A hard-coded country tag such as GER or ENG.\n}\n"
		},
		"remove_province_modifier":	{
			"supported_scope":	["STATE"],
			"supported_target":	["none"],
			"description":	"Removes a static modifiers to specified province\nremove_province_modifier = {\n\tstatic_modifiers = { mod_1 mod_2 }\nSelect 1 province:\n\tprovince = 500\nOr use:\n\tprovince = {\n\t\tid = 500 id = 501 id = 502 (evaluate for specified provinces)\n\t\tall_provinces (includes all in current state)\n\t\tlimit_to_coastal (only coastal provinces)\n\t\tlimit_to_border (only provinces bordering different country)\n\t\tlimit_to_naval_base (only provinces with a naval base)\n\t\tlimit_to_victory_point (only provinces with a VP)\n\t}\n}"
		},
		"set_variable":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Sets a variable to a value or another variable\nExample: set_variable = {\nvar = num_dogs\n\tvalue = 42\n\ttooltip = loc_str_id_with_LEFT_and_RIGHT  #localized text with LEFT and RIGHT tokens in it, tokens will replaced by values\n}"
		},
		"add_ai_strategy":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Adds strategy entry to country AI"
		},
		"random":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"a random effect"
		},
		"random_list":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Picks a random effect from the list based on the weight associated.\nThe weight can be a variable valid in the current scope.\nExample:\nrandom_list = {\n\t# enable logging the dice role in game.log\n\tlog = yes\n\tseed = var_name/const/random #if specified, it will use this seed instead of scope seed for picking a random\n\t# some effect with an associated weight\n\t10 = { add_political_power=10 }\n\t10 = { add_political_power=100 }\n\tsome_var = { add_political_power=1000 }\n}"
		},
		"white_peace":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"white peaces the two countries if at war"
		},
		"hidden_effect":	{
			"supported_scope":	["STATE", "COUNTRY"],
			"supported_target":	["none"],
			"description":	"Effect not shown in tooltips"
		},
		"if":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"a conditional effect"
		},
		"add_state_claim":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"add claim on state"
		},
		"remove_state_claim":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"remove claim on state"
		},
		"add_opinion_modifier":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["any"],
			"description":	"Add opinion modifier(s) to target(s)"
		},
		"remove_opinion_modifier":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["any"],
			"description":	"Remove opinion modifier from target"
		},
		"create_country_leader":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"creates a leader and adds it to proper party in country\n\nExample:\ncreate_country_leader = {\n\tname = \"Leader Name\"\n\tdesc = \"LEADER_DESC_LOCALIZATION_TAG\"\n\tpicture = \"Portrait_leader_name.dds\" # picture = \"....\" also supported for backwards compatibility\n\texpire = \"1965.1.1\"\n\tideology = despotism\n\ttraits = {\n\t\tthe_director\n\t}\n}"
		},
		"log":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Print message to game.log, console (if visible) and history logger (if running. you can use category|log to specify a category), Can be localized"
		},
		"create_unit":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Create unit effect, just like in OOB, example: \ncreate_unit = { \n\t# unit detauls \n\tdivision = \"name = \\\"1. Northern Redemption Army\\\" division_template = \\\"Redemption Army\\\" start_experience_factor = 0.5\" \n\t# country to spawn unit for \n\towner = MAN \n\t \n\t \n\t# a prov id can be specified \n\tprioritize_location = 12406 \n\t \n\t# can be set to yes to be able to spawn units on enemy provs. \n\tallow_spawning_on_enemy_provs = no \n\t# province controllers can be scored using this scorer. otherwise it will prio your owned provs first, friendly provs second.  \n\t# it will also prio provs with scores and less units firstl \n\tcountry_score = { \n\t\tbase = 100 \n\t\t \n\t\tmodifier = { \n\t\t\ttag = MAN \n\t\t\tadd = 100 \n\t\t} \n\t} \n   count = 1 # can be specified to spawn more than one units \n   id = 42 # an id can be given to delete units later on}"
		},
		"sound_effect":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Plays sound effect"
		},
		"promote_leader":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["none"],
			"description":	"promotes general to field marshal"
		},
		"randomize_weather":	{
			"supported_scope":	["any"],
			"supported_target":	["any"],
			"description":	"Randomize weather effect"
		},
		"division_template":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"add a division template to country"
		},
		"set_country_leader_ideology":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"change the ideology of active leader"
		},
		"add_country_leader_trait":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"add trait to active country leader"
		},
		"remove_country_leader_trait":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"remove trait from active country leader"
		},
		"set_political_party":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"set popularity of a political party\n\nExample:\nset_political_party = {\n\tideology = neutrality\n\tpopularity = 50\n}"
		},
		"set_politics":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"set country political status"
		},
		"add_ideas":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"add idea(s) to country"
		},
		"remove_ideas":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"remove idea(s) from country"
		},
		"add_political_power":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"add political power to country"
		},
		"set_political_power":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"set political power for country"
		},
		"set_technology":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"sets technology level(s) on country. example : set_technology = { \n\tinfantry_weapons = 1 \n\tinfantry_weapons1 = 1 \n\tinfantry_weapons2 = 1 \n\timproved_infantry_weapons = 1 \n\tpopup = no # default is yes. if set to no, no pop up will display for player \n}"
		},
		"gain_xp":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["any"],
			"description":	"Grant experience to the scoped in unit leader. Cannot be used to remove experience.\nThe unit leader is promoted to the next skill level if applicable.\nExample:\ngain_xp = 5\n"
		},
		"create_navy_leader":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"create navy leader for country"
		},
		"remove_unit_leader_trait":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["none"],
			"description":	"remove trait from unit leader"
		},
		"add_unit_leader_trait":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["none"],
			"description":	"add trait to unit leader"
		},
		"add_namespace":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"adds new namespace"
		},
		"set_state_owner":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"set owner for state"
		},
		"delete_unit":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"delete units of a country. no tooltip is generated. example: \n\nExample:\ndelete_unit = { \n\ttemplate = template_name # can be filtered a specific template \n\tid = 42 # can be filtered to a given id in create unit effect \n\tstate = 64 # can be filtered by a given state \n\tdisband = yes # default is no. if set to yes the game will refund equipment/manpower\n}"
		},
		"puppet":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"puppets specified country"
		},
		"set_state_controller":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"set controller for state"
		},
		"transfer_state":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"set owner and controller for state"
		},
		"set_state_flag":	{
			"supported_scope":	["STATE"],
			"supported_target":	["none"],
			"description":	"set state flag"
		},
		"clr_state_flag":	{
			"supported_scope":	["STATE"],
			"supported_target":	["none"],
			"description":	"clear state flag"
		},
		"create_faction":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"create faction of specified name"
		},
		"add_nuclear_bombs":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"add nukes to country"
		},
		"annex_country":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	""
		},
		"add_building_construction":	{
			"supported_scope":	["STATE"],
			"supported_target":	["none"],
			"description":	"Starts building construction for amount of levels in specified state or province"
		},
		"dismantle_faction":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"dismantle faction led by the current country"
		},
		"add_to_faction":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"adds specified country to faction"
		},
		"remove_from_faction":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"removes specified country from faction"
		},
		"give_guarantee":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"guarantees specified country"
		},
		"give_military_access":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"gives military access to the specified country"
		},
		"random_state":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Executes children effects on a random state that fulfills the \"limit\" trigger.\nState ids can be specified with the \"prioritize\" attribute and they will be\npicked first if they fulfill the trigger.\n"
		},
		"random_owned_state":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Executes children effects on random owned state that fulfills the \"limit\" trigger. \nprioritize = { <stateID> <stateID> } to pick those states first if they fulfull the limit"
		},
		"random_neighbor_state":	{
			"supported_scope":	["STATE"],
			"supported_target":	["none"],
			"description":	"Executes children effects on random neighbor state that fulfills the \"limit\" trigger."
		},
		"every_state":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Executes children effects on every state that fulfills the \"limit\" trigger. tooltip=key can be added to override tooltip title"
		},
		"every_owned_state":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Executes children effects on every owned state that fulfills the \"limit\" trigger. tooltip=key can be added to override tooltip title"
		},
		"every_neighbor_state":	{
			"supported_scope":	["STATE"],
			"supported_target":	["none"],
			"description":	"Executes children effects on every neighbor state that fulfills the \"limit\" trigger. tooltip=key can be added to override tooltip title"
		},
		"news_event":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Fires a news event.\nExample:\nnews_event = {\n\tid = news.251 # The event to fire.\n\t# Optional Fields:\n\thours = 12 # The number of hours to wait before firing the event.\n\tdays = 5 # The number of days to wait before firing the event.\n\tmonths = 1 # The number of months to wait before firing the event, where a month is treated as 30 days.\n\t\t# Note:  hours, days, and months can all be used and will simply be added together.\n\trandom_hours = 18 # A random amount of hours to be added to the delay before firing, from 0 up to but not including random_hours.\n\trandom_days = 2 # A random amount of days to be added to the delay before firing, from 0 up to but one hour less than random_days.\n\t\t# Note:  random_hours and random_days can both be used and will simply be added together.\n\trandom = 6 # Equivalent to random_hours; preserverd for backwards compatibility.\n\trandom = { chance = 50 ... } # Specify a set of child effects to execute as part of this effect, with a percentage chance of randomly happening or not (as a group, not individually).\n\ttooltip = news.251.t # Manually specify which tooltip to use for this effect.\n}\n"
		},
		"declare_war_on":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"declares war on specified country"
		},
		"add_scaled_political_power":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"add political power to country scaled by the difference in IC between the receiver and another country"
		},
		"hold_election":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Immediately holds an election in the target country"
		},
		"add_popularity":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"add popularity to an ideology in a country\n\nExample:\nadd_popularity = {\n\tideology = neutrality\n\tpopularity = 0.05\n}"
		},
		"remove_ideas_with_trait":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Remove all ideas with specified trait from country"
		},
		"start_civil_war":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Given ideology starts a civil war in the country.\nstart_civil_war = {\n\tideology = revolting ideology\n\truling party = ruling party for country\n\tsize = 0-1 Size modifier of the revolt. Affects stockpile, army, air and navy as well\n\tarmy_ratio = 0-1 Overrides size modifier for army\n\tnavy_ratio = 0-1 Overrides size modifier for navy\n\tair_ratio = 0-1 Overrides size modifier for air\n\tkeep_unit_leaders specify ID of unit leaders that remain with the original country\n\tkeep_unit_leaders_trigger Trigger for unit leaders to remain with the original country\n\tstates States that go to the revolter. Use \"all\" to include all states.\n\tstates_filter States that go to the revolter. Filtering trigger on the states scripted to go to the revolter.\n\t ... effect list ... # you can list effects that will run on civil war country\n}"
		},
		"retire_country_leader":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"retires a country leader and removes him as leader of his party, making the next in line the new party and country leader"
		},
		"kill_country_leader":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"kills a country leader and removes him completely, making the next in line the new party and country leader"
		},
		"release_puppet":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"releases specified country as puppet using states you own"
		},
		"create_wargoal":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"creates wargoal for country in scope"
		},
		"add_claim_by":	{
			"supported_scope":	["STATE"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Add state claim by country."
		},
		"remove_claim_by":	{
			"supported_scope":	["STATE"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Removes state claim by country."
		},
		"add_core_of":	{
			"supported_scope":	["STATE"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Add state as core of country"
		},
		"remove_core_of":	{
			"supported_scope":	["STATE"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Removes state as core of country"
		},
		"army_experience":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"add army experience for country"
		},
		"navy_experience":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"add naval experience for country"
		},
		"air_experience":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"add air experience for country"
		},
		"save_event_target_as":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"save an event target"
		},
		"save_global_event_target_as":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"save a global event target"
		},
		"clear_global_event_target":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"clear a global event target"
		},
		"clear_global_event_targets":	{
			"supported_scope":	["any"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"clear all global event targets"
		},
		"unlock_national_focus":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"unlocks a focus for a country"
		},
		"add_tech_bonus":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"adds a limited use tech bonus"
		},
		"set_demilitarized_zone":	{
			"supported_scope":	["STATE"],
			"supported_target":	["none"],
			"description":	"sets the demilitarized status for currently scoped state"
		},
		"add_research_slot":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Adds a research slot (negative values subtracts)"
		},
		"set_research_slots":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Sets the number of research slots"
		},
		"set_border_war":	{
			"supported_scope":	["STATE"],
			"supported_target":	["none"],
			"description":	"starts a border war in a state with neighbouring state that also has border war"
		},
		"set_equipment_fraction":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Modify all equipments by factor"
		},
		"add_threat":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Adds country threat"
		},
		"send_equipment":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Sends to target scope specified amount of equipment."
		},
		"set_rule":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Adds rule to country"
		},
		"diplomatic_relation":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Set up a diplomatic relation between two nations. Example: \ndiplomatic_relation = { \n\tcountry = POR #target country\n\trelation = military_access #type of relation\n\tactive = yes #yes to add relation, no to cancel existing one\n}"
		},
		"effect_tooltip":	{
			"supported_scope":	["STATE", "COUNTRY"],
			"supported_target":	["any"],
			"description":	"Shows just tooltip of effects"
		},
		"add_resource":	{
			"supported_scope":	["STATE", "COUNTRY"],
			"supported_target":	["none"],
			"description":	"Adds/removes resource production to state\n\nExample:\nadd_resource = {\n  type = steel #resource type to add/destroy  amount = 5 #amount to add\n  state = 42 #can be also read from scope\n  days = 60 #a resource can be added/removed temporarily}\n"
		},
		"remove_unit_leader":	{
			"supported_scope":	["COUNTRY", "UNIT_LEADER"],
			"supported_target":	["none"],
			"description":	"remove a unit leader ( remove_unit_leader=ID )"
		},
		"add_timed_idea":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"add time limited idea to country idea, add_timed_idea = { idea = id days = number_of_days }"
		},
		"end_puppet":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Stops specefied country being a puppet of current country"
		},
		"load_oob":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Immediately loads an Order of Battle (OOB) file.\n\nExample:\nload_oob = \"ENG_1936\""
		},
		"create_import":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Creates trade between two countries"
		},
		"add_named_threat":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Adds country threat"
		},
		"set_province_controller":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"set controller for province"
		},
		"set_major":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"sets mandatory major country flag"
		},
		"create_field_marshal":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"create field marshal for country"
		},
		"create_corps_commander":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"create corps commander for country"
		},
		"goto_province":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Goes to stated province."
		},
		"goto_state":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Goes to stated state."
		},
		"leave_faction":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Country leaves the faction"
		},
		"complete_national_focus":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"unlocks a focus for a country"
		},
		"set_party_name":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"change partyname for an ideology in a country"
		},
		"add_extra_state_shared_building_slots":	{
			"supported_scope":	["STATE"],
			"supported_target":	["none"],
			"description":	"add extra shared building slot to state"
		},
		"reverse_add_opinion_modifier":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["any"],
			"description":	"Add opinion modifier(s) to target(s)"
		},
		"add_to_war":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"adds country to the specified war"
		},
		"show_ideas_tooltip":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"show what idea does"
		},
		"create_equipment_variant":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Creates a new equipment variant.\nExample:\ncreate_equipment_variant = {\n\tname = \"Yorktown Class\"\n\ttype = ship_hull_carrier_2\n\tparent_version = 1  #default = 0\n\tobsolete = yes      #default = no\n\tname_group = ship_name_group_name      #default = empty/none\n\trole_icon_index = 3      #default just inherits from parent or remains unset\n\trole_icon_index = 0      #alternative, explicitly unset\n\trole_icon_index = auto   #uses AI design logic to pick\n\tupgrades = {        #optional, inherits from parent\n\t\tship_deckspace_upgrade = 1\n\t\tcarrier_armor_upgrade = 2\n\t}\n\tmodules = {         #optional, inherits from parent\n\t\tfixed_ship_deck_slot_1 = ship_deck_space\n\t\tfront_1_custom_slot = ship_armor_carrier_deck\n\t\tfixed_ship_deck_slot_2 = empty #overrides parent\n\t}\n}"
		},
		"add_equipment_production":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Adds an equipment production"
		},
		"add_ace":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"adds an air ace"
		},
		"random_owned_controlled_state":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Executes children effects on random owned and controlled state that fulfills the \"limit\" trigger.\nprioritize = { <stateID> <stateID> } to pick those states first if they fulfull the limit"
		},
		"ai_message":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"ai message... ?"
		},
		"every_other_country":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Executes children effects on every other country that fulfills the \"limit\" trigger. Excludes current country. tooltip=key can be defined to override tooltip title"
		},
		"random_other_country":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Executes children effects on random country that fulfills the \"limit\" trigger. Excludes current country"
		},
		"add_equipment_to_stockpile":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["any"],
			"description":	"Adds equipment to the countries stockpiles. Amount can be a variable. if it is negative it will remove equipment instead. if producer tag is not specified it will remove from all creators. \nExample: add_equipment_to_stockpile = { type = strat_bomber_equipment_2 amount = 100 producer = USA }"
		},
		"swap_ideas":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"swap 2 ideas. \n Syntax: swap_idea = {\n  remove_idea = <idea>\n  add_idea = <idea>\n  add_days = 10 #optional, will add/subtract duration for new idea that replaces the old one with duration\n  days = 25 #optional, will set the duration for the new idea\n}"
		},
		"damage_building":	{
			"supported_scope":	["STATE"],
			"supported_target":	["any"],
			"description":	"Damages buildings in the current state.\nExample: damage_building = { type = industrial_complex damage = 2.4 }\nAlso has the variable province = x when targeting provincial buildings."
		},
		"release_autonomy":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"releases specified country with specified level of autonomy.\nExample:\nENG = { \n release_autonomy = { \n  target = RAJ \n  autonomy_state = autonomy_puppet \n  freedom_level = 0.5 \n  release_non_owned_controlled = yes # default no. if yes you will release states you only control as well  force_change_controller_for_non_ally_controlled = yes # default = no. if yes it will change the controller of the states you or your allies don't control (ie if an enemy occupying it, the ownership will change but not controller) }\n}"
		},
		"set_autonomy":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"makes autonomy of specified level and country.\nExample:\nset_autonomy = {\ntarget=ENG\nautonomy_state = nautonomy_puppet\nfreedom_level=0.5\n}"
		},
		"add_to_tech_sharing_group":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Adds country to technology sharing group of specified name.\nExample: add_to_tech_sharing_group = commonwealth_research"
		},
		"remove_from_tech_sharing_group":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Removes country from technology sharing group of specified name.\nExample: remove_from_tech_sharing_group = commonwealth_research"
		},
		"add_autonomy_score":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Adds exact freedom score to the autonomy.\nExample:\nadd_autonomy_score={\nvalue=50\nlocalization=\"LOC_KEY\"\n}"
		},
		"modify_tech_sharing_bonus":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Modify country bonus for specified technology sharing group.\nExample: modify_tech_sharing_bonus  = { id = commonwealth_research bonus = 0.2 }"
		},
		"add_autonomy_ratio":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Adds % freedom score to the autonomy.\nExample:\nadd_autonomy_ratio={\nvalue=0.005\nlocalization=\"LOC_KEY\"\n}"
		},
		"set_cosmetic_tag":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Sets country cosmetic tag.\nExample: INS = { set_cosmetic_tag = IN1 }"
		},
		"drop_cosmetic_tag":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Drops country cosmetic tag.\nExample: INS = { drop_cosmetic_tag }"
		},
		"transfer_ship":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Transfers ship from scope country to target country.\nExample:\nENG={\n  transfer_ship={\n    prefer_name = \"HMS Achilles\"\n    type = light_cruiser\n    target = NZL\n  }\n}"
		},
		"set_state_category":	{
			"supported_scope":	["STATE"],
			"supported_target":	["none"],
			"description":	"Sets the category of a state\nExample: set_state_category = large_town"
		},
		"modify_global_flag":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"modify global flag. Only modifies if flag already exists.\nExample: modify_global_flag = { flag = <name> value = <number> }"
		},
		"modify_country_flag":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"modify country flag. Only modifies if flag already exists.\nExample: modify_country_flag = { flag = <name> value = <number> }"
		},
		"modify_state_flag":	{
			"supported_scope":	["STATE"],
			"supported_target":	["none"],
			"description":	"modify state flag. Only modifies if flag already exists.\nExample: modify_state_flag = { flag = <name> value = <number> }"
		},
		"add_state_modifier":	{
			"supported_scope":	["STATE"],
			"supported_target":	["none"],
			"description":	"Adds a modifier to the state\nExample: add_state_modifier = { modifier = { local_non_core_manpower = 0.2 } }"
		},
		"set_province_name":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"set_province_name = { id = <province id> name = <string> } - Set name for a province"
		},
		"set_state_name":	{
			"supported_scope":	["STATE"],
			"supported_target":	["none"],
			"description":	"set_state_name = <string> - Set the current states name"
		},
		"reset_province_name":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"reset name of a province back to localization one."
		},
		"reset_state_name":	{
			"supported_scope":	["STATE"],
			"supported_target":	["none"],
			"description":	"reset_state_name = yes - Resets the current states name to the original one"
		},
		"create_production_license":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Creates production license\nExample: create_production_license = {\n\ttarget = TAG # target for licensing\n\tcost_factor = 1.0 # cost factor for the deal\n\tequipment = { # classical equipment reference\n\t\ttype = light_tank_equipment_2\n\t\tversion = 0\n\t}\n}"
		},
		"add_relation_modifier":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS"],
			"description":	"Adds a static modifier between current scope and target\nExample: add_relation_modifier = {\n\ttarget = TAG # target of the relation\n\tmodifier = static_modifier_name_here #Name of the modifier added\n\t}\n}"
		},
		"remove_relation_modifier":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS"],
			"description":	"Removes a static modifier between current scope and target\nExample: add_relation_modifier = {\n\ttarget = TAG # target of the relation\n\tmodifier = static_modifier_name_here #Name of the modifier added\n\t}\n}"
		},
		"set_building_level":	{
			"supported_scope":	["STATE"],
			"supported_target":	["none"],
			"description":	"Sets specific level of a building construction for amount of levels in specified state or province"
		},
		"set_stability":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Sets the stability to the country in scope. Example: set_stability = 80"
		},
		"add_war_support":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Adds the war support to the country in scope. Example: add_war_support = 5"
		},
		"set_war_support":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Sets the war support to the country in scope. Example: set_war_support = 80"
		},
		"random_unit_leader":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Executes children effects on random unit leader that fulfills the \"limit\" trigger."
		},
		"every_unit_leader":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Executes children effects on unit leaders that fulfills the \"limit\" trigger. tooltip=key can be added to override tooltip title"
		},
		"random_army_leader":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Executes children effects on random army leader that fulfills the \"limit\" trigger."
		},
		"every_army_leader":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Executes children effects on army leaders that fulfills the \"limit\" trigger. tooltip=key can be added to override tooltip title"
		},
		"random_navy_leader":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Executes children effects on random navy leader that fulfills the \"limit\" trigger."
		},
		"every_navy_leader":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Executes children effects on navy leaders that fulfills the \"limit\" trigger. tooltip=key can be added to override tooltip title"
		},
		"transfer_navy":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Transfers the entire navy from scope country to target country. Does not support carriers!\nExample:\nENG={\n\ttarget = NZL\n\tis_government_in_exile = yes #optional, default is no; the navy will be tagged as exile if this is yes so that it will return to owner if they return from exile.\n}"
		},
		"destroy_ships":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Destroys ships of specified country and amount\nExample: \nENG={ \n\tdestroy_ships = {\n\t\ttype=light_cruiser\n\t\tcount=all #or number\n\t}\n}"
		},
		"set_unit_leader_flag":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["none"],
			"description":	"set unit leader flag"
		},
		"modify_unit_leader_flag":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["none"],
			"description":	"modify unit leader flag. Only modifies if flag already exists.\nExample: _modify_unit_leader_flag_ = { flag = <name> value = <number> }"
		},
		"clr_unit_leader_flag":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["none"],
			"description":	"clear unit leader flag"
		},
		"set_nationality":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["none"],
			"description":	"Set the new country owner for the scoped in unit leader.\nNote that this is not related to operative nationalities added via add_nationality.\nNote that for operative, this will temporarily lock their slot on the country of origin.\n"
		},
		"demote_leader":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["none"],
			"description":	"Demotes field marshal to general"
		},
		"retire":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["none"],
			"description":	"Retires scope unit leader"
		},
		"add_command_power":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"add command power to country"
		},
		"unlock_decision_tooltip":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"show what decision does\nExample: unlock_decision_tooltip = some_decision_here\nExample:\nunlock_decision_tooltip = {\n    decision = <some_decision>\n    show_effect_tooltip = yes # default is no\n    show_modifiers = yes # default is no\n}\n"
		},
		"add_temporary_buff_to_units":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["none"],
			"description":	"Add buffs to units that are belongs to the army group/navy of this unit leader"
		},
		"boost_planning":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["none"],
			"description":	"Boost planning of units that are belongs to the army group/navy of this unit leader"
		},
		"add_region_efficiency":	{
			"supported_scope":	["STRATEGIC_REGION"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"add efficiency factor to strategic region for from country"
		},
		"modify_building_resources":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Modifies resource output of specific building for this country only\nExample: modify_building_resources = {\n\tbuilding = radar_station\n\tresource = oil\n\tamount = 2\n}"
		},
		"global_every_army_leader":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Executes children effects on army leaders for every country in the world that fulfills the \"limit\" trigger. Better to use every_army_leader if you know the country. tooltip=key can be added to override tooltip title"
		},
		"add_to_variable":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Adds a value or a variable to another one\nExample: add_to_variable = {\nvar = num_dogs\n\tvalue = 42\n\ttooltip = loc_str_id_with_LEFT_and_RIGHT  #localized text with LEFT and RIGHT tokens in it, tokens will replaced by values\n}"
		},
		"subtract_from_variable":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Subtracts a value or a variable to another one\nExample: subtract_from_variable = {\nvar = num_dogs\n\tvalue = 42\n\ttooltip = loc_str_id_with_LEFT_and_RIGHT  #localized text with LEFT and RIGHT tokens in it, tokens will replaced by values\n}"
		},
		"multiply_variable":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Multiplies a variable to a value or another variable\nExample: set_variable = {\nvar = num_dogs\n\tvalue = 42\n\ttooltip = loc_str_id_with_LEFT_and_RIGHT  #localized text with LEFT and RIGHT tokens in it, tokens will replaced by values\n}"
		},
		"divide_variable":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Divies a variable to a value or another variable\nExample: divide_variable = {\nvar = num_dogs\n\tvalue = 42\n\ttooltip = loc_str_id_with_LEFT_and_RIGHT  #localized text with LEFT and RIGHT tokens in it, tokens will replaced by values\n}"
		},
		"clear_variable":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Clears a variable\nExample: clear_variable = num_dogs"
		},
		"add_attack":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["none"],
			"description":	"Adds attack skill to a unit leader\nExample: add_attack = 1"
		},
		"add_defense":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["none"],
			"description":	"Adds defense skill to a unit leader\nExample: add_defense = 1"
		},
		"add_planning":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["none"],
			"description":	"Adds planning skill to a unit leader\nExample: add_planning = 1"
		},
		"unlock_decision_category_tooltip":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"localizes name of category and displays tooltip that shows it will be unlocked"
		},
		"activate_mission_tooltip":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"shows mission will activate and name. Activation needs to be handled manually, effect is just an easier way to display name of mission.\nExample: unlock_mission_tooltip = some_mission_here"
		},
		"load_focus_tree":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Sets what focus tree a country uses, retains finished shared focuses."
		},
		"add_logistics":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["none"],
			"description":	"Adds logistics skill to a unit leader\nExample: add_logistics = 1"
		},
		"add_offsite_building":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Add an offsite building to a country"
		},
		"replace_unit_leader_trait":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["none"],
			"description":	"add trait to unit leader"
		},
		"free_operative":	{
			"supported_scope":	["COUNTRY", "UNIT_LEADER"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM"],
			"description":	"Free an operative\nCan be used from a scope and a target that is either a country or a unit leader.\nGER = { free_operative = PREV } # where PREV is an operative (unit leader)\nfree_operative = { captured_by = GER } # where the scope is an unit leader\n"
		},
		"free_random_operative":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["any"],
			"description":	"Free a random captured operative of a certain tag by a certain tag\nCan be used from a country scope of the operative in question.\n`all` is optional, default value is no - if set to yes it will free all operatives captured by the target country\nGER = { free_random_operative = { all = yes captured_by = ENG } }\n"
		},
		"add_max_trait":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["none"],
			"description":	"Adds a max assignable trait slot for a general\nExample: add_max_trait = 1"
		},
		"add_skill_level":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["none"],
			"description":	"Adds a skill level to a unit leader\nExample: add_skill_level = 1"
		},
		"add_to_temp_variable":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Adds a value or a variable to a temp variable\nExample: add_to_temp_variable = {\nvar = num_dogs\n\tvalue = 42\n\ttooltip = loc_str_id_with_LEFT_and_RIGHT  #localized text with LEFT and RIGHT tokens in it, tokens will replaced by values\n}"
		},
		"subtract_from_temp_variable":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Subtracts a value or a variable to a temp variable\nExample: subtract_from_temp_variable = {\nvar = num_dogs\n\tvalue = 42\n\ttooltip = loc_str_id_with_LEFT_and_RIGHT  #localized text with LEFT and RIGHT tokens in it, tokens will replaced by values\n}"
		},
		"multiply_temp_variable":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Multiplies a temp variable to a value or another variable\nExample: set_temp_variable = {\nvar = num_dogs\n\tvalue = 42\n\ttooltip = loc_str_id_with_LEFT_and_RIGHT  #localized text with LEFT and RIGHT tokens in it, tokens will replaced by values\n}"
		},
		"divide_temp_variable":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Divies a temp variable to a value or another variable\nExample: divide_temp_variable = {\nvar = num_dogs\n\tvalue = 42\n\ttooltip = loc_str_id_with_LEFT_and_RIGHT  #localized text with LEFT and RIGHT tokens in it, tokens will replaced by values\n\tif_zero = 0 # the value to assign if the divisor is zero (default is zero)\n}"
		},
		"set_temp_variable":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Sets a temp variable to a value or another variable\nExample: set_temp_variable = {\nvar = num_dogs\n\tvalue = 42\n\ttooltip = loc_str_id_with_LEFT_and_RIGHT  #localized text with LEFT and RIGHT tokens in it, tokens will replaced by values\n}"
		},
		"add_timed_unit_leader_trait":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["none"],
			"description":	"add a timed trait to unit leader"
		},
		"clamp_variable":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Clamps a variable between two values or variables.\nNote that either min or max can be omitted.\nThe order in which the operations are applied is Max( Min( var, max ), min ).\nAn error will be logged if max < min as the result will be more often than not undesired (requires the game to run in debug mode).\nExample: clamp_variable = {\n    var = num_dogs\n    min = 0\n    max = num_cats\n}\n"
		},
		"clamp_temp_variable":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Clamps a temp variable a variable bet ween two a values or another variables\nExample: clamp_temp_variable = {\nvar = num_dogs\nmin = 0\nmax = num_cats\n}"
		},
		"start_border_war":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"start a border war between two states. Example:\nstart_border_war = {\n\tchange_state_after_war = no #overrides the transfer of state at the end of war\n\tcombat_width = 80 #combat width for border war\n\tminimum_duration_in_days = 14 #minimum duration for combat\n\tattacker = {\n\t\tstate = 527 # state to start border war\n\t\tnum_provinces = 4 #number of provinces we want border war to be\n\t\ton_win = japan_border_conflict.2 #effect to call if wins\n\t\ton_lose = japan_border_conflict.3 #effect to call if loses\n\t\ton_cancel = japan_border_conflict.4 #effect to call if cancels\n\t\tleader_score = { #score for selecting a leader\n\t\t\tbase = 1\n\t\t\tmodifier = {\n\t\t\t\tcheck_variable = { likes_border_wars = 1 }\n\t\t\t\tadd = 2\n\t\t\t}\n\t\t}\n\t\tmodifier = 0.5 #combat modifier\n\t\tdig_in_factor = 0.5 #dig in modifier factor\n\t\tterrain_factor = 0.5 #terrain modifier factor\n\t}\n\t\n\tdefender = {\n\t\tstate = 408 # state to start border war\n\t\tnum_provinces = 4 #number of provinces we want border war to be\n\t\ton_win = japan_border_conflict.2 #effect to call if wins\n\t\ton_lose = japan_border_conflict.3 #effect to call if loses\n\t\ton_cancel = japan_border_conflict.4 #effect to call if cancels\n\t}\n}\n"
		},
		"set_border_war_data":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"update border war properties"
		},
		"cancel_border_war":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"cancel border war between two states"
		},
		"set_division_template_lock":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Set lock status for a division template\nExample: set_division_template_lock = { division_template = <name> is_locked = <bool (default:true)> }"
		},
		"delete_unit_template_and_units":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Delete a template and its units\nExample: delete_unit_template_and_units = { \ndivision_template = <name> \ndisband = no #if yes, will refund equipment/manpower. default is no\n}"
		},
		"print_variables":	{
			"supported_scope":	["STATE", "COUNTRY", "UNIT_LEADER"],
			"supported_target":	["none"],
			"description":	"prints all variables in scope and temp variables to a file\nExample: print_variables = {\nfile = log_file\ntext = header_text\nappend = yes\nprint_global = yes\nvar_list = { a b c } #optional\n}"
		},
		"activate_mission":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Activates mission, ignoring its normal trigger conditions. Cannot activate a mission that is already active. \nExample: activate_mission = some_mission_here"
		},
		"remove_mission":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Removes mission without running complete or timeout effects. \nExample: remove_mission = some_mission_here"
		},
		"recall_attache":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Scope country recalls attache from target country. Example: GER = { recall_attache = CHI } means Germany recalls attache from China."
		},
		"activate_targeted_decision":	{
			"supported_scope":	["STATE", "COUNTRY"],
			"supported_target":	["none"],
			"description":	"Activates targeted decisions or mission, ignoring its normal trigger conditions, cooldown and fire only once. Cannot activate if active in interface. \nExample: activate_targeted_decision = { target = TAG/STATE decision = decision_id_here"
		},
		"remove_targeted_decision":	{
			"supported_scope":	["STATE", "COUNTRY"],
			"supported_target":	["none"],
			"description":	"Removes targeted decisions or mission. \nExample: remove_targeted_decision = { target = TAG decision = decision_id_here"
		},
		"modify_timed_idea":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Modify amount of days of a timed idea.\n Example: modify_timed_idea = { idea = my_idea_id days = 5 } Adds 5 more days to the idea my_idea_id."
		},
		"activate_decision":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Activates specified decision for scope country"
		},
		"set_truce":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Sets a truce between scope country and target for days duration. \nExample set_truce = { target = GER days = 90 }"
		},
		"round_variable":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Rounds a variable\nExample: round_variable = num_dogs"
		},
		"unit_leader_event":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["none"],
			"description":	"Fires a unit leader event for owner country.\nExample:\nunit_leader_event = {\n\tid = generic.17 # The event to fire.\n\t# Optional Fields:\n\thours = 12 # The number of hours to wait before firing the event.\n\tdays = 5 # The number of days to wait before firing the event.\n\tmonths = 1 # The number of months to wait before firing the event, where a month is treated as 30 days.\n\t\t# Note:  hours, days, and months can all be used and will simply be added together.\n\trandom_hours = 18 # A random amount of hours to be added to the delay before firing, from 0 up to but not including random_hours.\n\trandom_days = 2 # A random amount of days to be added to the delay before firing, from 0 up to but one hour less than random_days.\n\t\t# Note:  random_hours and random_days can both be used and will simply be added together.\n\trandom = 6 # Equivalent to random_hours; preserverd for backwards compatibility.\n\trandom = { chance = 50 ... } # Specify a set of child effects to execute as part of this effect, with a percentage chance of randomly happening or not (as a group, not individually).\n\ttooltip = generic.17.t # Manually specify which tooltip to use for this effect.\n}\n"
		},
		"set_popularities":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"set popularities for all ideologies in a country. If an ideology is not specified its popularity will be set to zero. The popularities specified must add up to exactly 100\n\nExample:\nset_popularities = {\n\tneutrality = 54.5\n\tfascism = 45.5\n}"
		},
		"create_operative_leader":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"create operative for country\ncreate_operative_leader = {\n\tbypass_recruitment = no # whether the operative is directly added to the list of available operatives \n\tavailable_to_spy_master = yes # whether the operative can be recruited by the spy master. Only makes sense if bypass_recruitment is 'no'.\n\tportrait_tag_override = TAG # when selectiong the portrait for the operative, consider that tag instead of the country the operative will operate for\t# Additionally supports the common token to other create_x_leader effects\n}\n"
		},
		"capture_operative":	{
			"supported_scope":	["COUNTRY", "UNIT_LEADER"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM"],
			"description":	"Capture an operative\nCan be used from a scope and a target that is either a country or a unit leader.\nExamples:\nGER = {\n    capture_operative = PREV  # where PREV is an operative (unit leader)\n    # or    capture_operative = {\n        operative = PREV\n        ignore_death_chance = yes  # optional: whether the death chance on capture should be ignored\n    }\n}\n\ncapture_operative = { captured_by = GER } # where the scope is an unit leader\n"
		},
		"random_operative":	{
			"supported_scope":	["COUNTRY", "OPERATION"],
			"supported_target":	["none"],
			"description":	"Executes children effects on a random operatives that fulfills the \"limit\" trigger."
		},
		"every_operative":	{
			"supported_scope":	["COUNTRY", "OPERATION"],
			"supported_target":	["none"],
			"description":	"Executes children effects on operatives that fulfills the \"limit\" trigger. tooltip=key can be added to override tooltip title"
		},
		"send_equipment_fraction":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Sends to target scope specified fraction of equipment.\n_send_equipment_fraction_ = {\n  target = FROM\n  value = 0.3    # clamped in code to the range [0,1]\n}"
		},
		"transfer_units_fraction":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Transfer units (air, army, navy) to another country.\nAlso transfer the stockiled equipment (you can set it to zero if it is undesired) as well as unit leaders.\ntransfer_units_fraction = {\n\ttarget = ROOT          # the recipient\n\tsize = 0.4             # [0,1] Default value for the ratio below if they are not specified\n\tstockpile_ratio = 0.3  # [0,1] Overrides size modifier for the stockpiled equipment and fuel\n\tarmy_ratio = 0.1       # [0,1] Overrides size modifier for army\n\tnavy_ratio = 0.2       # [0,1] Overrides size modifier for navy\n\tair_ratio = 0.4        # [0,1] Overrides size modifier for air\n\tkeep_unit_leaders = {  # specify IDs of unit leaders that remain with the original country\n\t\t700 701\n\t}\n\tkeep_unit_leaders_trigger = { # Trigger for unit leaders to remain with the original country\n\t\t...                         # the scope is the unit leader being evaluated\n\t\t...                         # ROOT is the recipient\n\t\t...                         # FROM is the sender\n\t\t...                         # PREV is unset\n\t}\n}"
		},
		"finalize_border_war":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"finalizes border war between two states, wins or cancels it"
		},
		"remove_decision":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Remove specified active decision for scope country - Does not run the remove_effect or put the decision on cooldown. Ignores fire_only_once"
		},
		"swap_ruler_traits":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"swap 2 traits on current ruler. \n Syntax: swap_ruler_traits = { remove = <trait> add = <trait> }"
		},
		"add_random_trait":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["none"],
			"description":	"add random trait from specified list to unit leader. add_random_trait = { old_guard brilliant_strategist inflexible_strategist }"
		},
		"remove_exile_tag":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["none"],
			"description":	"remove exile tag from scope unit leader. remove_exile_tag = yes"
		},
		"set_legitimacy":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"set_legitimacy = 10. Sets legitimacy on scope country to specified value. Value has to be 0-100."
		},
		"become_exiled_in":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Become exile in target nation. become_exiled_in = { target = TAG legitimacy = 0-100 (optional) }"
		},
		"set_faction_name":	{
			"supported_scope":	["STATE", "COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"set_faction_name = NEW_LOC_KEY. Sets the faction name to whatever the new key localises to."
		},
		"add_maneuver":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["none"],
			"description":	"Adds maneuver skill to a unit leader\nExample: add_maneuver = 1"
		},
		"add_coordination":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["none"],
			"description":	"Adds maneuver skill to a unit leader\nExample: add_coordination = 1"
		},
		"give_resource_rights":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Gives rights to take resources from specified state. give_resource_rights = { receiver = <TAG> state = <id> }"
		},
		"remove_resource_rights":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Remove resource right to state for scope country. remove_resource_rights = ID"
		},
		"inherit_technology":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Copies over technology state from target"
		},
		"round_temp_variable":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Rounds a temporary variable\nExample: round_temp_variable = num_dogs"
		},
		"supply_units":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["none"],
			"description":	"Give supply to units being controlled by this leader. \nExample supply_units = 24"
		},
		"set_faction_leader":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"set current country as leader of its faction"
		},
		"set_keyed_oob":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Registers an Order of Battle (OOB) file to be loaded for a country at game start, replacing any previously registered OOB (with the given key) on that country.\nOnly intended to be used within history files.\n\nExample:\nset_keyed_oob = {\n\tkey = naval\n\tname = \"ENG_1936_Naval\"\n}"
		},
		"set_oob":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Registers an Order of Battle (OOB) file to be loaded for a country at game start, replacing any previously registered OOB (with no key) on that country.\nOnly intended to be used within history files.\n\nExample:\nset_oob = \"ENG_1936\""
		},
		"set_naval_oob":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Registers an Order of Battle (OOB) file to be loaded for a country at game start, replacing any previously registered OOB (with key \"naval\") on that country.\nOnly intended to be used within history files.\n\nExample:\nset_naval_oob = \"ENG_1936_Naval\""
		},
		"add_to_array":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Adds an element to an array\nExample: add_to_array = {\n\tarray = array_name\n\tvalue = 42 #optional, if not defined adds scope\n\tindex = 3 #optional, default is end. otherwise elements are shifted\n}\n#shorter usage: add_to_array = { array_name = 42 }"
		},
		"remove_from_array":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Removes an element from an array using value or index\nExample: remove_from_array = {\n\tarray = array_name\n\tvalue = 42 #optional, use index or this. if neither it removes last element\n\tindex = 3 #optional, use value or this. if neither it removes last element\n}\n#shorter usage: remove_from_array = { array_name = 42 }"
		},
		"clear_array":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Clears the contents of array\nExample: clear_array = array_name"
		},
		"resize_array":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Resizes array\nExample: resize_array = {\n\tarray = array_name\n\tvalue = 42 #optional, if not specified and array grows the new elements are set to this (default 0)\n\tsize = 3 #if higher than old size, new elements are added to end. otherwise last elements are removed to match to new size\n}\n#shorter usage: resize_array = { array_name = 3 }"
		},
		"add_to_temp_array":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Adds an element to a temporary array\nExample: add_to_temp_array = {\n\tarray = array_name\n\tvalue = 42 #optional, if not defined adds scope\n\tindex = 3 #optional, default is end. otherwise elements are shifted\n}\n#shorter usage: add_to_temp_array = { array_name = 42 }"
		},
		"remove_from_temp_array":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Removes an element from a temporary array using value or index\nExample: remove_from_temp_array = {\n\tarray = array_name\n\tvalue = 42 #optional, use index or this. if neither it removes last element\n\tindex = 3 #optional, use value or this. if neither it removes last element\n}\n#shorter usage: remove_from_temp_array = { array_name = 42 }"
		},
		"clear_temp_array":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Clears the contents of a temporary array\nExample: clear_temp_array = array_name"
		},
		"resize_temp_array":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Resizes a temp array\nExample: resize_temp_array = {\n\tarray = array_name\n\tvalue = 42 #optional, if not specified and array grows the new elements are set to this (default 0)\n\tsize = 3 #if higher than old size, new elements are added to end. otherwise last elements are removed to match to new size\n}\n#shorter usage: resize_temp_array = { array_name = 3 }"
		},
		"for_each_loop":	{
			"supported_scope":	["any"],
			"supported_target":	["any"],
			"description":	"Runs a loop on for each element of an array\nExample: for_each_loop = {\n\tarray = array_name\n\tvalue = value_name #optional (default 'v') current value in array will be stored in this temp variable\n\tindex = index_name #optional (default 'i') current index in array will be stored in this temp variable\n\tbreak = break_name #optional (default 'break') set this temp variable to non zero to break the loop\n #effect 1\n #effect 2 ...\n}"
		},
		"add_fuel":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"add fuel to the country"
		},
		"set_fuel":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"set fuel for country"
		},
		"for_each_scope_loop":	{
			"supported_scope":	["any"],
			"supported_target":	["any"],
			"description":	"Runs a loop on for each element of an array and changes scope to current element in each iteration\nExample: for_each_scope_loop = {\n\tarray = array_name\n\tbreak = break_name #optional (default 'break') set this temp variable to non zero to break the loop\n\ttooltip = loc #if defined, the effect will output a tooltip for sub effects using this localization as title\n #effect 1\n #effect 2 ...\n}"
		},
		"random_scope_in_array":	{
			"supported_scope":	["any"],
			"supported_target":	["any"],
			"description":	"Runs the effect for a random element in array\nExample: random_scope_in_array = {\n\tarray = array_name\n\tlimit = { ... trigger ... } a trigger to limit scopes\n\tbreak = break_name #optional (default 'break') set this temp variable to non zero to break the loop\n #effect 1\n #effect 2 ...\n}"
		},
		"force_update_dynamic_modifier":	{
			"supported_scope":	["STATE", "COUNTRY", "UNIT_LEADER"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"updates the modifiers in current scope (use if you don't want to wait for daily update to update them):\nforce_update_dynamic_modifier = yes\n"
		},
		"remove_dynamic_modifier":	{
			"supported_scope":	["STATE", "COUNTRY", "UNIT_LEADER"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"removes a dynamic modifier from country/state/unit leader:\nremove_dynamic_modifier = {\n    modifier = dynamic_modifier_name\n    scope = GER #optional, specify if it is specified while adding the modifier\n}\n"
		},
		"add_dynamic_modifier":	{
			"supported_scope":	["STATE", "COUNTRY", "UNIT_LEADER"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"adds a dynamic modifier to country/state/unit leader. Updates the cooldown if exists:\nadd_dynamic_modifier = {\n    modifier = dynamic_modifier_name\n    days = 42 #will be temporary if specified    scope = GER #optional, state or country tag or a variable contains that. if specified the dynamic variable will target that scope\n}\n"
		},
		"for_loop_effect":	{
			"supported_scope":	["any"],
			"supported_target":	["any"],
			"description":	"Runs a same effects through a loop. example will run the effects for value_name = -3, 0, 3, 6, 9 and then terminate\nExample: for_loop_effect = {\n\tstart = -3 (default 0) start value of loop\n\tend = 10 (default 0) end value of loop\n\tcompare_type = less_than_or_equals (default less_than) comparison type between start and end val\n\tadd = 3 (default 1) value to add to current value after each iteration\n\tvalue = value_name #optional (default 'v') current value of iteration will be stored in this temp variable\n\tbreak = break_name #optional (default 'break') set this temp variable to non zero to break the loop\n #effect 1\n #effect 2 ...\n}"
		},
		"while_loop_effect":	{
			"supported_scope":	["any"],
			"supported_target":	["any"],
			"description":	"Runs the effect as long as a trigger is true\nExample: while_loop_effect = {\n\tlimit = { ... trigger ... } a trigger to test before each iteration\n\tbreak = break_name #optional (default 'break') set this temp variable to non zero to break the loop\n #effect 1\n #effect 2 ...\n}"
		},
		"meta_effect":	{
			"supported_scope":	["any"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"meta effects can be used for building effects from strings and running them. following example will give Germany 42 pp:\nmeta_effect = {\n    text = {\n        [COUNTRY] = {\n            add_political_power = [POW]\n        }\n    }\n    COUNTRY = \"GER\"\n    POW = 42\n    debug = no #set to yes if you want to see what game actually executes\n}\n"
		},
		"launch_nuke":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"launch nuke at a state. usage : \nlaunch_nuke = { \n   provinve = 42 #will nuke this province if specified\n   state = 42 #use either province or state. if state is used it will prefer enemies first while picking a province to nuke. otherwise it will pick one of the neutrals\n   controller = GER #if state and controller is specified, the effect will pick a province that is controlled by this tag\n   use_nuke = yes #will consume nuke if specified\n} \n"
		},
		"scoped_sound_effect":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Plays sound effect only on in current scope's player"
		},
		"find_lowest_in_array":	{
			"supported_scope":	["any"],
			"supported_target":	["any"],
			"description":	"Runs a loop on for each element of an array, finds the lowest value and stores result in temp variables\nExample: find_lowest_in_array = {\n\tarray = array_name\n\tvalue = value_name #optional (default 'v') lowest value in array will be stored in this temp variable\n\tindex = index_name #optional (default 'i') index of lowest value in array will be stored in this temp variable\n}"
		},
		"find_highest_in_array":	{
			"supported_scope":	["any"],
			"supported_target":	["any"],
			"description":	"Runs a loop on for each element of an array, finds the highest value and stores result in temp variables\nExample: find_highest_in_array = {\n\tarray = array_name\n\tvalue = value_name #optional (default 'v') highest value in array will be stored in this temp variable\n\tindex = index_name #optional (default 'i') index of highest value in array will be stored in this temp variable\n}"
		},
		"add_mines":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Add mines to a strategic region for scoped country.\n add_mines = { region = 42 amount = 100 }"
		},
		"set_fuel_ratio":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Set country's current fuel ratio relative to its capacity"
		},
		"end_exile":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Ends the exile of of the current scope's country"
		},
		"kill_ideology_leader":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"removes a ideology leader as leader of his party, making the next in line the new party leader"
		},
		"retire_ideology_leader":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"kills a ideology leader and removes him completely, making the next in line the new party leader"
		},
		"add_days_remove":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"adds/removes days to 'days_remove' value of a decision\nExample:\nadd_days_remove  = {\n    decision = <some_decision>\n    days = 30\n}\n"
		},
		"add_days_mission_timeout":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"add days to 'mission_timeout' value of a mission\nExample:\nadd_days_mission_timeout  = {\n    mission = <some_mission>\n    days = 30\n}\n"
		},
		"add_resistance":	{
			"supported_scope":	["STATE"],
			"supported_target":	["any"],
			"description":	"add resistance to a state. Example: add_resistance = 30"
		},
		"add_compliance":	{
			"supported_scope":	["STATE"],
			"supported_target":	["any"],
			"description":	"add compliance to a state. Example: add_compliance = 30"
		},
		"start_resistance":	{
			"supported_scope":	["STATE"],
			"supported_target":	["any"],
			"description":	"starts resistance activity for a core country. \nUse along with force_enable_resistance if you are enabling resistance\nin a state that is not possible (ie core).\nExample : start_resistance = POL or start_resistance = yes"
		},
		"cancel_resistance":	{
			"supported_scope":	["STATE"],
			"supported_target":	["any"],
			"description":	"cancels resistance activity for a core country.\nuse along with force_disable_resistance to disable resistance forever\nExample : cancel_resistance = yes"
		},
		"set_resistance":	{
			"supported_scope":	["STATE"],
			"supported_target":	["any"],
			"description":	"set resistance of a state. Example: set_resistance = 30"
		},
		"set_compliance":	{
			"supported_scope":	["STATE"],
			"supported_target":	["any"],
			"description":	"set compliance of a state. Example: set_compliance = 30"
		},
		"add_operation_token":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Adds a specific token against against another country\nadd_operation_token = {\n\ttag = GER\n\ttoken = some_token_id\n}"
		},
		"remove_operation_token":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Remove a specific token against against another country\nremove_operation_token = {\n\ttag = GER\n\ttoken = some_token_id\n}"
		},
		"steal_random_tech_bonus":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"adds a random limited use tech bonus from country of categories that is it ahead in compared to you.\nit must have atleast one category or folder. But it can contain any number of them in any combination\nNote: if a country does not have a tech to be stolen a random tech bonus will be applied based on base_bonus \nExample: steal_random_tech_bonus = {\n\tcategory = air_equipment\n\tfolder = naval_folder\n\tahead_reduction = ???\n\tbonus = ???\n\tbase_bonus = 0.05\n\tinstant = yes # instant unlock instead of bonus\n\tdynamic = yes # swaps bonus types from instant to category dependig on type as well as uses weights on tech progress\n\tname = ???\n\ttarget = ???\n\tuses = 1\n}\n"
		},
		"teleport_armies":	{
			"supported_scope":	["STATE"],
			"supported_target":	["any"],
			"description":	"teleport armies in state to another state or province. example :\nteleport_armies = { \n  #only define one. if neither is defined will teleport to unit to their capital  to_state = 123 #id of the state to teleport\n  to_state_array = array_name #an array of states to teleport (will be randomly picked)\n  to_province = 123 #id of the province to teleport\n\n  limit = { \n     # trigger will be checked for owner of armies and will only teleport if true. scope if the owner of the army and prev is the scope that calls teleport_armies\n  } \n}"
		},
		"every_controlled_state":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Executes children effects on every controlled state that fulfills the \"limit\" trigger. tooltip=key can be added to override tooltip title"
		},
		"set_state_province_controller":	{
			"supported_scope":	["STATE"],
			"supported_target":	["any"],
			"description":	"sets the controller of provinces belong to a state and fullfils a condition. no tooltip is built\nset_state_province_controller = { \n controller = ITA\n  limit = { \n     # will be checked old controller of each province. will only update controller if true\n  } \n}"
		},
		"reserve_dynamic_country":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["any"],
			"description":	"reserves a dynamic country so it won't be recycled for civil wars. A dynamic country with no owned states must be reserved after it is created and unreserved once it is no longer going to be used. example :\nreserve_dynamic_country = yes\nreserve_dynamic_country = no\n"
		},
		"get_highest_scored_country_temp":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"calculates the highest scored country that is defined in a country scorer and sets it to a variable. Example: \nget_highest_scored_country_temp = { \n  scorer = scorer_id \n  var = var_name # variable name that the result will be stored. default is highest_scored_country \n}"
		},
		"create_dynamic_country":	{
			"supported_scope":	["any"],
			"supported_target":	["any"],
			"description":	"creates a dynamic country and runs child effects on it. example :\ncreate_dynamic_country = { \n  original_tag = ITA #original tag of new country\n  copy_tag = ITA # if set, it will copy stuff from copy tag instead of original_tag\n #...effects to run on new country}"
		},
		"get_sorted_scored_countries_temp":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"calculates & sorts all countries in a country scorer and stores them and their scores in temp arrays. Example: \nget_sorted_scored_countries_temp = { \n  scorer = scorer_id # id that is used in country scorer  array = array_name # a name to store sorted countries as a temp array (default to sorted_country_list) \n  scores = array_name # corresponding score temp array for countries stored in array (default to country_list_scores) \n}"
		},
		"random_occupied_country":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Executes children effects on random occupied country that fulfills the \"limit\" trigger."
		},
		"every_occupied_country":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Executes children effects on every occupied country that fulfills the \"limit\" trigger. tooltip=key can be defined to override tooltip title"
		},
		"add_resistance_target":	{
			"supported_scope":	["STATE"],
			"supported_target":	["any"],
			"description":	"adds resistance target to the scoped state :\nadd_resistance_target = 10\nadd_resistance_target = { \n  id = 123 #if set, id can be used for removing an added resistance target using remove_resistance_target effect  amount = 10 #original tag of new country\n  occupied = GER #if set, the resistance target will only apply if the occupied country is GER\n  occupier = ENG #if set, the resistance target will only apply if the occupier country is ENG\n  days = 42 #if set the newly added resistance target will be only active for this many days\n  tooltip = \"BLABLA\" #tooltip loc key to display in resistance target tooltips\n}"
		},
		"remove_resistance_target":	{
			"supported_scope":	["STATE"],
			"supported_target":	["any"],
			"description":	"removes a previously added resistance target using its id. No tooltips are generated.:\nremove_resistance_target = 42\n"
		},
		"get_highest_scored_country":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"calculates the highest scored country that is defined in a country scorer and sets it to a temp variable. Example: \nget_highest_scored_country = { \n  scorer = scorer_id \n  var = var_name # temp variable name that the result will be stored. default is highest_scored_country \n}"
		},
		"get_sorted_scored_countries":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"calculates & sorts all countries in a country scorer and stores them and their scores in arrays. Example: \nget_sorted_scored_countries = { \n  scorer = scorer_id # id that is used in country scorer  array = array_name # a name to store sorted countries as an array (default to sorted_country_list) \n  scores = array_name # corresponding score array for countries stored in array (default to country_list_scores) \n}"
		},
		"random_country_with_original_tag":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Executes children effects on a random country with original tag. Example:\nrandom_country_with_original_tag = { \n  original_tag_to_check = ENG # the effect will only run on countries that has this original tag \n  limit = { always = yes } # a limit can be defined to limit scopes\n  # ... effects to execute \n}"
		},
		"every_country_with_original_tag":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Executes children effects on a all countries with original tag. tooltip=key can be defined to override tooltip title. Example:\nevery_country_with_original_tag = { \n  original_tag_to_check = ENG # the effect will only run on countries that has this original tag \n  limit = { always = yes } # a limit can be defined to limit scopes\n  # ... effects to execute \n}"
		},
		"add_decryption":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"add decryption against a target country. Example:\nadd_decryption = { \n target = GER \n # pick one amount = 1000 # a flat amount to be added\n ratio = 0.3 # a ratio of crypto defense of target to be added\n"
		},
		"delete_units":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["any"],
			"description":	"deletes units that uses a specific template :\ndelete_units = { \n  division_template = \"Template Name\"\n  disband = no # if yes, equipment will be returned to country equipment. default is no\n}"
		},
		"force_enable_resistance":	{
			"supported_scope":	["STATE"],
			"supported_target":	["any"],
			"description":	"force enables resistance for scoped state. the resistance will be active even if other conditions doesn't satisfy (even if it is core or resistance check trigger is false)  :\nforce_enable_resistance = GER # same as occupier = GER \nforce_enable_resistance = { \n  clear = no #if yes, will clear previously set resistance\n  occupier = GER #if set, the resistance will be enabled when the occupier is GER\n  occupied = ENG #if set, the resistance will be enabled if the occupier country is target\n}"
		},
		"force_disable_resistance":	{
			"supported_scope":	["STATE"],
			"supported_target":	["any"],
			"description":	"force disables resistance for scoped state.  :\nforce_disable_resistance = GER # same as occupier = GER \nforce_disable_resistance = { \n  clear = no #if yes, will clear previously disabled resistance\n  occupier = GER #if set, the resistance will be disabled when the occupier is GER\n  occupied = ENG #if set, the resistance will be disabled if the occupier country is target\n}"
		},
		"create_intelligence_agency":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"create an Intelligence Agency for the country, if it is not already done. Example: \ncreate_intelligence_agency = yes # creates with historical ones, if exists. \ncreate_intelligence_agency = { \n  name = \"M.I.B.\" \n  icon = \"GFX_intelligence_agency_logo_ita\" \n}"
		},
		"upgrade_intelligence_agency":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"add an upgrade to the Intelligence Agency (must be created):\nupgrade_intelligence_agency = upgrade_army_department"
		},
		"create_ship":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"create a ship from another country and assign it to the reserve fleet.\n'creator' is optional. If not set, it will be the scoped country.\n'name' is optional.\nFRA = {\n  create_ship = {\n    type = ship_hull_submarine_1\n    equipment_variant = \"S Class\"\n    creator = ENG\n    name = \"My ship name\"\n  }\n}\n"
		},
		"set_faction_spymaster":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"set current country as spy master of its faction"
		},
		"country_lock_all_division_template":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Lock all the division template at the country level. Note that you need to unlock them in the same way (You can't use 'set_division_template_lock' individually, because the lock at the country level will not be removed)"
		},
		"randomize_temp_variable":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Randomize a temporary variable\nrandomize_temp_variable = num_dogs\n# which is equivalient to\nrandomize_temp_variable = {\n  var = num_dogs\n  distribution = uniform\n}\n# which is equivalent to\nrandomize_temp_variable = {\n  var = num_dogs\n  distribution = uniform\n  min = 0\n  max = 1\n}\n# also allow for binomial distribution (with N=2)randomize_temp_variable = {\n  var = num_dogs\n  distribution = binomial\n  min = 0               # optional\n  max = 10              # required if min is specified\n}\n# also allow for the poisson distributionrandomize_temp_variable = {\n  var = num_dogs\n  distribution = poisson\n  lambda = 10           # required\n  min = 10              # optional\n}\n"
		},
		"randomize_variable":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"refer to randomize_temp_variable"
		},
		"harm_operative_leader":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["none"],
			"description":	"Harm an operative. The specified value is subject to modifiers.\nharm_operative_leader = 12\n"
		},
		"force_operative_leader_into_hiding":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["none"],
			"description":	"Force an operative into hiding, preventing him from performing mission. The specified values is subject to modifiers\nforce_operative_leader_into_hiding = 12\n"
		},
		"add_intel":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Add the specified amount of intel over a specified country\nGER = {\n  add_intel = {\n    target = POL\n    civilian_intel = 3\n    army_intel = 1\n    # zero field can be omitted\n    # navy_intel = 0\n    # airforce_intel = 0\n  }\n}\n"
		},
		"operative_leader_event":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["none"],
			"description":	"Fires a operative leader event for owner country.\nExample:\noperative_leader_event = {\n\tid = generic.17 # The event to fire.\n\t# Optional Fields:\n\toriginator = TAG # The originator of the event (default to the owner of the operative)\n\trecipient = TAG # The recipient of the event (default to the owner of the operative)\n\thours = 12 # The number of hours to wait before firing the event.\n\tdays = 5 # The number of days to wait before firing the event.\n\tmonths = 1 # The number of months to wait before firing the event, where a month is treated as 30 days.\n\t\t# Note:  hours, days, and months can all be used and will simply be added together.\n\trandom_hours = 18 # A random amount of hours to be added to the delay before firing, from 0 up to but not including random_hours.\n\trandom_days = 2 # A random amount of days to be added to the delay before firing, from 0 up to but one hour less than random_days.\n\t\t# Note:  random_hours and random_days can both be used and will simply be added together.\n\trandom = 6 # Equivalent to random_hours; preserverd for backwards compatibility.\n\trandom = { chance = 50 ... } # Specify a set of child effects to execute as part of this effect, with a percentage chance of randomly happening or not (as a group, not individually).\n\ttooltip = generic.17.t # Manually specify which tooltip to use for this effect.\n\tset_from = TAG # Set the scope of the From in the scripted localization\n\tset_from_from = TAG # Set the scope of the From.From in the scripted localization\n\tset_root = TAG # Set the scope of the Root in the scripted localization\n}\n"
		},
		"kill_operative":	{
			"supported_scope":	["COUNTRY", "UNIT_LEADER"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM"],
			"description":	"Kills an operative. This will temporarily lock the slot they occupy\nExamples:\nGER = {\n    kill_operative = PREV  # where PREV is an operative (unit leader)\n    # or\n    kill_operative = {\n        operative = PREV\n    }\n}\n\nkill_operative = { killed_by = GER } # where the scope is an unit leader\n"
		},
		"random_controlled_state":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Executes children effects on random controlled state that fulfills the \"limit\" trigger. \nprioritize = { <stateID> <stateID> } to pick those states first if they fulfull the limit"
		},
		"mark_focus_tree_layout_dirty":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["any"],
			"description":	"Forces the refresh of the tree layout for the scoped country\nmark_focus_tree_layout_dirty = yes\n"
		},
		"add_civil_war_target":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Adds a civil war target to a specific country\n Usage: add_civil_war_target = TAG"
		},
		"modulo_temp_variable":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"modulos a temp variable with another. Example: \nmodulo_temp_variable = { \n  var = variable_to_modulo \n  value = divisior \n}"
		},
		"modulo_variable":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"modulos a variable with another. Example: \nmodulo_variable = { \n  var = variable_to_modulo \n  value = divisior \n}"
		},
		"set_country_leader_name":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["any"],
			"description":	"changes the name of country leader. no tooltip is generated\nset_country_leader_name = {\n  ideology = neutrality # can be ommitted. if so it will change the name of current ruler\n  name = \"James Boned\"\n}"
		},
		"set_country_leader_portrait":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["any"],
			"description":	"changes the portrait of country leader. no tooltip is generated\nset_country_leader_name = {\n  ideology = neutrality # can be ommitted. if so it will change the portrait of current ruler\n  portrait = \"GFX_portrait_italy_emperor_mussolini\"\n}"
		},
		"add_collaboration":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Adds the collaboration in a target country with our currently scoped country\nGER = {\n  add_collaboration = {\n    target = POL\n    value = 0.3\n  }\n}\n"
		},
		"set_collaboration":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Sets the collaboration in a target country with our currently scoped country\nGER = {\n  set_collaboration = {\n    target = POL\n    value = 0.3\n  }\n}\n"
		},
		"set_temp_variable_to_random":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"sets a temp variable to a random value. example \nset_temp_variable_to_random = num_dogs #sets num_dogs a random value between [0, 1) \nset_temp_variable_to_random = { \n\tvar = num_dogs #variable to set \n\tmin = 5 #default 0. value will be set in between [min, max) \n\tmax = 10 #default 1. value will be set in between [min, max) \n\tinteger = yes #default no. if yes the number value will be an integer \n} \n"
		},
		"set_variable_to_random":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"sets a variable to a random value. example \nset_variable_to_random = num_dogs #sets num_dogs a random value between [0, 1) \nset_variable_to_random = { \n\tvar = num_dogs #variable to set \n\tmin = 5 #default 0. value will be set in between [min, max) \n\tmax = 10 #default 1. value will be set in between [min, max) \n\tinteger = yes #default no. if yes the number value will be an integer \n} \n"
		},
		"set_leader_name":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["any"],
			"description":	"changes the name of unit leader. no tooltip is generated\nset_leader_name = \"James Boned\"\n"
		},
		"set_leader_portrait":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["any"],
			"description":	"changes the portrait of unit leader. no tooltip is generated\nset_leader_portrait = \"GFX_portrait_italy_emperor_mussolini\"\n"
		},
		"set_country_leader_description":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["any"],
			"description":	"changes the description of country leader. no tooltip is generated\nset_country_leader_name = {\n  ideology = neutrality # can be ommitted. if so it will change the portrait of current ruler\n  desc = \"DESC_KEY\"\n}"
		},
		"set_leader_description":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["any"],
			"description":	"changes the description of unit leader. no tooltip is generated\nset_leader_description = \"DESC_KEY\"\n"
		},
		"execute_operation_coordinated_strike":	{
			"supported_scope":	["OPERATION"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Special effect for executing the Coordinated Strike Operation. amount determines how often the simulation is run"
		},
		"add_nationality":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Add the specified nationalty to the scoped-in operative. Examples:\nadd_nationality = ROOT\nadd_nationality = FRA\n"
		},
		"recall_volunteers_from":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"The scoped in country recall the volunteers sent to the target country.\nExample:\n# FRA recalls the volunteers it sent to SPR\nFRA = { recall_volunteers_from = SPR }\n"
		},
		"turn_operative":	{
			"supported_scope":	["COUNTRY", "UNIT_LEADER"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM"],
			"description":	"An operative is turned by the specified country.\nThis transfers the operative to the target country and make it appear as killed to the country of origin (increases the death counter and lock the slot).\nThis fires the on_action on_operative_death with as killer the target country.\nIf the target country is the owner of the operative, this has no effect and an error is logged.\n\nWARN: the on_action might execute immediatly, before any effect listed after the occurence of turn_operative.\n\nExamples:\nGER = {\n    turn_operative = PREV  # where PREV is an operative (unit leader)\n    # or\n    turn_operative = {\n        operative = PREV\n    }\n}\n\nturn_operative = { turned_by = GER } # where the scope is an unit leader\n"
		},
		"set_garrison_strength":	{
			"supported_scope":	["STATE"],
			"supported_target":	["any"],
			"description":	"set initial garrison strength. Example: set_garrison_strength = 0.5"
		},
		"release_on_controlled":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"releases specified country as a puppet using your owned or controlled states"
		},
		"release_puppet_on_controlled":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"releases specified country as puppet using states you own or control"
		}
	},
	"triggers":	{
		"state":	{
			"supported_scope":	["STATE"],
			"supported_target":	["none"],
			"description":	"check state id"
		},
		"if":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"if_, CIfTrigger, A conditional trigger\nif = { limit = { <triggers> } <trigger> }"
		},
		"date":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"checks for a specific date"
		},
		"skill":	{
			"supported_scope":	["UNIT_LEADER", "COMBATANT"],
			"supported_target":	["none"],
			"description":	"compare leader skill levels"
		},
		"phase":	{
			"supported_scope":	["COMBATANT"],
			"supported_target":	["none"],
			"description":	"check if we are in this combat phase"
		},
		"and":	{
			"supported_scope":	["any"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"all inside trigger must be true"
		},
		"or":	{
			"supported_scope":	["any"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"at least one entry inside trigger must be true"
		},
		"not":	{
			"supported_scope":	["any"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"negates content of trigger"
		},
		"exists":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Check if the current country exist. The country of the scope you are in. Example: DEN = { exists = yes }"
		},
		"difficulty":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"check if the difficulty is above or below specified value 0-2 (difficulty enum). Example: difficulty > 0 (above easy)"
		},
		"log":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Print message to game.log - Can be localized"
		},
		"any_neighbor_country":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check if any neighbor country meets the trigger. tooltip=key can be defined to override title"
		},
		"has_country_flag":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["any"],
			"description":	"has country flag been set.Check flag val date set and days since set.\nExample: has_country_flag = test_flag\nhas_country_flag = { \n\tflag = <name> (mandatory)\n\tvalue < <int> (optional)\n\tdate > <date> (optional)\n\tdays > <int> (optional)\n}"
		},
		"reserves":	{
			"supported_scope":	["COMBATANT"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"check amount of reserves"
		},
		"tag":	{
			"supported_scope":	["COUNTRY", "COMBATANT"],
			"supported_target":	["any"],
			"description":	"country tag trigger"
		},
		"any_country":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"check if any country meets the trigger"
		},
		"check_variable":	{
			"supported_scope":	["any"],
			"supported_target":	["any"],
			"description":	"Compares a variable to a number"
		},
		"region":	{
			"supported_scope":	["STATE"],
			"supported_target":	["none"],
			"description":	"check state's strategic area id"
		},
		"is_subject":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["any"],
			"description":	"Checks if the country is subject of any other country"
		},
		"area":	{
			"supported_scope":	["STATE"],
			"supported_target":	["none"],
			"description":	"check state's strategic area id"
		},
		"threat":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"check the global threat value. 0-1 value"
		},
		"always":	{
			"supported_scope":	["any"],
			"supported_target":	["any"],
			"description":	"always returns specified value"
		},
		"is_capital":	{
			"supported_scope":	["STATE"],
			"supported_target":	["none"],
			"description":	"Is scope state a capital. 169 = { is_capital = yes }"
		},
		"has_global_flag":	{
			"supported_scope":	["any"],
			"supported_target":	["any"],
			"description":	"has global flag been set.Check flag val date set and days since set.\nExample: has_global_flag = test_flag\nhas_global_flag = { \n\tflag = <name> (mandatory)\n\tvalue < <int> (optional)\n\tdate > <date> (optional)\n\tdays > <int> (optional)\n}"
		},
		"impassable":	{
			"supported_scope":	["STATE"],
			"supported_target":	["any"],
			"description":	"checks if a state is impassable"
		},
		"is_attacker":	{
			"supported_scope":	["COMBATANT"],
			"supported_target":	["none"],
			"description":	"check if attacker side in combat"
		},
		"has_dlc":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Checks if player has a DLC.\nExample: has_dlc = \"name of the dlc\""
		},
		"hidden_trigger":	{
			"supported_scope":	["STATE", "COUNTRY", "UNIT_LEADER", "COMBATANT", "ACE", "STRATEGIC_REGION", "OPERATION"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"a hidden trigger, anything in it not shown in tooltips"
		},
		"is_female":	{
			"supported_scope":	["COUNTRY", "UNIT_LEADER", "ACE"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"checks if scoped unit leader, ace or country is female"
		},
		"has_idea":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check if country has idea"
		},
		"any_enemy_country":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check if any enemy country meets the trigger. tooltip=key can be defined to override title"
		},
		"is_neighbor_of":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"check if neighbor ( controlled territory ) with specified country"
		},
		"has_opinion":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"check what opinion the country has towards a specified country"
		},
		"has_opinion_modifier":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check if a country has the opinion modifier"
		},
		"is_subject_of":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["any"],
			"description":	"Checks if the country is subject of specified country"
		},
		"all_neighbor_country":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check if all neighbor countries meet the trigger. tooltip=key can be defined to override title"
		},
		"all_country":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"check if all countries meets the trigger. tooltip=key can be defined to override title"
		},
		"all_enemy_country":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check if all enemy countries meet the trigger. tooltip=key can be defined to override title"
		},
		"night":	{
			"supported_scope":	["COMBATANT"],
			"supported_target":	["none"],
			"description":	"check if combat is at night"
		},
		"dig_in":	{
			"supported_scope":	["COMBATANT"],
			"supported_target":	["none"],
			"description":	"check if we have digin level (lowest)"
		},
		"temperature":	{
			"supported_scope":	["COMBATANT"],
			"supported_target":	["none"],
			"description":	"check combat province temperature"
		},
		"armor":	{
			"supported_scope":	["COMBATANT"],
			"supported_target":	["none"],
			"description":	"Check that average armor level of combatant is over a certain level"
		},
		"has_war":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"is country at war"
		},
		"is_controlled_by":	{
			"supported_scope":	["STATE"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"check if state is controlled by"
		},
		"is_owned_by":	{
			"supported_scope":	["STATE"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"check if state is owned by"
		},
		"skill_advantage":	{
			"supported_scope":	["COMBATANT"],
			"supported_target":	["none"],
			"description":	"compare leader skill levels"
		},
		"owns_state":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"check owner for state(s)"
		},
		"controls_state":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"check controller for state(s)"
		},
		"has_government":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"does country government (ruling party) belong to ideology group"
		},
		"has_state_flag":	{
			"supported_scope":	["STATE"],
			"supported_target":	["any"],
			"description":	"has state flag been setCheck flag val date set and days since set.\nExample: has_state_flag = test_flag\nhas_state_flag = { \n\tflag = <name> (mandatory)\n\tvalue < <int> (optional)\n\tdate > <date> (optional)\n\tdays > <int> (optional)\n}"
		},
		"has_war_with":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"is countries at war"
		},
		"divisions_in_state":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"checks for amount of divisions in specified state owned by current country."
		},
		"country_exists":	{
			"supported_scope":	["any"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"check if the specified country exist"
		},
		"ships_in_area":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"checks for amount of ships in specified area"
		},
		"has_army_size":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"checks for amount of divisions, additionally of a specified type"
		},
		"has_navy_size":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Checks for amount of ships, additionally of a specified type, archetype, or sub unit definition.\n\nExamples:\n\thas_navy_size = { size > 10 type = convoy } # Must have more than 10 convoys.\n\thas_navy_size = { size < 1 archetype = ship_hull_light } # Must not have any ships with light hulls.\n\thas_navy_size = { size > 39 unit = heavy_cruiser } # Must have 40 or more heavy cruisers.\n\thas_navy_size = { size < 100 } # Must have fewer than 100 ships of any type."
		},
		"num_of_military_factories":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"check amount of military factories"
		},
		"num_of_civilian_factories":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"check amount of civilian factories"
		},
		"num_of_naval_factories":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"check amount of naval factories"
		},
		"num_of_nukes":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"check amount of nukes"
		},
		"has_manpower":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"check amount of manpower"
		},
		"has_political_power":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"check amount of political power"
		},
		"num_of_available_military_factories":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"check amount of available military factories"
		},
		"num_of_available_naval_factories":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"check amount of available naval factories"
		},
		"num_of_available_civilian_factories":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"check amount of available civilian factories"
		},
		"is_in_faction_with":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"check if member of same faction as specified country"
		},
		"is_in_faction":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check if member of any faction"
		},
		"is_faction_leader":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check if country leads a faction"
		},
		"is_guaranteed_by":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"check if guaranteed by specified country"
		},
		"has_guaranteed":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"check if country has guaranteed specified country"
		},
		"has_military_access_to":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"check country has military access to specified country"
		},
		"gives_military_access_to":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"check if country gives military access to specified country"
		},
		"any_state":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"check if any state meets the trigger. tooltip=key can be defined to override title"
		},
		"any_owned_state":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check if any owned state meets the trigger. tooltip=key can be defined to override title"
		},
		"any_neighbor_state":	{
			"supported_scope":	["STATE"],
			"supported_target":	["none"],
			"description":	"check if any neighbor state meets the trigger. tooltip=key can be defined to override title"
		},
		"any_allied_country":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Check if any allied country meets the trigger. Does not include the country itself. tooltip=key can be defined to override title"
		},
		"all_state":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"check if all states meets the trigger. tooltip=key can be defined to override title"
		},
		"all_owned_state":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check if all owned states meets the trigger. tooltip=key can be defined to override title"
		},
		"all_neighbor_state":	{
			"supported_scope":	["STATE"],
			"supported_target":	["none"],
			"description":	"check if all neighbor states meets the trigger. tooltip=key can be defined to override title"
		},
		"all_allied_country":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Check if all allied countries meet the trigger. Does not include the country itself. tooltip=key can be defined to override title"
		},
		"surrender_progress":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check if a country is close to surrendering"
		},
		"political_power_daily":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Checks if daily political power increase is more or less that specified value \n political_power_daily > 1.5"
		},
		"resistance":	{
			"supported_scope":	["STATE"],
			"supported_target":	["any"],
			"description":	"Compares the current resistance level of a state to a value. Example: resistance > 50 "
		},
		"ic_ratio":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Compares the ratio of total industrial capacity between the scope country and the one set with 'tag'"
		},
		"any_war_score":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"compares the warscore of all wars in a country to see if any fullfills the comparison condition 0-100 - Example: any_war_score > 40"
		},
		"has_idea_with_trait":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check if country has idea with specified trait"
		},
		"has_deployed_air_force_size":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"checks for amount of aircrafts, additionally of a specified type"
		},
		"is_fighting_in_terrain":	{
			"supported_scope":	["COMBATANT"],
			"supported_target":	["none"],
			"description":	"check what terrain is in combat"
		},
		"is_defender":	{
			"supported_scope":	["COMBATANT"],
			"supported_target":	["none"],
			"description":	"check if defender side in combat"
		},
		"has_combat_modifier":	{
			"supported_scope":	["COMBATANT"],
			"supported_target":	["none"],
			"description":	"check if combatant has modifier"
		},
		"is_winning":	{
			"supported_scope":	["COMBATANT"],
			"supported_target":	["none"],
			"description":	"check if defender side in combat"
		},
		"fastest_unit":	{
			"supported_scope":	["COMBATANT"],
			"supported_target":	["none"],
			"description":	"check if fastest unit of combatant is over this limit"
		},
		"recon_advantage":	{
			"supported_scope":	["COMBATANT"],
			"supported_target":	["none"],
			"description":	"checks if side has an advantage in recon level"
		},
		"has_tech":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check if country has technology"
		},
		"land_doctrine_level":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"checks researched land doctrine level"
		},
		"is_ironman":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Check if current game is ironman."
		},
		"has_start_date":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Compare the initial start date of current game."
		},
		"has_built":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"checks country has built a set number (at least) of a certain type of building since taking goal \nhas_built = { \n  type = building_type \n  value = 42 \n}"
		},
		"has_available_idea_with_traits":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Checks if country has available ideas with specific traits more than limit. Example: \nhas_available_idea_with_traits = { \n\tidea = head_of_intelligence # trait names. can be a list of traits in { } \n\tlimit = 1 \n\tignore = generic_head_of_intelligence # if specified, these ideas will be ignored. can be a list of ideas in { }\n} \n"
		},
		"is_claimed_by":	{
			"supported_scope":	["STATE"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Checks if state is claimed by country"
		},
		"is_core_of":	{
			"supported_scope":	["STATE"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Checks if state is core of country"
		},
		"is_ai":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Checks if country is AI controlled."
		},
		"has_trait":	{
			"supported_scope":	["UNIT_LEADER", "COMBATANT"],
			"supported_target":	["none"],
			"description":	"check if sides leader has trait"
		},
		"has_reserves":	{
			"supported_scope":	["COMBATANT"],
			"supported_target":	["none"],
			"description":	"check if side has reserves waiting"
		},
		"frontage_full":	{
			"supported_scope":	["COMBATANT"],
			"supported_target":	["none"],
			"description":	"check if sides front is full or can get more reinforcements"
		},
		"is_lend_leasing":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"is lend-leasing country"
		},
		"free_building_slots":	{
			"supported_scope":	["STATE"],
			"supported_target":	["none"],
			"description":	"checks building for available construction levels \nfree_building_slots = { \n\tbuilding = building_type \n\tsize > 5 \n\tinclude_locked = yes \n\tprovince = 42 #will check province buildings if specified \n}"
		},
		"is_demilitarized_zone":	{
			"supported_scope":	["STATE"],
			"supported_target":	["any"],
			"description":	"checks if a state is a demilitarized zone"
		},
		"is_border_conflict":	{
			"supported_scope":	["STATE"],
			"supported_target":	["any"],
			"description":	"checks if a state is in border conflict"
		},
		"has_completed_focus":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"has country completed focus"
		},
		"has_offensive_war_with":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"One country has offensive war against other country."
		},
		"has_defensive_war_with":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"One country has defensive war against other country."
		},
		"has_offensive_war":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"is country at offensive war"
		},
		"has_defensive_war":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"is country at defensive war"
		},
		"is_coastal":	{
			"supported_scope":	["STATE"],
			"supported_target":	["none"],
			"description":	"check if state is coastal"
		},
		"casualties":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Check the amount of casualties a country has suffered in all of it's wars"
		},
		"custom_trigger_tooltip":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Works as an and-trigger with a custom tooltip. will check if KEY_NOT first if it is inside NOT = { }"
		},
		"has_equipment":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"checks for amount of equipment stored"
		},
		"num_of_factories":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"check amount of total factories"
		},
		"focus_progress":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"checks focus progress example:\n focus_progress = { focus = id progress > 0.5 }"
		},
		"is_puppet":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["any"],
			"description":	"Checks if the country is puppet of any other country"
		},
		"is_puppet_of":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["any"],
			"description":	"Checks if the country is puppet of specified country"
		},
		"ships_in_state_ports":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"checks for amount of ships in specified state's ports. \nships_in_state_ports = { \n  type = ship_category \n  state = state_id \n  size = 42 \n}"
		},
		"is_major":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check if country is a major"
		},
		"is_on_continent":	{
			"supported_scope":	["STATE"],
			"supported_target":	["none"],
			"description":	"is state located on continent"
		},
		"is_amphibious_invasion":	{
			"supported_scope":	["COMBATANT"],
			"supported_target":	["none"],
			"description":	"check if combat is at night"
		},
		"strength_ratio":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Compares the estimated army strength between the scope country and the one set with 'tag'"
		},
		"has_max_planning":	{
			"supported_scope":	["COMBATANT"],
			"supported_target":	["none"],
			"description":	"check if side has maximal planning bonus"
		},
		"has_civil_war":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check if participant in civil war as revolter or target"
		},
		"less_combat_width_than_opponent":	{
			"supported_scope":	["COMBATANT"],
			"supported_target":	["none"],
			"description":	"check if side has more combat width than their opponent"
		},
		"is_fighting_air_units":	{
			"supported_scope":	["COMBATANT"],
			"supported_target":	["none"],
			"description":	"check if side is fighting air units"
		},
		"has_carrier_airwings_on_mission":	{
			"supported_scope":	["COMBATANT"],
			"supported_target":	["none"],
			"description":	"check if side has a career with air wings on a mission"
		},
		"has_flanked_opponent":	{
			"supported_scope":	["COMBATANT"],
			"supported_target":	["none"],
			"description":	"check if side has flanked their opponent"
		},
		"any_claim":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"check if there is a claim between a country and all others"
		},
		"has_volunteers_amount_from":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Compares number of volunteers from the country. Example: has_volunteers_amount_from = { tag = ITA count > 1 }"
		},
		"num_of_controlled_states":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"check amount of controlled stats"
		},
		"original_tag":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"original tag is ( for civil wars checks )"
		},
		"has_added_tension_amount":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Compare if the country has added above or below the specified ammount of tension"
		},
		"has_manpower_for_recruit_change_to":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check if manpower is enough to switch recruitment laws not to be negative"
		},
		"ai_liberate_desire":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"check what liberation desire the country has towards a specified country"
		},
		"distance_to":	{
			"supported_scope":	["STATE"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"check distance between two states"
		},
		"can_research":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check if country can research technology"
		},
		"has_annex_war_goal":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Checks a country has annex war goal on another country"
		},
		"hardness":	{
			"supported_scope":	["COMBATANT"],
			"supported_target":	["none"],
			"description":	"check lowest/highest hardness level on combatant"
		},
		"has_template_containing_unit":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check if country has a division template that contains a specific unit"
		},
		"is_in_home_area":	{
			"supported_scope":	["STATE"],
			"supported_target":	["any"],
			"description":	"Checks if the first province in the state is connected to the capital of its owner"
		},
		"state_population":	{
			"supported_scope":	["STATE"],
			"supported_target":	["none"],
			"description":	"check the population in the state"
		},
		"ai_irrationality":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check the ai irrationality value"
		},
		"has_war_together_with":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Are the countries fighting on the same side of a war"
		},
		"has_capitulated":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"checks if the country has capitulated"
		},
		"has_army_manpower":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"checks for amount of manpower of selected type, additionally of a specified type"
		},
		"is_owned_and_controlled_by":	{
			"supported_scope":	["STATE"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"check if state is owned by"
		},
		"is_tutorial":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"check if the tutorial is active"
		},
		"is_historical_focus_on":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"check if the historical focus is active"
		},
		"original_research_slots":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check number of research slots at start of game"
		},
		"has_wargoal_against":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Checks if country has a wargoal against the target. \nExample: ENG = { has_wargoal_against = GER }"
		},
		"is_justifying_wargoal_against":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Checks if country is justifying a wargoal against the target. \nExample: ENG = { is_justifying_wargoal_against = GER }"
		},
		"is_owner_neighbor_of":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"check if neighbor ( owned territory ) with specified country"
		},
		"ai_wants_divisions":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Will compare towards the amount of divisions an ai wants to have."
		},
		"has_claimed_state_in_peace_conference":	{
			"supported_scope":	["STATE"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Checks if a state has been claimed by target country in an ongoing peace conference"
		},
		"num_owned_neighbour_states":	{
			"supported_scope":	["STATE"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Checks if a country owns the amount of states neighbouring the scoped state"
		},
		"num_claimed_peace_conference_neighbour_states":	{
			"supported_scope":	["STATE"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Checks if a country owns the amount of states neighbouring the scoped state."
		},
		"is_island_state":	{
			"supported_scope":	["STATE"],
			"supported_target":	["any"],
			"description":	"always returns specified value"
		},
		"has_elections":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["any"],
			"description":	"Checks the country's politics on allowing elections. has_elections = yes"
		},
		"alliance_strength_ratio":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Compares the estimated army strength between the scope country, his allies and his enemies."
		},
		"civilwar_target":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"civilwar target is ( for civil wars checks )"
		},
		"is_in_peace_conference":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Checks if the country is currently in a peaceconference"
		},
		"has_unit_leader":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check if country has unit leader with specified ID. Don't localize this. Tooltip only for debug."
		},
		"any_home_area_neighbor_country":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check if any neighbor country in the home area meets the trigger. tooltip=key can be defined to override title"
		},
		"any_other_country":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"check if any other country meets the trigger. Excludes current country. tooltip=key can be defined to override title"
		},
		"all_other_country":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"check if all other countries meets the trigger. Excludes current country. tooltip=key can be defined to override title"
		},
		"has_non_aggression_pact_with":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Check if country has non aggression pact with the specified country"
		},
		"num_faction_members":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Compares the number of members in the faction for the current country. \n Example: num_faction_members > 10"
		},
		"enemies_strength_ratio":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Compares the estimated army strength between the scope country and all its enemies"
		},
		"has_custom_difficulty_setting":	{
			"supported_scope":	["any"],
			"supported_target":	["any"],
			"description":	"Returns true if the game has the specified custom difficulty on: \nExample: has_custom_difficulty_setting = TheAxisIndustry"
		},
		"has_any_custom_difficulty_setting":	{
			"supported_scope":	["any"],
			"supported_target":	["any"],
			"description":	"Returns true if the game has any custom difficulty on"
		},
		"has_country_custom_difficulty_setting":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["any"],
			"description":	"Returns true if the game has any custom difficulty on the scope nation"
		},
		"is_researching_technology":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Checks if the country is currently researching a specific technology.\nExample: is_researching_technology = mechanised_infantry"
		},
		"is_in_tech_sharing_group":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Checks if country is member specified technology sharing group.\nExample: is_in_technology_sharing_group = commonwealth_research"
		},
		"has_autonomy_state":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check if country currently has an autonomy state, example:\nhas_autonomy_state = puppet"
		},
		"compare_autonomy_progress_ratio":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check if autonomy progress ratio is higher than value, example:\ncompare_autonomy_progress_ratio > 0.5"
		},
		"compare_autonomy_state":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check if autonomy state is higher than other one, example:\ncompare_autonomy_state > puppet"
		},
		"has_cosmetic_tag":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Checks if country has specific cosmetic tag set.\nExample: INS = { has_cosmetic_tag = INS1 }"
		},
		"num_subjects":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check the number of subjects of nation"
		},
		"num_tech_sharing_groups":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"checks how many groups a nation is a member of"
		},
		"has_template":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Check if country has a division template of specific name"
		},
		"has_state_category":	{
			"supported_scope":	["STATE"],
			"supported_target":	["none"],
			"description":	"Check if state has a specific state category"
		},
		"has_cavalry_ratio":	{
			"supported_scope":	["COMBATANT"],
			"supported_target":	["none"],
			"description":	"Check that ratio of cavalry brigades in the composition of a side of combating troops are over a certain level"
		},
		"num_occupied_states":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check the number of states occupied by nation"
		},
		"has_damaged_buildings":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check for damaged buildings of nation"
		},
		"has_resources_amount":	{
			"supported_scope":	["STATE", "COUNTRY"],
			"supported_target":	["none"],
			"description":	"checks for amount of resources in specified state\nExample:\nhas_resources_amount = {\n\tresource = chromium\n\tamount > 10\n\tdelivered = no #check the delivered amount, where all modifiers apply\n\tstate = 31 (optional - can be used in state scope instead)"
		},
		"has_tech_bonus":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["any"],
			"description":	"checks if the country has a bonus for the specified technology or category\nExample:\nhas_tech_bonus = {\n\ttechnology =  <tech>\n\tcategory = <tech cat>\n\t}"
		},
		"has_template_majority_unit":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check if country has a division template that is majority of specific unit"
		},
		"min_planning":	{
			"supported_scope":	["COMBATANT"],
			"supported_target":	["none"],
			"description":	"check if side has maximal planning bonus"
		},
		"has_country_leader":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check if country has leader with specified ID. Don't localize this. Tooltip only for debug.\nhas_country_leader = {\n\tid = <ID>\n\truling_only = yes/no (default = yes)\n\tname = <string>\n}"
		},
		"has_army_experience":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Compares current country's army experience with right side value.\n has_army_experience < <value>"
		},
		"has_air_experience":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Compares current country's air experience with right side value.\n has_air_experience < <value>"
		},
		"has_navy_experience":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Compares current country's navy experience with right side value.\n has_navy_experience < <value>"
		},
		"has_full_control_of_state":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"check controller for state(s)"
		},
		"num_divisions":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Will compare towards the amount of divisions a country has control over, if strength matters use has_army_size."
		},
		"count_triggers":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Returns true if the specified number of sub-triggers return true\ncount_triggers = { amount = 2 <trigger> <trigger> <trigger> }"
		},
		"is_target_of_coup":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"is_target_of_coup = yes - Returns true if current country is being targeted by a coup from any country."
		},
		"is_staging_coup":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"is_staging_coup = yes - Returns true if current country is staging a coup in another any country."
		},
		"has_focus_tree":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Does current country have the specified focus tree."
		},
		"has_template_ai_majority_unit":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check if country has a division template that is majority of specific unit using AI's priorities rather than visual"
		},
		"has_any_license":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["any"],
			"description":	"Country has any active licenses\nExample: has_any_license = yes"
		},
		"has_license":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["any"],
			"description":	"Country has specific active license\nExample: has_license = {\n\tfrom = TAG # has license from this country, optional\n\t #if archetype is specified equipment should not be specified\n\tarchetype = light_tank_equipment #any armor license\n\tequipment = { # classical equipment reference\n\t\ttype = light_tank_equipment_2\n\t\tversion = 0\n\t}\n}"
		},
		"is_licensing_any_to":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["any"],
			"description":	"Current country is licensing something to target country\nExample: is_licensing_any_to = ENG"
		},
		"is_licensing_to":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["any"],
			"description":	"Country is licensing specific equipment to target. License is active\nExample: is_licensing_to = {\n\ttarget = TAG # licensing to this country\n\t #if archetype is specified equipment should not be specified\n\tarchetype = light_tank_equipment #any armor license\n\tequipment = { # classical equipment reference\n\t\ttype = light_tank_equipment_2\n\t\tversion = 0\n\t}\n}"
		},
		"ai_has_role_template":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check if the ai controlled country has any template for a specific role"
		},
		"ai_has_role_division":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check if the ai controlled country has any fielded divisions for a specific role"
		},
		"has_relation_modifier":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["any"],
			"description":	"Country has specified relation modifier when dealing with _target_ county\nExample: has_relation_modifier = {\n\ttarget = TAG # has license from this country, optional\n\tmodifier = static_modifier_here\n\t}\n}"
		},
		"any_province_building_level":	{
			"supported_scope":	["STATE"],
			"supported_target":	["any"],
			"description":	"In the current state, checks if any province within the specified limit has a building of the specified level."
		},
		"estimated_intel_max_armor":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Compares estimated max armor based on intel. Example: estimated_intel_max_armor = { tag = ITA value > 1 }"
		},
		"estimated_intel_max_piercing":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Compares estimated max armor based on intel. Example: estimated_intel_max_piercing = { tag = ITA value > 1 }"
		},
		"amount_research_slots":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check number of research current research slots \n amount_research_slots > 2"
		},
		"manpower_per_military_factory":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Number of available manpower per factory the country has. Excluding dockyards.\nmanpower_per_military_factory < 1000"
		},
		"amount_taken_ideas":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"has current country picked specified amount of ideas. Category and slot is optional.\nExcludes national_spirit, hidden, law = yes\namount_taken_ideas = {\n\tamount < <int> (mandatory)\n\tcategory = { military_staff } (optional)\n\tslot = { army_chief political_advisor } (optional)\n}"
		},
		"has_carrier_airwings_in_own_combat":	{
			"supported_scope":	["COMBATANT"],
			"supported_target":	["none"],
			"description":	"Check if carrier has airplanes that are part of the current combat"
		},
		"naval_strength_ratio":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Compares the estimated navy strength between the scope country and the one set with 'tag' \nnaval_strength_ratio = { \n  tag = GER \n  ratio > 0.5 \n}"
		},
		"enemies_naval_strength_ratio":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Compares the estimated navy strength between the scope country and all its enemies"
		},
		"alliance_naval_strength_ratio":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Compares the estimated naval strength between the scope country, his allies and his enemies."
		},
		"has_stability":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"check value of stability 0-1: Example has_stability < 0.6"
		},
		"has_war_support":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"check value of war_support 0-1: Example has_war_support < 0.6"
		},
		"all_unit_leader":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check if all unit leaders meets the trigger. tooltip=key can be defined to override title"
		},
		"any_unit_leader":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check if any unit leader meets the trigger. tooltip=key can be defined to override title"
		},
		"all_army_leader":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check if all unit leaders meets the trigger. tooltip=key can be defined to override title"
		},
		"any_army_leader":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check if any unit leader meets the trigger. tooltip=key can be defined to override title"
		},
		"all_navy_leader":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check if all unit leaders meets the trigger. tooltip=key can be defined to override title"
		},
		"any_navy_leader":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check if any unit leader meets the trigger. tooltip=key can be defined to override title"
		},
		"is_assigned":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["none"],
			"description":	"is_assigned = yes/no - Checks if the current unit leader is assigned to command an army/navy"
		},
		"num_units":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["none"],
			"description":	"Check number of units commanded by the unit leader \n num_units > 2"
		},
		"is_field_marshal":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["none"],
			"description":	"is_field_marshal = yes/no - Checks if the current unit leader is a field marshall"
		},
		"has_unit_leader_flag":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["any"],
			"description":	"has unit leader flag been setCheck flag val date set and days since set.\nExample: has_unit_leader_flag = test_flag\nhas_unit_leader_flag = { \n\tflag = <name> (mandatory)\n\tvalue < <int> (optional)\n\tdate > <date> (optional)\n\tdays > <int> (optional)\n}"
		},
		"has_decision":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check if country has active selected decision"
		},
		"command_power":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Checks if available command power is more or less that specified value \n command_power > 1.5"
		},
		"command_power_daily":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Checks if daily command power increase is more or less that specified value \n command_power_daily > 1.5"
		},
		"is_fully_controlled_by":	{
			"supported_scope":	["STATE"],
			"supported_target":	["any"],
			"description":	"Checks if state is fully controlled by specified tag"
		},
		"has_ability":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["any"],
			"description":	"does unit leader have the abilityCheck if a unit leader has the ability.\nExample: has_ability = force_attack"
		},
		"has_variable":	{
			"supported_scope":	["any"],
			"supported_target":	["any"],
			"description":	"Checks if a variable exists in a scope"
		},
		"has_id":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["none"],
			"description":	"check unit leader has specified ID. Don't localize this. Tooltip only for debug."
		},
		"can_select_trait":	{
			"supported_scope":	["UNIT_LEADER", "COMBATANT"],
			"supported_target":	["none"],
			"description":	"check if leader can select a trait"
		},
		"has_captured_operative":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Checks if a country has a captured an operative ( supports scoped variables )\nhas_captured_operative = GER/yes/no\n"
		},
		"add_to_temp_variable":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Adds a value or a variable to a temporary variable\nExample: add_to_temp_variable = {\nvar = num_dogs\n\tvalue = 42\n\ttooltip = loc_str_id_with_LEFT_and_RIGHT  #localized text with LEFT and RIGHT tokens in it, tokens will replaced by values. _NOT is added to end for negative trigger\n}"
		},
		"subtract_from_temp_variable":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Subtracts a value or a variable to a temporary variable\nExample: subtract_from_temp_variable = {\nvar = num_dogs\n\tvalue = 42\n\ttooltip = loc_str_id_with_LEFT_and_RIGHT  #localized text with LEFT and RIGHT tokens in it, tokens will replaced by values. _NOT is added to end for negative trigger\n}"
		},
		"multiply_temp_variable":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Multiplies a temporary variable by a value or another variable\nExample: multiply_temp_variable = {\nvar = num_dogs\n\tvalue = 42\n\ttooltip = loc_str_id_with_LEFT_and_RIGHT  #localized text with LEFT and RIGHT tokens in it, tokens will replaced by values. _NOT is added to end for negative trigger\n}"
		},
		"divide_temp_variable":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Divies a temporary variable by a value or another variable\nExample: divide_temp_variable = {\nvar = num_dogs\n\tvalue = 42\n\ttooltip = loc_str_id_with_LEFT_and_RIGHT  #localized text with LEFT and RIGHT tokens in it, tokens will replaced by values. _NOT is added to end for negative trigger\n}"
		},
		"set_temp_variable":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Sets a temporary variable to a value or another variable\nExample: set_temp_variable = {\nvar = num_dogs\n\tvalue = 42\n\ttooltip = loc_str_id_with_LEFT_and_RIGHT  #localized text with LEFT and RIGHT tokens in it, tokens will replaced by values. _NOT is added to end for negative trigger\n}"
		},
		"clamp_temp_variable":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"clamps a temp variable between two values/variables"
		},
		"num_of_civilian_factories_available_for_projects":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"check amount of civilian factories available for a new project to use"
		},
		"has_event_target":	{
			"supported_scope":	["any"],
			"supported_target":	["any"],
			"description":	"checks if current scope or global scope has the specified event target saved"
		},
		"political_power_growth":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Check the value of political power daily growth.Exacmple: political_power_growth > 0"
		},
		"has_border_war":	{
			"supported_scope":	["STATE", "COUNTRY"],
			"supported_target":	["any"],
			"description":	"Checks if a there is any border wars for country/state"
		},
		"is_border_war":	{
			"supported_scope":	["UNIT_LEADER", "COMBATANT"],
			"supported_target":	["any"],
			"description":	"Checks if a the combatant or leader has a border war"
		},
		"has_border_war_between":	{
			"supported_scope":	["any"],
			"supported_target":	["any"],
			"description":	"Checks if a there is a border war between two states"
		},
		"has_border_war_with":	{
			"supported_scope":	["STATE", "COUNTRY"],
			"supported_target":	["any"],
			"description":	"Checks if a there is a border against a state/country"
		},
		"average_stats":	{
			"supported_scope":	["UNIT_LEADER", "COMBATANT"],
			"supported_target":	["none"],
			"description":	"Compares the average stats for a unit leader.\nExample: average_stats > 10"
		},
		"attack_skill_level":	{
			"supported_scope":	["UNIT_LEADER", "COMBATANT"],
			"supported_target":	["none"],
			"description":	"Compares attack skill level of a unit leader.\nExample: attack_skill_level > 5"
		},
		"defense_skill_level":	{
			"supported_scope":	["UNIT_LEADER", "COMBATANT"],
			"supported_target":	["none"],
			"description":	"Compares defense skill level of a unit leader.\nExample: defense_skill_level > 5"
		},
		"logistics_skill_level":	{
			"supported_scope":	["UNIT_LEADER", "COMBATANT"],
			"supported_target":	["none"],
			"description":	"Compares logistics skill level of a unit leader.\nExample: logistics_skill_level > 5"
		},
		"planning_skill_level":	{
			"supported_scope":	["UNIT_LEADER", "COMBATANT"],
			"supported_target":	["none"],
			"description":	"Compares planning skill level of a unit leader.\nExample: planning_skill_level > 5"
		},
		"is_leading_army_group":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["none"],
			"description":	"is_leading_army_group = yes/no - Checks if the current unit leader is leading an army group (not single army)"
		},
		"is_leading_army":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["none"],
			"description":	"is_leading_army = yes/no - Checks if the current unit leader is leading a single army (not army group)"
		},
		"print_variables":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"prints all variables in scope and temp variables to a file\nExample: print_variables = {\nfile = log_file\ntext = header_text\nappend = yes\nprint_global = yes\nvar_list = { a b c } #optional\n}"
		},
		"has_active_mission":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check if country has an active mission with specified ID. has_active_mission = my_test_mission"
		},
		"has_attache":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Has attaché from any other country"
		},
		"has_attache_from":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Has attaché from specified country"
		},
		"amount_manpower_in_deployment_queue":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Checks for amount manpower currently in deploymentview. amount_manpower_in_training > 10"
		},
		"army_manpower_in_state":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Checks for amount manpower currently the target state with option to specify a type.\nExample:\narmy_manpower_in_state = {\n\tstate = <id> (variables supported)\n\tamount < <int> (variables supported)\n\ttype > <equipment_type> (armor, infantry, etc.)"
		},
		"is_exiled_leader":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["none"],
			"description":	"Checks if scope leader is from an exiled government. is_exiled_leader = yes"
		},
		"is_exiled_in":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["any"],
			"description":	"Checks if scope country is a government in exile in target tag. is_exiled_in = ENG"
		},
		"is_hosting_exile":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["any"],
			"description":	"Checks if scope country is hosting target tag as an exile. is_hosting_exile = FRA"
		},
		"is_exiled_leader_from":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Checks if scope leader is from specified exiled government. is_exiled_leader_from = FRA"
		},
		"is_exile_host":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["any"],
			"description":	"Checks if scope country is hosting an exile. is_exile_host = yes"
		},
		"is_government_in_exile":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["any"],
			"description":	"Checks if scope country an exiled government. is_government_in_exile = yes"
		},
		"divisions_in_border_state":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"checks for amount of divisions in specified state owned by current country."
		},
		"stockpile_ratio":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Compares the ratio of equipment archetype in stockpile vs used. a value of 2 means we have double in stockpile of what is fielded or in training."
		},
		"state_strategic_value":	{
			"supported_scope":	["STATE"],
			"supported_target":	["none"],
			"description":	"Checks for state strategic value"
		},
		"state_and_terrain_strategic_value":	{
			"supported_scope":	["STATE"],
			"supported_target":	["none"],
			"description":	"Checks for state strategic value"
		},
		"round_temp_variable":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Rounds a temporary variable\nExample: round_temp_variable = num_dogs"
		},
		"has_subject":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["any"],
			"description":	"Checks if the country has for subject the given country"
		},
		"has_game_rule":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Checks if a game rule is set to a particular option.\nExample:\nhas_game_rule = {\n\trule = GER_can_remilitarize_rhineland\n\toption = yes\n}"
		},
		"game_rules_allow_achievements":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Returns true if all of the active game rule options allow achievements."
		},
		"is_in_array":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Checks if an element is in array\nExample: is_in_array = {\n\tarray = array_name\n\tvalue = 42\n}\n#shorter usage: is_in_array = { array_name = 42 }"
		},
		"add_to_temp_array":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Adds an element to a temporary array\nExample: add_to_temp_array = {\n\tarray = array_name\n\tvalue = 42 #optional, if not defined adds scope\n\tindex = 3 #optional, default is end. otherwise elements are shifted\n}\n#shorter usage: add_to_temp_array = { array_name = 42 }"
		},
		"remove_from_temp_array":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Removes an element from a temporary array using value or index\nExample: remove_from_temp_array = {\n\tarray = array_name\n\tvalue = 42 #optional, use index or this. if neither it removes last element\n\tindex = 3 #optional, use value or this. if neither it removes last element\n}\n#shorter usage: remove_from_temp_array = { array_name = 42 }"
		},
		"clear_temp_array":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Clears the contents of a temporary array\nExample: clear_temp_array = array_name"
		},
		"resize_temp_array":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Resizes a temp array\nExample: resize_temp_array = {\n\tarray = array_name\n\tvalue = 42 #optional, if not specified and array grows the new elements are set to this (default 0)\n\tsize = 3 #if higher than old size, new elements are added to end. otherwise last elements are removed to match to new size\n}\n#shorter usage: resize_temp_array = { array_name = 3 }"
		},
		"any_of":	{
			"supported_scope":	["any"],
			"supported_target":	["any"],
			"description":	"Runs a loop on an array and check a trigger for each value, if any true returns true. otherwise returns false\nExample: any_of = {\n\tarray = array_name\n\tvalue = value_name #optional (default 'value') current value in array will be stored in this temp variable\n\tindex = index_name #optional (default 'index') current index in array will be stored in this temp variable\n #trigger 1\n #trigger 2 ...\n}"
		},
		"all_of":	{
			"supported_scope":	["any"],
			"supported_target":	["any"],
			"description":	"Runs a loop on an array and check a trigger for each value, if any false returns false. otherwise returns true\nExample: all_of = {\n\tarray = array_name\n\tvalue = value_name #optional (default 'v') current value in array will be stored in this temp variable\n\tindex = index_name #optional (default 'i') current index in array will be stored in this temp variable\n #trigger 1\n #trigger 2 ...\n}"
		},
		"has_fuel":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"check amount of fuel\nexample:\nhas_fuel > 500"
		},
		"any_of_scopes":	{
			"supported_scope":	["any"],
			"supported_target":	["any"],
			"description":	"Runs a loop on an array and check a trigger for each scope in it, if any true returns true. otherwise returns false\nExample: any_of_scopes = {\n\tarray = array_name\n\ttooltip = loc #if defined the trigger will output tooltip using this title. loc_NOT will be used if trigger is inside a NOT\n #trigger 1\n #trigger 2 ...\n}"
		},
		"all_of_scopes":	{
			"supported_scope":	["any"],
			"supported_target":	["any"],
			"description":	"Runs a loop on an array and check a trigger for each scope in it, if any false returns false. otherwise returns true\nExample: all_of_scopes = {\n\tarray = array_name\n\ttooltip = loc #if defined the trigger will output tooltip using this title. loc_NOT will be used if trigger is inside a NOT\n #trigger 1\n #trigger 2 ...\n}"
		},
		"has_country_leader_with_trait":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check if current country has specified trait.\nhas_country_leader_with_trait = big_fat_idiot"
		},
		"has_legitimacy":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Check scope country legitimacy 0-100: Example has_legitimacy < 60"
		},
		"has_rule":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"Checks if a rule set for a country.\nExample: has_rule = can_puppet"
		},
		"non_damaged_building_level":	{
			"supported_scope":	["STATE"],
			"supported_target":	["none"],
			"description":	"check if a state has enough non damaged buildings\n\n\nExample:\nnon_damaged_building_level = {\n\tbuilding = arms_factory\n\tlevel = 5\n}"
		},
		"state_population_k":	{
			"supported_scope":	["STATE"],
			"supported_target":	["none"],
			"description":	"check the population in the state in thousands (use to avoid variable overflows)"
		},
		"casualties_k":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Check the amount of casualties in thousands a country has suffered in all of it's wars"
		},
		"meta_trigger":	{
			"supported_scope":	["STATE", "COUNTRY", "UNIT_LEADER", "COMBATANT", "ACE", "STRATEGIC_REGION", "OPERATION"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"meta triggers can be used for building triggers from strings and running them. following example will test if Germany has 42 pp:\nmeta_trigger = {\n    text = {\n        [COUNTRY] = {\n            political_power > [POW]\n        }\n    }\n    COUNTRY = \"GER\"\n    POW = 42\n    debug = no #set to yes if you want to see what game actually executes\n}\n"
		},
		"has_dynamic_modifier":	{
			"supported_scope":	["STATE", "COUNTRY", "UNIT_LEADER"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Checks if scope has a dynamic modifier.\nhas_dynamic_modifier = {\n    modifier = dynamic_modifier_name\n    scope = GER #optional, if the original modifier has been targeted\n}\n"
		},
		"find_lowest_in_array":	{
			"supported_scope":	["any"],
			"supported_target":	["any"],
			"description":	"Runs a loop on for each element of an array, finds the lowest value and stores result in temp variables\nExample: find_lowest_in_array = {\n\tarray = array_name\n\tvalue = value_name #optional (default 'v') lowest value in array will be stored in this temp variable\n\tindex = index_name #optional (default 'i') index of lowest value in array will be stored in this temp variable\n}"
		},
		"find_highest_in_array":	{
			"supported_scope":	["any"],
			"supported_target":	["any"],
			"description":	"Runs a loop on for each element of an array, finds the highest value and stores result in temp variables\nExample: find_highest_in_array = {\n\tarray = array_name\n\tvalue = value_name #optional (default 'v') highest value in array will be stored in this temp variable\n\tindex = index_name #optional (default 'i') index of highest value in array will be stored in this temp variable\n}"
		},
		"has_mines":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Checks if a region has amount of mines.\nhas_mines = {\n    region = region_id\n    amount = amount_of_mines\n}\n"
		},
		"naval_strength_comparison":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Compares navies of two sides.\nnaval_strength_comparison = {\n\tother = GER # by default compares to the from scope\n  tooltip = 'key' #tooltip is 'navy strength' by default, the key can be overridden if wanted \n\tratio > 1.5   # default is 1\n\tsub_unit_def_weights = { # if not specified, it will weigh all ships as 1. otherwise only specified sub unit types will be counted\n\t\tcarrier = 1\n\t\tbattleship = 2\n\t}\n}\n"
		},
		"fuel_ratio":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Compares the fuel ratio to a variable.\nExample: fuel_ratio > 0.5"
		},
		"days_since_last_strategic_bombing":	{
			"supported_scope":	["STATE"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Checks the days since last strategic bombing.\ndays_since_last_strategic_bombing < 10\n"
		},
		"days_since_capitulated":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Checks the number of days since the country last capitulated, even if it is no longer capitulated.\n\tIf it has not ever capitulated, the value is extremely large.\n\tIt is recommended to combine this with has_capitulated = yes when you specifically want to ignore non-active capitulations.\nExamples:\n\tHOL = { has_capitulated = yes days_since_capitulated > 60 } # The Netherlands has been capitulated for more than two months\n\tFRA = { has_capitulated = yes days_since_capitulated < 21 } # France has capitulated sometime within the past three weeks\n\tGER = { OR = { has_capitulated = no days_since_capitulated > 14 } } # Germany is not both actively and recently capitulated\n"
		},
		"mine_threat":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"A trigger to check how dangerous enemy mines are for a country. Controlled by NAVAL_MINE_DANGER defines. Returns a value between 0 and 1. Example mine_threat > 0.5 "
		},
		"convoy_threat":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"A trigger to check convoy threat for a country. Controlled by NAVAL_CONVOY_DANGER defines. Returns a value between 0 and 1. Example convoy_threat > 0.5 "
		},
		"casualties_inflicted_by":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Checks the casualties infliced by the speficied country to the scopped country.\nE.g. true if Germany has been inflicted more than 200k casualties by Poland:\nGER = {\n  casualties_inflicted_by = {\n    opponent = POL\n    thousands > 200\n  }\n}"
		},
		"has_mined":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Checks the mines planted by the country of the parent scope on the coastline of the target countryE.g. true if Germany has more than 1000 mines around Poland coast:\nGER = {\n  has_mined = {\n    target = POL\n    value > 1000\n  }\n}"
		},
		"received_expeditionary_forces":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Checks that the country in scope has received the specified amount of expeditionary forces from the specified country\nE.g. true if Germany is commaning more than 100 expeditionary forces from Poland:\nGER = {\n  received_expeditionary_forces = {\n    sender = POL\n    value > 100\n  }\n}"
		},
		"is_fighting_in_weather":	{
			"supported_scope":	["COMBATANT"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Checks the weather on a combat\nExample:\n# true if weather is artic water\nis_fighting_in_weather = artic_water\n# true if weather is either artic_water or snow\nis_fighting_in_weather = { artic_water snow }\n"
		},
		"controls_province":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"check controller for province"
		},
		"compliance":	{
			"supported_scope":	["STATE"],
			"supported_target":	["any"],
			"description":	"Compares the current compliance level of a state to a value. Example: compliance > 50 "
		},
		"compliance_speed":	{
			"supported_scope":	["STATE"],
			"supported_target":	["any"],
			"description":	"Compares the current compliance speed of a state to a value. Example: compliance_speed > 50 "
		},
		"resistance_speed":	{
			"supported_scope":	["STATE"],
			"supported_target":	["any"],
			"description":	"Compares the current resistance speed of a state to a value. Example: resistance_speed > 50 "
		},
		"occupied_country_tag":	{
			"supported_scope":	["STATE"],
			"supported_target":	["any"],
			"description":	"compares occupied country that creates resistance to a tag. Example: occupied_country_tag = ITA"
		},
		"resistance_target":	{
			"supported_scope":	["STATE"],
			"supported_target":	["any"],
			"description":	"Compares the target resistance level of a state to a value. Example: resistance_target > 50 "
		},
		"has_resistance":	{
			"supported_scope":	["STATE"],
			"supported_target":	["any"],
			"description":	"returns true if state has a resistance"
		},
		"has_active_resistance":	{
			"supported_scope":	["STATE"],
			"supported_target":	["any"],
			"description":	"returns true if state has an active resistance (above zero)"
		},
		"has_occupation_modifier":	{
			"supported_scope":	["STATE"],
			"supported_target":	["any"],
			"description":	"compares occupied country that creates resistance to a tag. Example: has_occupation_modifier = modifier_name"
		},
		"has_core_occupation_modifier":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["any"],
			"description":	"has an occupation modifier that applies to average resistance/compliance\nExample: \nhas_core_occupation_modifier = { \n occupied_country_tag = ITA \n modifier = token \n}"
		},
		"is_debug":	{
			"supported_scope":	["any"],
			"supported_target":	["any"],
			"description":	"returns true if game is in debug mode (launched with -debug argument)"
		},
		"core_compliance":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["any"],
			"description":	"Compares the core (average of all occupied states) compliance value of occupied_country_tag that is occuppied by the country in current scope.\nExample: \ncore_compliance = { \n occupied_country_tag = ITA \n value > 35 \n}"
		},
		"core_resistance":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["any"],
			"description":	"Compares the core (average of all occupied states) resistance value of occupied_country_tag that is occuppied by the country in current scope.\nExample:\ncore_resistance = { \n occupied_country_tag = ITA \n value > 35 \n}"
		},
		"network_strength":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"checks network strength you have in a country. Examples: \n# country has a network strength greater than 50% over germany\nnetwork_strength = { \n target = GER\n value > 50\n}\n\n# country has a network strength greater than 50% over germany in state 53\nnetwork_strength = { \n target = GER\n state = 53 value > 50\n}\n\n# country has a network strength greater than 50% in state 53, regardless of the target\nnetwork_strength = { \n state = 53\n value > 50\n}\n\n"
		},
		"has_operation_token":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Checks if a country has a specific token against another country\nhas_operation_token = {\n\ttag = GER\n\ttoken = some_token_id\n}"
		},
		"occupation_law":	{
			"supported_scope":	["STATE"],
			"supported_target":	["any"],
			"description":	"checks occupation law of state. Example: occupation_law = brutally_oppressive_occupation"
		},
		"is_ally_with":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["any"],
			"description":	"checks if a country is ally with another country. will check if two countries are same/in same faction/has subject master relation\nExample: is_ally_with = ITA \n"
		},
		"get_highest_scored_country_temp":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"calculates the highest scored country that is defined in a country scorer and sets it to a variable. Example: \nget_highest_scored_country_temp = { \n  scorer = scorer_id \n  var = var_name # variable name that the result will be stored. default is highest_scored_country \n}"
		},
		"get_sorted_scored_countries_temp":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"calculates & sorts all countries in a country scorer and stores them and their scores in temp arrays. Example: \nget_sorted_scored_countries_temp = { \n  scorer = scorer_id # id that is used in country scorer  array = array_name # a name to store sorted countries as a temp array (default to sorted_country_list) \n  scores = array_name # corresponding score temp array for countries stored in array (default to country_list_scores) \n}"
		},
		"decryption_progress":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"checks decryption ratio against a country. Example: \ndecryption_progress = { \n target = GER\n value > 0.5\n} \n#or decryption_progress@GER as variable\n"
		},
		"any_occupied_country":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check if any any occupied meets the trigger. tooltip=key can be defined to override title"
		},
		"all_occupied_country":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check if all occupied countries meets the trigger. tooltip=key can be defined to override title"
		},
		"any_country_with_original_tag":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"check if any country with current scope's original tag meets the trigger. Example:\nany_country_with_original_tag = { \n  original_tag_to_check = ENG # the trigger check all countries that has this original tag \n  # ... triggers to check \n}"
		},
		"all_country_with_original_tag":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"check if all country with current scope's original tag meets the trigger. Example:\nall_country_with_original_tag = { \n  original_tag_to_check = ENG # the trigger check all countries that has this original tag \n  # ... triggers to check \n}"
		},
		"has_done_agency_upgrade":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"has country done this intelligence agency upgrade (to its highest level)"
		},
		"has_intelligence_agency":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"has country created an Intelligence Agency"
		},
		"is_spymaster":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"check if country is Spy Master"
		},
		"foreign_manpower":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"check the amount of foreign garrison manpower we have"
		},
		"garrison_manpower_need":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"check the amount of manpower needed by garrisons"
		},
		"agency_upgrade_number":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Checks the number of upgrade done in the intelligence agency. \nagency_upgrade_number > 4"
		},
		"operative_leader_mission":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["none"],
			"description":	"Checks whether the operative is performing the given mission:\noperative_leader_mission = build_intel_network"
		},
		"compare_intel_with":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Compare the intel of the scoped country with the specified one:\nGER = {\n  # is true if all predicates are satisfied\n  compare_intel_with = { \n    target = POL\n    civilian_intel > 0.5  # GER has at least 0.5 more civ. intel than POL\n    army_intel = 0  # GER has as much army intel as POL\n    navy_intel < 0  # POL has more navy intel than GER\n    # airforce_intel is not specified and thus ignored in the comparison\n  }\n}\n"
		},
		"all_operative_leader":	{
			"supported_scope":	["COUNTRY", "OPERATION"],
			"supported_target":	["none"],
			"description":	"check if all operatives meets the trigger. tooltip=key can be defined to override title"
		},
		"any_operative_leader":	{
			"supported_scope":	["COUNTRY", "OPERATION"],
			"supported_target":	["none"],
			"description":	"check if any operatives meets the trigger. tooltip=key can be defined to override title"
		},
		"is_operative_captured":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["none"],
			"description":	"Checks whether the operative has the matching captured status\n"
		},
		"intel_level_over":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Compare the absolute, percentage based, intel level the scoped country has over\nthe specified one:\nGER = {\n  # is true if all predicates are satisfied\n  intel_level_over = { \n    target = POL\n    civilian_intel > 0.5  # GER has more than 50% civ. intel over POL\n    army_intel = 0  # GER has no army intel over POL\n    navy_intel > 0  # GER has at least some navy intel over POL\n    # airforce_intel is not specified and thus ignored in the comparison\n\n    # NOTE: since we are comparing the intel level of a country over another,\n    # checking for values less than 0 does not make sense\n    # NOTE: since we are comparing percentages, using values greater than 1\n    # does not make sense.\n  }\n}\n"
		},
		"any_controlled_state":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check if any of the states controlled by the scope country meets the trigger. tooltip=key can be defined to override title"
		},
		"all_controlled_state":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"check if all of the states controlled by the scope country meets the trigger. tooltip=key can be defined to override title"
		},
		"num_of_operatives":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Checks the number of operatives the country controls"
		},
		"num_operative_slots":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Checks the number of available operative slots a country has.\nIf this differs from the number of operative, this does not mean the country can recruit an operative, but that it will eventually be able to."
		},
		"num_free_operative_slots":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Checks the number of operative a country can recruit right now.\nNote that this is not necessarily greater than zero if num_operative_slots returned a number greater than the number of operative."
		},
		"is_cryptology_department_active":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"has country an active cryptology department"
		},
		"is_decrypting":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"checks if is currently decrypting a cipher. Example is_decrypting = GER"
		},
		"is_fully_decrypted":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"checks if fully decrypted a cipher. Example is_fully_decrypted = GER"
		},
		"is_active_decryption_bonuses_enabled":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"checks if the country activated their active cipher decryption bonuses. Example is_active_decryption_bonuses_enabled = GER"
		},
		"num_fake_intel_divisions":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Will compare towards the amount of fake intel divisions a country has control over. ."
		},
		"modulo_temp_variable":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"modulos a temp variable with another. Example: \nmodulo_temp_variable = { \n  var = variable_to_modulo \n  value = divisior \n}"
		},
		"any_guaranteed_country":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS"],
			"description":	"check if any country with current scoped country guarantees. Example:\nany_guaranteed_country = { \n  # ... triggers to check \n}"
		},
		"all_guaranteed_country":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS"],
			"description":	"check if every country with current scoped country guarantees. Example:\nall_country_with_original_tag = { \n  # ... triggers to check \n}"
		},
		"num_finished_operations":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["any"],
			"description":	"Compares number of completed operations.\nExample: \nnum_finished_operations = { \n target = ITA \n operation = operation_infiltrate_armed_forces_navy value > 35 \n}"
		},
		"has_collaboration":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"checks the collaboration in a target country with our currently scoped country. Example: \nhas_collaboration = { \n target = GER\n value > 0.5\n} \n#or has_collaboration@GER as variable\n"
		},
		"set_temp_variable_to_random":	{
			"supported_scope":	["any"],
			"supported_target":	["none"],
			"description":	"sets a temp variable to a random value. example \nset_temp_variable_to_random = num_dogs #sets num_dogs a random value between [0, 1) \nset_temp_variable_to_random = { \n\tvar = num_dogs #variable to set \n\tmin = 5 #default 0. value will be set in between [min, max) \n\tmax = 10 #default 1. value will be set in between [min, max) \n\tinteger = yes #default no. if yes the number value will be an integer \n} \n"
		},
		"is_running_operation":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["any"],
			"description":	"checks if running a specific operation. operation can be ommitted to check for any operation\nExample: \nis_running_operation = { \n target = ITA \n operation = operation_infiltrate_armed_forces_navy}"
		},
		"has_finished_collecting_for_operation":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["any"],
			"description":	"checks if finished collecting of resources for an operation.\nExample: \nhas_finished_collecting_for_operation = { \n target = ITA \n operation = operation_infiltrate_armed_forces_navy}"
		},
		"conscription_ratio":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Checks  conscription ratio of the country compared to target conscription ratio.\n"
		},
		"target_conscription_amount":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Checks the target conscription amount of the country.\n"
		},
		"current_conscription_amount":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Checks the current conscription amount of the country.\n"
		},
		"is_operation_type":	{
			"supported_scope":	["OPERATION"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"checks the type of operation"
		},
		"is_preparing_operation":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["any"],
			"description":	"checks if preparing a specific operation.\nExample: \nis_preparing_operation = { \n target = ITA \n operation = operation_infiltrate_armed_forces_navy}"
		},
		"num_researched_technologies":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Number of researched technologies"
		},
		"operative_leader_operation":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["none"],
			"description":	"Checks whether the operative is performing the given operation:\noperative_leader_operation = operation_rescue_operative"
		},
		"can_declare_war_on":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"checks if the country could potentially declare a war on the target ( according to game rules, relationship, etc... ). Example can_declare_war_on = GER"
		},
		"has_nationality":	{
			"supported_scope":	["UNIT_LEADER"],
			"supported_target":	["THIS", "ROOT", "PREV", "FROM", "OWNER", "CONTROLLER", "OCCUPIED", "CAPITAL"],
			"description":	"Checks whether the operative has the specified nationality.\nNOTE: this is invalid on non-operatives.\nExamples:\nhas_nationality = GER\n"
		},
		"network_national_coverage":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"checks network national coverage you have over a country. Example: \nnetwork_national_coverage = { \n target = GER\n value > 0.5\n} \n"
		},
		"has_allowed_idea_with_traits":	{
			"supported_scope":	["COUNTRY"],
			"supported_target":	["none"],
			"description":	"Checks if country has allowed ideas with specific traits more than limit. Example: \nhas_available_idea_with_traits = { \n\tidea = head_of_intelligence # trait names. can be a list of traits in { } \n\tlimit = 1 \n\tignore = generic_head_of_intelligence # if specified, these ideas will be ignored. can be a list of ideas in { }\n} \n"
		}
	},
	"modifiers":	[{
			"name":	"air_detection",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["air"]
		}, {
			"name":	"air_maximum_speed_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["air"]
		}, {
			"name":	"air_bombing_targetting",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["air"]
		}, {
			"name":	"strategic_bomb_visibility",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["air"]
		}, {
			"name":	"air_range_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["air"]
		}, {
			"name":	"air_wing_xp_loss_when_killed_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["air"]
		}, {
			"name":	"air_ace_generation_chance_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["air"]
		}, {
			"name":	"air_interception_detect_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["air"]
		}, {
			"name":	"air_superiority_detect_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["air"]
		}, {
			"name":	"air_strategic_bomber_bombing_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["air"]
		}, {
			"name":	"air_superiority_efficiency",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["air"]
		}, {
			"name":	"air_escort_efficiency",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["air"]
		}, {
			"name":	"air_intercept_efficiency",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["air"]
		}, {
			"name":	"air_cas_efficiency",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["air"]
		}, {
			"name":	"air_nav_efficiency",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["air"]
		}, {
			"name":	"air_mission_efficiency",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["air"]
		}, {
			"name":	"naval_strike",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "unit_leader", "aggressive"]
		}, {
			"name":	"naval_strike_attack_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["air"]
		}, {
			"name":	"naval_strike_targetting_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["air"]
		}, {
			"name":	"naval_strike_agility_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["air"]
		}, {
			"name":	"naval_coordination",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "unit_leader"]
		}, {
			"name":	"invasion_preparation",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["naval", "unit_leader"]
		}, {
			"name":	"amphibious_invasion_defence",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "unit_leader"]
		}, {
			"name":	"naval_invasion_penalty",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "unit_leader"]
		}, {
			"name":	"transport_capacity",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval"]
		}, {
			"name":	"naval_invasion_capacity",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval"]
		}, {
			"name":	"carrier_traffic",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "unit_leader", "aggressive"]
		}, {
			"name":	"sortie_efficiency",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "unit_leader", "aggressive"]
		}, {
			"name":	"political_power_gain",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"political_power_cost",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"political_power_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"naval_hit_chance",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "unit_leader", "aggressive"]
		}, {
			"name":	"naval_speed_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "unit_leader"]
		}, {
			"name":	"naval_detection",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "unit_leader"]
		}, {
			"name":	"army_speed_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["army"]
		}, {
			"name":	"army_armor_speed_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "aggressive"]
		}, {
			"name":	"experience_gain_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["unit_leader", "military_advancements"]
		}, {
			"name":	"experience_gain_army",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["army", "military_advancements"]
		}, {
			"name":	"experience_gain_army_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "military_advancements"]
		}, {
			"name":	"experience_gain_army_unit_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "military_advancements"]
		}, {
			"name":	"experience_gain_army_unit",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "military_advancements"]
		}, {
			"name":	"experience_gain_navy",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["naval", "unit_leader", "military_advancements"]
		}, {
			"name":	"experience_gain_navy_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["naval", "unit_leader", "military_advancements"]
		}, {
			"name":	"experience_gain_navy_unit_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["naval", "unit_leader", "military_advancements"]
		}, {
			"name":	"experience_gain_navy_unit",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["naval", "unit_leader", "military_advancements"]
		}, {
			"name":	"experience_gain_air",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["air"]
		}, {
			"name":	"experience_gain_air_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["air"]
		}, {
			"name":	"submarine_attack",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["naval", "unit_leader", "aggressive"]
		}, {
			"name":	"local_resources",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["state", "war_production"]
		}, {
			"name":	"local_resources_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["state", "war_production"]
		}, {
			"name":	"local_manpower",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["state", "war_production"]
		}, {
			"name":	"local_non_core_manpower",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["state", "war_production"]
		}, {
			"name":	"non_core_manpower",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["state", "war_production"]
		}, {
			"name":	"weekly_manpower",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country", "war_production"]
		}, {
			"name":	"mobilization_speed",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["state", "war_production"]
		}, {
			"name":	"local_supplies",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["state", "war_production"]
		}, {
			"name":	"local_factories",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["state", "war_production"]
		}, {
			"name":	"training_time_army",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "war_production"]
		}, {
			"name":	"training_time_army_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "war_production"]
		}, {
			"name":	"army_org",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "defensive", "aggressive"]
		}, {
			"name":	"army_org_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "defensive", "aggressive"]
		}, {
			"name":	"navy_org",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["naval", "unit_leader"]
		}, {
			"name":	"navy_org_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["naval", "unit_leader"]
		}, {
			"name":	"monthly_population",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["country", "war_production"]
		}, {
			"name":	"conscription",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country", "war_production"]
		}, {
			"name":	"conscription_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country", "war_production"]
		}, {
			"name":	"local_intel_to_enemies",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["state", "defensive"]
		}, {
			"name":	"local_factory_sabotage",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["state"]
		}, {
			"name":	"org_loss_when_moving",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "aggressive"]
		}, {
			"name":	"attrition",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "defensive", "aggressive"]
		}, {
			"name":	"winter_attrition_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "aggressive"]
		}, {
			"name":	"winter_attrition",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "aggressive"]
		}, {
			"name":	"heat_attrition",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "aggressive"]
		}, {
			"name":	"heat_attrition_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["army", "aggressive"]
		}, {
			"name":	"unit_upkeep_attrition_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["army"]
		}, {
			"name":	"spotting_chance",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "unit_leader"]
		}, {
			"name":	"ships_at_battle_start",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "unit_leader"]
		}, {
			"name":	"naval_retreat_chance",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "unit_leader", "defensive"]
		}, {
			"name":	"naval_retreat_speed",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "unit_leader", "defensive"]
		}, {
			"name":	"sub_retreat_speed",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "unit_leader", "defensive"]
		}, {
			"name":	"convoy_retreat_speed",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "unit_leader", "defensive"]
		}, {
			"name":	"out_of_supply_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "aggressive"]
		}, {
			"name":	"offence",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["army", "aggressive"]
		}, {
			"name":	"defence",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["army", "defensive"]
		}, {
			"name":	"supply_consumption_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "defensive", "aggressive"]
		}, {
			"name":	"recon_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "defensive"]
		}, {
			"name":	"air_training_xp_gain_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["air"]
		}, {
			"name":	"air_accidents",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["air"]
		}, {
			"name":	"air_accidents_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["air"]
		}, {
			"name":	"consumer_goods_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country", "war_production"]
		}, {
			"name":	"civilian_factory_use",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country", "war_production"]
		}, {
			"name":	"nuclear_production",
			"type":	"bool",
			"categories":	["country"]
		}, {
			"name":	"nuclear_production_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"foreign_subversive_activites",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"subversive_activites_upkeep",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"air_attack_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["air"]
		}, {
			"name":	"air_defence_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["air"]
		}, {
			"name":	"air_agility_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["air"]
		}, {
			"name":	"air_strategic_bomber_attack_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["air"]
		}, {
			"name":	"air_interception_attack_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["air"]
		}, {
			"name":	"air_air_superiority_attack_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["air"]
		}, {
			"name":	"air_close_air_support_attack_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["air"]
		}, {
			"name":	"air_paradrop_attack_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["air"]
		}, {
			"name":	"air_strategic_bomber_defence_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["air"]
		}, {
			"name":	"air_interception_defence_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["air"]
		}, {
			"name":	"air_air_superiority_defence_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["air"]
		}, {
			"name":	"air_close_air_support_defence_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["air"]
		}, {
			"name":	"air_paradrop_defence_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["air"]
		}, {
			"name":	"air_strategic_bomber_agility_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["air"]
		}, {
			"name":	"air_interception_agility_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["air"]
		}, {
			"name":	"air_air_superiority_agility_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["air"]
		}, {
			"name":	"air_close_air_support_agility_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["air"]
		}, {
			"name":	"air_paradrop_agility_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["air"]
		}, {
			"name":	"army_morale_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "defensive", "aggressive"]
		}, {
			"name":	"army_morale",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "defensive", "aggressive"]
		}, {
			"name":	"military_leader_cost_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["unit_leader"]
		}, {
			"name":	"army_leader_cost_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["unit_leader"]
		}, {
			"name":	"navy_leader_cost_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["unit_leader"]
		}, {
			"name":	"army_leader_start_level",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["unit_leader"]
		}, {
			"name":	"navy_leader_start_level",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["unit_leader"]
		}, {
			"name":	"naval_morale",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["naval", "unit_leader"]
		}, {
			"name":	"naval_morale_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["naval", "unit_leader"]
		}, {
			"name":	"local_org_regain",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["army"]
		}, {
			"name":	"army_org_regain",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["army"]
		}, {
			"name":	"dig_in_speed",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["army", "defensive"]
		}, {
			"name":	"dig_in_speed_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "defensive"]
		}, {
			"name":	"army_bonus_air_superiority_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["air"]
		}, {
			"name":	"enemy_army_bonus_air_superiority_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["air"]
		}, {
			"name":	"air_cas_present_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["air"]
		}, {
			"name":	"navy_anti_air_attack",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["naval", "unit_leader"]
		}, {
			"name":	"navy_anti_air_attack_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["naval", "unit_leader"]
		}, {
			"name":	"navy_max_range",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["naval", "unit_leader"]
		}, {
			"name":	"navy_max_range_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["naval", "unit_leader"]
		}, {
			"name":	"amphibious_invasion",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["naval", "unit_leader"]
		}, {
			"name":	"stability_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"stability_weekly",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"stability_weekly_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"party_popularity_stability_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"war_stability_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"surrender_limit",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"forced_surrender_limit",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"max_surrender_limit_offset",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"war_support_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"war_support_weekly",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"war_support_weekly_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"opinion_gain_monthly",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["country"]
		}, {
			"name":	"opinion_gain_monthly_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"opinion_gain_monthly_same_ideology",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["country"]
		}, {
			"name":	"opinion_gain_monthly_same_ideology_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"improve_relations_maintain_cost_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"conversion_cost_mil_to_civ_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country", "war_production"]
		}, {
			"name":	"conversion_cost_civ_to_mil_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country", "war_production"]
		}, {
			"name":	"global_building_slots",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country", "war_production"]
		}, {
			"name":	"global_building_slots_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country", "war_production"]
		}, {
			"name":	"local_building_slots",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["state", "war_production"]
		}, {
			"name":	"local_building_slots_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["state", "war_production"]
		}, {
			"name":	"line_change_production_efficiency_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country", "war_production"]
		}, {
			"name":	"production_speed_buildings_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country", "war_production"]
		}, {
			"name":	"production_factory_max_efficiency_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country", "war_production"]
		}, {
			"name":	"production_factory_efficiency_gain_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country", "war_production"]
		}, {
			"name":	"production_factory_start_efficiency_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country", "war_production"]
		}, {
			"name":	"production_lack_of_resource_penalty_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country", "war_production"]
		}, {
			"name":	"army_attack_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "aggressive"]
		}, {
			"name":	"army_defence_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "defensive"]
		}, {
			"name":	"army_core_attack_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "aggressive"]
		}, {
			"name":	"army_core_defence_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "defensive"]
		}, {
			"name":	"army_infantry_attack_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "aggressive"]
		}, {
			"name":	"army_infantry_defence_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "defensive"]
		}, {
			"name":	"army_armor_attack_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "aggressive"]
		}, {
			"name":	"army_armor_defence_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "defensive"]
		}, {
			"name":	"army_artillery_attack_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "aggressive"]
		}, {
			"name":	"army_artillery_defence_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "defensive"]
		}, {
			"name":	"special_forces_attack_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "aggressive"]
		}, {
			"name":	"special_forces_defence_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "defensive"]
		}, {
			"name":	"motorized_attack_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "aggressive"]
		}, {
			"name":	"rocket_attack_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "aggressive"]
		}, {
			"name":	"motorized_defence_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "defensive"]
		}, {
			"name":	"cavalry_attack_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "aggressive"]
		}, {
			"name":	"cavalry_defence_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "defensive"]
		}, {
			"name":	"navy_submarine_attack_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["naval", "unit_leader", "aggressive"]
		}, {
			"name":	"navy_submarine_defence_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["naval", "unit_leader", "defensive"]
		}, {
			"name":	"navy_capital_ship_attack_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["naval", "unit_leader", "aggressive"]
		}, {
			"name":	"navy_capital_ship_defence_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["naval", "unit_leader", "defensive"]
		}, {
			"name":	"navy_screen_attack_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["naval", "unit_leader", "aggressive"]
		}, {
			"name":	"navy_screen_defence_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["naval", "unit_leader", "defensive"]
		}, {
			"name":	"navy_submarine_detection_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["naval", "unit_leader", "defensive"]
		}, {
			"name":	"navy_carrier_air_attack_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["naval", "unit_leader", "aggressive"]
		}, {
			"name":	"navy_carrier_air_targetting_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["naval", "unit_leader", "aggressive"]
		}, {
			"name":	"navy_carrier_air_agility_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["naval", "unit_leader", "aggressive"]
		}, {
			"name":	"convoy_raiding_efficiency_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["naval", "unit_leader", "aggressive"]
		}, {
			"name":	"research_speed_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country", "military_advancements"]
		}, {
			"name":	"research_sharing_per_country_bonus",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"research_sharing_per_country_bonus_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"encryption",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country", "defensive"]
		}, {
			"name":	"encryption_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country", "defensive"]
		}, {
			"name":	"decryption",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country", "aggressive"]
		}, {
			"name":	"decryption_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country", "aggressive"]
		}, {
			"name":	"industrial_capacity_factory",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country", "war_production"]
		}, {
			"name":	"industrial_capacity_dockyard",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country", "war_production"]
		}, {
			"name":	"tech_air_damage_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country", "war_production"]
		}, {
			"name":	"industry_air_damage_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country", "war_production"]
		}, {
			"name":	"industry_repair_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country", "war_production"]
		}, {
			"name":	"industry_free_repair_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country", "war_production"]
		}, {
			"name":	"equipment_conversion_speed",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country", "war_production"]
		}, {
			"name":	"production_oil_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country", "war_production"]
		}, {
			"name":	"max_training",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["army", "aggressive"]
		}, {
			"name":	"training_time_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["army", "aggressive"]
		}, {
			"name":	"min_export",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country", "war_production"]
		}, {
			"name":	"trade_opinion_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country", "war_production"]
		}, {
			"name":	"ground_attack",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["air", "aggressive"]
		}, {
			"name":	"ground_attack_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["air", "aggressive"]
		}, {
			"name":	"puppet_cost_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["peace", "defensive"]
		}, {
			"name":	"annex_cost_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["peace", "aggressive"]
		}, {
			"name":	"experience_loss_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["country"]
		}, {
			"name":	"equipment_capture",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["country"]
		}, {
			"name":	"generate_wargoal_tension",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["country"]
		}, {
			"name":	"generate_wargoal_tension_against",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["country"]
		}, {
			"name":	"join_faction_tension",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["country"]
		}, {
			"name":	"lend_lease_tension",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["country"]
		}, {
			"name":	"request_lease_tension",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["country"]
		}, {
			"name":	"send_volunteers_tension",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["country", "defensive"]
		}, {
			"name":	"guarantee_tension",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["country", "defensive"]
		}, {
			"name":	"guarantee_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country", "politics"]
		}, {
			"name":	"send_volunteer_size",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"send_volunteer_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["country"]
		}, {
			"name":	"send_volunteer_divisions_required",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["country"]
		}, {
			"name":	"air_volunteer_cap",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"justify_war_goal_time",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["country", "aggressive"]
		}, {
			"name":	"justify_war_goal_when_in_major_war_time",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["country", "aggressive"]
		}, {
			"name":	"enemy_justify_war_goal_time",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["country", "aggressive"]
		}, {
			"name":	"enemy_declare_war_tension",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["country", "aggressive"]
		}, {
			"name":	"faction_trade_opinion_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country", "war_production"]
		}, {
			"name":	"land_reinforce_rate",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["country", "war_production"]
		}, {
			"name":	"drift_defence_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["politics"]
		}, {
			"name":	"master_ideology_drift",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["politics"]
		}, {
			"name":	"planning_speed",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "aggressive"]
		}, {
			"name":	"max_planning",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "aggressive"]
		}, {
			"name":	"max_planning_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "aggressive"]
		}, {
			"name":	"max_dig_in",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "defensive"]
		}, {
			"name":	"max_dig_in_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "defensive"]
		}, {
			"name":	"land_night_attack",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "aggressive"]
		}, {
			"name":	"air_strategic_bomber_night_penalty",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["air"]
		}, {
			"name":	"air_night_penalty",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["air"]
		}, {
			"name":	"air_weather_penalty",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["air"]
		}, {
			"name":	"pocket_penalty",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "aggressive"]
		}, {
			"name":	"no_supply_grace",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "aggressive"]
		}, {
			"name":	"port_strike",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["naval", "unit_leader", "aggressive"]
		}, {
			"name":	"carrier_capacity_penalty_reduction",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["naval", "unit_leader", "aggressive"]
		}, {
			"name":	"convoy_escort_efficiency",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["naval", "unit_leader", "defensive"]
		}, {
			"name":	"combat_width_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "aggressive"]
		}, {
			"name":	"occupation_cost",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"minimum_training_level",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country", "war_production"]
		}, {
			"name":	"modifier_enemy_port_superiority_limit",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["air", "country"]
		}, {
			"name":	"autonomy_manpower_share",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["autonomy"]
		}, {
			"name":	"extra_trade_to_overlord_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["autonomy"]
		}, {
			"name":	"overlord_trade_cost_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["autonomy"]
		}, {
			"name":	"cic_to_overlord_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["autonomy"]
		}, {
			"name":	"mic_to_overlord_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["autonomy"]
		}, {
			"name":	"autonomy_gain_trade",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["autonomy"]
		}, {
			"name":	"autonomy_gain_trade_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["autonomy"]
		}, {
			"name":	"autonomy_gain_ll_to_overlord",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["autonomy"]
		}, {
			"name":	"autonomy_gain_ll_to_overlord_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["autonomy"]
		}, {
			"name":	"autonomy_gain_ll_to_subject",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["autonomy"]
		}, {
			"name":	"autonomy_gain_ll_to_subject_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["autonomy"]
		}, {
			"name":	"autonomy_gain_warscore",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["autonomy"]
		}, {
			"name":	"autonomy_gain_warscore_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["autonomy"]
		}, {
			"name":	"autonomy_gain",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["autonomy"]
		}, {
			"name":	"autonomy_gain_global_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["autonomy"]
		}, {
			"name":	"license_subject_master_purchase_cost",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["autonomy"]
		}, {
			"name":	"subjects_autonomy_gain",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["autonomy"]
		}, {
			"name":	"can_master_build_for_us",
			"type":	"bool",
			"categories":	["autonomy"]
		}, {
			"name":	"master_build_autonomy_factor",
			"type":	"bool",
			"categories":	["autonomy"]
		}, {
			"name":	"industrial_factory_donations",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["government_in_exile"]
		}, {
			"name":	"military_factory_donations",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["government_in_exile"]
		}, {
			"name":	"dockyard_donations",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["government_in_exile"]
		}, {
			"name":	"civil_war_involvement_tension",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["country"]
		}, {
			"name":	"license_purchase_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"license_air_purchase_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"license_infantry_purchase_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"license_armor_purchase_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"license_naval_purchase_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"license_tech_difference_speed",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"license_production_speed",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"license_infantry_eq_tech_difference_speed_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"license_artillery_eq_tech_difference_speed_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"license_light_tank_eq_tech_difference_speed_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"license_anti_tank_eq_tech_difference_speed_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"license_infantry_eq_production_speed_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"license_artillery_eq_production_speed_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"license_light_tank_eq_production_speed_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"license_anti_tank_eq_production_speed_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"license_infantry_eq_cost_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"license_artillery_eq_cost_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"license_light_tank_eq_cost_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"license_anti_tank_eq_cost_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"ai_call_ally_desire_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["ai"]
		}, {
			"name":	"ai_join_ally_desire_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["ai"]
		}, {
			"name":	"ai_get_ally_desire_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["ai"]
		}, {
			"name":	"ai_focus_defense_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["ai"]
		}, {
			"name":	"ai_focus_aggressive_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["ai"]
		}, {
			"name":	"ai_focus_war_production_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["ai"]
		}, {
			"name":	"ai_focus_military_advancements_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["ai"]
		}, {
			"name":	"ai_focus_peaceful_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["ai"]
		}, {
			"name":	"ai_focus_naval_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["ai"]
		}, {
			"name":	"ai_focus_naval_air_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["ai"]
		}, {
			"name":	"ai_focus_aviation_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["ai"]
		}, {
			"name":	"ai_badass_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["ai"]
		}, {
			"name":	"ai_focus_military_equipment_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["ai"]
		}, {
			"name":	"ai_desired_divisions_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["ai"]
		}, {
			"name":	"ai_license_acceptance",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["ai"]
		}, {
			"name":	"command_power_gain",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"max_command_power",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"command_power_gain_mult",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"max_command_power_mult",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"acclimatization_cold_climate_gain_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army"]
		}, {
			"name":	"acclimatization_hot_climate_gain_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army"]
		}, {
			"name":	"army_leader_start_attack_level",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["unit_leader"]
		}, {
			"name":	"army_leader_start_defense_level",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["unit_leader"]
		}, {
			"name":	"army_leader_start_logistics_level",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["unit_leader"]
		}, {
			"name":	"army_leader_start_planning_level",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["unit_leader"]
		}, {
			"name":	"navy_leader_start_attack_level",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["unit_leader"]
		}, {
			"name":	"navy_leader_start_defense_level",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["unit_leader"]
		}, {
			"name":	"navy_leader_start_maneuvering_level",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["unit_leader"]
		}, {
			"name":	"navy_leader_start_coordination_level",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["unit_leader"]
		}, {
			"name":	"attack_bonus_against",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army"]
		}, {
			"name":	"attack_bonus_against_cores",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army"]
		}, {
			"name":	"defense_bonus_against",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army"]
		}, {
			"name":	"mechanized_attack_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "aggressive"]
		}, {
			"name":	"mechanized_defence_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "defensive"]
		}, {
			"name":	"max_commander_army_size",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["army"]
		}, {
			"name":	"max_army_group_size",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["unit_leader"]
		}, {
			"name":	"terrain_penalty_reduction",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "defensive"]
		}, {
			"name":	"extra_paratrooper_supply_grace",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army"]
		}, {
			"name":	"extra_marine_supply_grace",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army"]
		}, {
			"name":	"cas_damage_reduction",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army"]
		}, {
			"name":	"air_superiority_bonus_in_combat",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army"]
		}, {
			"name":	"shore_bombardment_bonus",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army"]
		}, {
			"name":	"recon_factor_while_entrenched",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "defensive"]
		}, {
			"name":	"skill_bonus_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["unit_leader"]
		}, {
			"name":	"cannot_use_abilities",
			"type":	"bool",
			"categories":	["unit_leader"]
		}, {
			"name":	"promote_cost_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["unit_leader"]
		}, {
			"name":	"sickness_chance",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["unit_leader"]
		}, {
			"name":	"river_crossing_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["unit_leader"]
		}, {
			"name":	"dont_lose_dig_in_on_attack",
			"type":	"bool",
			"categories":	["army", "defensive"]
		}, {
			"name":	"special_forces_cap",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army"]
		}, {
			"name":	"special_forces_min",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["army"]
		}, {
			"name":	"paratrooper_count_per_plane",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["unit_leader"]
		}, {
			"name":	"paradrop_organization_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["unit_leader"]
		}, {
			"name":	"paratrooper_aa_defense",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["unit_leader"]
		}, {
			"name":	"fortification_damage",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["unit_leader"]
		}, {
			"name":	"fortification_collateral_chance",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["unit_leader"]
		}, {
			"name":	"cic_to_target_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"mic_to_target_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"extra_trade_to_target_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"trade_cost_for_target_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"offensive_war_stability_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"defensive_war_stability_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"special_forces_training_time_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "war_production"]
		}, {
			"name":	"special_forces_no_supply_grace",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "aggressive"]
		}, {
			"name":	"special_forces_out_of_supply_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["army", "aggressive"]
		}, {
			"name":	"wounded_chance_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["unit_leader"]
		}, {
			"name":	"reassignment_duration_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["unit_leader"]
		}, {
			"name":	"naval_invasion_prep_speed",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["unit_leader"]
		}, {
			"name":	"equipment_capture_factor",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["country"]
		}, {
			"name":	"static_anti_air_damage_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["defensive"]
		}, {
			"name":	"static_anti_air_hit_chance_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["defensive"]
		}, {
			"name":	"critical_receive_chance",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["naval", "unit_leader", "country"]
		}, {
			"name":	"fuel_gain_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"fuel_gain_factor_from_states",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"fuel_gain_from_states",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"fuel_gain",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"max_fuel_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"max_fuel",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"max_fuel_building",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"base_fuel_gain",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"base_fuel_gain_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"fuel_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"army_fuel_capacity_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["army"]
		}, {
			"name":	"army_fuel_consumption_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["army"]
		}, {
			"name":	"navy_fuel_consumption_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["naval"]
		}, {
			"name":	"air_fuel_consumption_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["air"]
		}, {
			"name":	"navy_visibility",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["naval"]
		}, {
			"name":	"navy_casualty_on_hit",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["naval"]
		}, {
			"name":	"navy_casualty_on_sink",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["naval"]
		}, {
			"name":	"naval_attrition",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["naval"]
		}, {
			"name":	"mines_planting_by_fleets_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval"]
		}, {
			"name":	"mines_sweeping_by_fleets_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval"]
		}, {
			"name":	"mines_planting_by_air_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["air"]
		}, {
			"name":	"mines_sweeping_by_air_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["air"]
		}, {
			"name":	"naval_mines_effect_reduction",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval"]
		}, {
			"name":	"naval_mines_damage_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval"]
		}, {
			"name":	"naval_accidents_chance",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["naval"]
		}, {
			"name":	"naval_mine_hit_chance",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["naval"]
		}, {
			"name":	"exiled_divisions_attack_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["unit_leader"]
		}, {
			"name":	"own_exiled_divisions_attack_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["unit_leader"]
		}, {
			"name":	"exiled_divisions_defense_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["unit_leader"]
		}, {
			"name":	"own_exiled_divisions_defense_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["unit_leader"]
		}, {
			"name":	"legitimacy_daily",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["government_in_exile"]
		}, {
			"name":	"targeted_legitimacy_daily",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["government_in_exile"]
		}, {
			"name":	"screening_efficiency",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["naval", "unit_leader"]
		}, {
			"name":	"positioning",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["naval", "unit_leader"]
		}, {
			"name":	"exile_manpower_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["government_in_exile"]
		}, {
			"name":	"air_mission_xp_gain_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["air"]
		}, {
			"name":	"fighter_sortie_efficiency",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "unit_leader", "aggressive"]
		}, {
			"name":	"naval_damage_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["naval", "unit_leader", "aggressive"]
		}, {
			"name":	"naval_defense_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["naval", "unit_leader"]
		}, {
			"name":	"naval_enemy_retreat_chance",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["naval", "unit_leader"]
		}, {
			"name":	"naval_critical_score_chance_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["naval", "unit_leader", "aggressive"]
		}, {
			"name":	"naval_critical_effect_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["naval", "unit_leader"]
		}, {
			"name":	"naval_torpedo_reveal_chance_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["naval", "unit_leader"]
		}, {
			"name":	"naval_torpedo_screen_penetration_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["naval", "unit_leader", "aggressive"]
		}, {
			"name":	"naval_torpedo_cooldown_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["naval", "unit_leader", "aggressive"]
		}, {
			"name":	"naval_torpedo_hit_chance_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["naval", "unit_leader", "aggressive"]
		}, {
			"name":	"naval_enemy_fleet_size_ratio_penalty_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["naval", "unit_leader", "aggressive"]
		}, {
			"name":	"naval_has_potf_in_combat_attack",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["naval", "unit_leader", "aggressive"]
		}, {
			"name":	"naval_has_potf_in_combat_defense",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["naval", "unit_leader", "aggressive"]
		}, {
			"name":	"strike_force_movement_org_loss",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["naval", "unit_leader", "aggressive"]
		}, {
			"name":	"refit_speed",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"navy_refit_speed",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"refit_ic_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"navy_refit_ic_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"equipment_upgrade_xp_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"naval_equipment_upgrade_xp_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"land_equipment_upgrade_xp_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"air_equipment_upgrade_xp_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"repair_speed_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"armor_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["army", "defensive"]
		}, {
			"name":	"breakthrough_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["army", "aggressive"]
		}, {
			"name":	"resistance_target",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country", "state"]
		}, {
			"name":	"resistance_target_on_our_occupied_states",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country", "state"]
		}, {
			"name":	"resistance_decay",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country", "state"]
		}, {
			"name":	"resistance_growth",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country", "state"]
		}, {
			"name":	"resistance_decay_on_our_occupied_states",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country", "state"]
		}, {
			"name":	"resistance_growth_on_our_occupied_states",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country", "state"]
		}, {
			"name":	"starting_compliance",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country", "state"]
		}, {
			"name":	"compliance_growth",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country", "state"]
		}, {
			"name":	"compliance_growth_on_our_occupied_states",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country", "state"]
		}, {
			"name":	"army_speed_factor_for_controller",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["state", "army"]
		}, {
			"name":	"disable_strategic_redeployment",
			"type":	"bool",
			"categories":	["state", "army"]
		}, {
			"name":	"disable_strategic_redeployment_for_controller",
			"type":	"bool",
			"categories":	["state", "army"]
		}, {
			"name":	"local_supplies_for_controller",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["state", "war_production"]
		}, {
			"name":	"attrition_for_controller",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army", "defensive", "aggressive"]
		}, {
			"name":	"resistance_garrison_penetration_chance",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country", "state"]
		}, {
			"name":	"resistance_damage_to_garrison",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country", "state"]
		}, {
			"name":	"resistance_damage_to_garrison_on_our_occupied_states",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country", "state"]
		}, {
			"name":	"required_garrison_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country", "state"]
		}, {
			"name":	"compliance_gain",
			"type":	"number",
			"decimal_places":	3,
			"categories":	["country", "state"]
		}, {
			"name":	"no_compliance_gain",
			"type":	"bool",
			"categories":	["country", "state"]
		}, {
			"name":	"enemy_spy_negative_status_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country", "state"]
		}, {
			"name":	"recruitable_population",
			"type":	"number",
			"decimal_places":	3,
			"categories":	["state"]
		}, {
			"name":	"recruitable_population_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["state"]
		}, {
			"name":	"resistance_activity",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["country", "state"]
		}, {
			"name":	"legitimacy_gain_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["government_in_exile"]
		}, {
			"name":	"civilian_intel_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"army_intel_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"navy_intel_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"airforce_intel_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"intelligence_agency_defense",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"root_out_resistance_effectiveness_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"defense_impact_on_blueprint_stealing",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"intel_from_operatives_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"target_sabotage_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"boost_resistance_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operative_death_on_capture_chance",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"enemy_operative_recruitment_chance",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"occupied_operative_recruitment_chance",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"new_operative_slot_bonus",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operative_slot",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"commando_trait_chance_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"control_trade_mission_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"diplomatic_pressure_mission_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"propaganda_mission_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"boost_ideology_mission_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"decryption_power",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"crypto_strength",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"crypto_department_enabled",
			"type":	"bool",
			"categories":	["intelligence_agency"]
		}, {
			"name":	"intel_network_gain",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["unit_leader", "country", "state", "intelligence_agency"]
		}, {
			"name":	"intel_network_gain_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["unit_leader", "country", "state", "intelligence_agency"]
		}, {
			"name":	"enemy_intel_network_gain_factor_over_occupied_tag",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["state"]
		}, {
			"name":	"own_operative_detection_chance",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["unit_leader", "country"]
		}, {
			"name":	"enemy_operative_detection_chance",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["unit_leader", "country"]
		}, {
			"name":	"enemy_operative_detection_chance_over_occupied_tag",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["unit_leader", "country"]
		}, {
			"name":	"own_operative_detection_chance_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["unit_leader", "country"]
		}, {
			"name":	"enemy_operative_detection_chance_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["unit_leader", "country"]
		}, {
			"name":	"enemy_operative_detection_chance_factor_over_occupied_tag",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["unit_leader", "country"]
		}, {
			"name":	"own_operative_capture_chance_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["unit_leader", "country"]
		}, {
			"name":	"enemy_operative_capture_chance_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["unit_leader", "country"]
		}, {
			"name":	"own_operative_forced_into_hiding_time_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["unit_leader", "country"]
		}, {
			"name":	"enemy_operative_forced_into_hiding_time_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["unit_leader", "country"]
		}, {
			"name":	"own_operative_harmed_time_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["unit_leader", "country"]
		}, {
			"name":	"enemy_operative_harmed_time_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["unit_leader", "country"]
		}, {
			"name":	"own_operative_intel_extraction_rate",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["unit_leader", "country"]
		}, {
			"name":	"enemy_operative_intel_extraction_rate",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["unit_leader", "country"]
		}, {
			"name":	"state_resources_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["state", "war_production"]
		}, {
			"name":	"state_production_speed_buildings_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["state", "war_production"]
		}, {
			"name":	"civilian_intel_to_others",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["country"]
		}, {
			"name":	"army_intel_to_others",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["country"]
		}, {
			"name":	"navy_intel_to_others",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["country"]
		}, {
			"name":	"airforce_intel_to_others",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["country"]
		}, {
			"name":	"breakthrough_bonus_against",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["army"]
		}, {
			"name":	"disabled_ideas",
			"type":	"bool",
			"categories":	["country"]
		}, {
			"name":	"agency_upgrade_time",
			"type":	"number",
			"decimal_places":	1,
			"categories":	["country"]
		}, {
			"name":	"civilian_intel_decryption_bonus",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"army_intel_decryption_bonus",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"navy_intel_decryption_bonus",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"airforce_intel_decryption_bonus",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"decryption_power_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"female_random_operative_chance",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country", "intelligence_agency"]
		}, {
			"name":	"female_random_army_leader_chance",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country", "army"]
		}, {
			"name":	"female_random_admiral_chance",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"female_random_country_leader_chance",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"operation_outcome",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_infiltrate_outcome",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"democratic_drift",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["politics"]
		}, {
			"name":	"democratic_acceptance",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["politics"]
		}, {
			"name":	"communism_drift",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["politics"]
		}, {
			"name":	"communism_acceptance",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["politics"]
		}, {
			"name":	"fascism_drift",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["politics"]
		}, {
			"name":	"fascism_acceptance",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["politics"]
		}, {
			"name":	"neutrality_drift",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["politics"]
		}, {
			"name":	"neutrality_acceptance",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["politics"]
		}, {
			"name":	"production_cost_max_convoy",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval"]
		}, {
			"name":	"production_cost_max_ship_hull_carrier",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval"]
		}, {
			"name":	"production_cost_max_ship_hull_cruiser",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval"]
		}, {
			"name":	"production_cost_max_ship_hull_heavy",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval"]
		}, {
			"name":	"production_cost_max_ship_hull_light",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval"]
		}, {
			"name":	"production_cost_max_ship_hull_submarine",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval"]
		}, {
			"name":	"experience_gain_fighter_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_fighter_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_scout_plane_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_scout_plane_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_cv_fighter_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_cv_fighter_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_heavy_fighter_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_heavy_fighter_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_jet_fighter_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_jet_fighter_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_cas_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_cas_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_cv_cas_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_cv_cas_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_nav_bomber_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_nav_bomber_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_cv_nav_bomber_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_cv_nav_bomber_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_tac_bomber_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_tac_bomber_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_jet_tac_bomber_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_jet_tac_bomber_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_strat_bomber_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_strat_bomber_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_jet_strat_bomber_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_jet_strat_bomber_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_transport_plane_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_transport_plane_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_rocket_interceptor_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_rocket_interceptor_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_guided_missile_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_guided_missile_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_suicide_craft_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_suicide_craft_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_amphibious_armor_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_amphibious_armor_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_amphibious_mechanized_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_amphibious_mechanized_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_anti_air_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_anti_air_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_anti_air_brigade_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_anti_air_brigade_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_mot_anti_air_brigade_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_mot_anti_air_brigade_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_anti_tank_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_anti_tank_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_anti_tank_brigade_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_anti_tank_brigade_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_mot_anti_tank_brigade_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_mot_anti_tank_brigade_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_armored_car_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_armored_car_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_artillery_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_artillery_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_rocket_artillery_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_rocket_artillery_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_artillery_brigade_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_artillery_brigade_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_mot_artillery_brigade_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_mot_artillery_brigade_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_rocket_artillery_brigade_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_rocket_artillery_brigade_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_mot_rocket_artillery_brigade_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_mot_rocket_artillery_brigade_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_motorized_rocket_brigade_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_motorized_rocket_brigade_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_battle_cruiser_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_battle_cruiser_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_battleship_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_battleship_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_carrier_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_carrier_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_cavalry_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_cavalry_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_destroyer_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_destroyer_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_engineer_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_engineer_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_field_hospital_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_field_hospital_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_heavy_armor_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_heavy_armor_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_heavy_cruiser_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_heavy_cruiser_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_infantry_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_infantry_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_bicycle_battalion_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_bicycle_battalion_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_marine_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_marine_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_mountaineers_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_mountaineers_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_paratrooper_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_paratrooper_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_motorized_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_motorized_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_mechanized_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_mechanized_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_fake_intel_unit_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_fake_intel_unit_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_light_armor_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_light_armor_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_light_cruiser_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_light_cruiser_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_logistics_company_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_logistics_company_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_maintenance_company_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_maintenance_company_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_medium_armor_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_medium_armor_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_military_police_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_military_police_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_modern_armor_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_modern_armor_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_recon_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_recon_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_mot_recon_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_mot_recon_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_armored_car_recon_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_armored_car_recon_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_light_tank_recon_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_light_tank_recon_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_signal_company_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_signal_company_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_light_sp_anti_air_brigade_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_light_sp_anti_air_brigade_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_medium_sp_anti_air_brigade_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_medium_sp_anti_air_brigade_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_heavy_sp_anti_air_brigade_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_heavy_sp_anti_air_brigade_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_super_heavy_sp_anti_air_brigade_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_super_heavy_sp_anti_air_brigade_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_modern_sp_anti_air_brigade_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_modern_sp_anti_air_brigade_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_light_sp_artillery_brigade_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_light_sp_artillery_brigade_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_medium_sp_artillery_brigade_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_medium_sp_artillery_brigade_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_heavy_sp_artillery_brigade_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_heavy_sp_artillery_brigade_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_super_heavy_sp_artillery_brigade_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_super_heavy_sp_artillery_brigade_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_modern_sp_artillery_brigade_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_modern_sp_artillery_brigade_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_submarine_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_submarine_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_super_heavy_armor_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_super_heavy_armor_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_light_tank_destroyer_brigade_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_light_tank_destroyer_brigade_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_medium_tank_destroyer_brigade_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_medium_tank_destroyer_brigade_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_heavy_tank_destroyer_brigade_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_heavy_tank_destroyer_brigade_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_super_heavy_tank_destroyer_brigade_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_super_heavy_tank_destroyer_brigade_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_modern_tank_destroyer_brigade_training_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"experience_gain_modern_tank_destroyer_brigade_combat_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["naval", "country"]
		}, {
			"name":	"state_resource_oil",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["state"]
		}, {
			"name":	"temporary_state_resource_oil",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["state"]
		}, {
			"name":	"state_resource_cost_oil",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["state"]
		}, {
			"name":	"country_resource_oil",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["state"]
		}, {
			"name":	"country_resource_cost_oil",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["state"]
		}, {
			"name":	"state_resource_aluminium",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["state"]
		}, {
			"name":	"temporary_state_resource_aluminium",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["state"]
		}, {
			"name":	"state_resource_cost_aluminium",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["state"]
		}, {
			"name":	"country_resource_aluminium",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["state"]
		}, {
			"name":	"country_resource_cost_aluminium",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["state"]
		}, {
			"name":	"state_resource_rubber",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["state"]
		}, {
			"name":	"temporary_state_resource_rubber",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["state"]
		}, {
			"name":	"state_resource_cost_rubber",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["state"]
		}, {
			"name":	"country_resource_rubber",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["state"]
		}, {
			"name":	"country_resource_cost_rubber",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["state"]
		}, {
			"name":	"state_resource_tungsten",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["state"]
		}, {
			"name":	"temporary_state_resource_tungsten",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["state"]
		}, {
			"name":	"state_resource_cost_tungsten",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["state"]
		}, {
			"name":	"country_resource_tungsten",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["state"]
		}, {
			"name":	"country_resource_cost_tungsten",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["state"]
		}, {
			"name":	"state_resource_steel",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["state"]
		}, {
			"name":	"temporary_state_resource_steel",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["state"]
		}, {
			"name":	"state_resource_cost_steel",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["state"]
		}, {
			"name":	"country_resource_steel",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["state"]
		}, {
			"name":	"country_resource_cost_steel",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["state"]
		}, {
			"name":	"state_resource_chromium",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["state"]
		}, {
			"name":	"temporary_state_resource_chromium",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["state"]
		}, {
			"name":	"state_resource_cost_chromium",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["state"]
		}, {
			"name":	"country_resource_chromium",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["state"]
		}, {
			"name":	"country_resource_cost_chromium",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["state"]
		}, {
			"name":	"production_speed_infrastructure_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"state_production_speed_infrastructure_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["state"]
		}, {
			"name":	"repair_speed_infrastructure_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"state_repair_speed_infrastructure_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["state"]
		}, {
			"name":	"production_speed_arms_factory_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"state_production_speed_arms_factory_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["state"]
		}, {
			"name":	"repair_speed_arms_factory_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"state_repair_speed_arms_factory_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["state"]
		}, {
			"name":	"production_speed_industrial_complex_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"state_production_speed_industrial_complex_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["state"]
		}, {
			"name":	"repair_speed_industrial_complex_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"state_repair_speed_industrial_complex_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["state"]
		}, {
			"name":	"production_speed_air_base_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"state_production_speed_air_base_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["state"]
		}, {
			"name":	"repair_speed_air_base_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"state_repair_speed_air_base_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["state"]
		}, {
			"name":	"production_speed_naval_base_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"state_production_speed_naval_base_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["state"]
		}, {
			"name":	"repair_speed_naval_base_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"state_repair_speed_naval_base_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["state"]
		}, {
			"name":	"production_speed_bunker_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"state_production_speed_bunker_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["state"]
		}, {
			"name":	"repair_speed_bunker_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"state_repair_speed_bunker_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["state"]
		}, {
			"name":	"production_speed_coastal_bunker_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"state_production_speed_coastal_bunker_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["state"]
		}, {
			"name":	"repair_speed_coastal_bunker_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"state_repair_speed_coastal_bunker_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["state"]
		}, {
			"name":	"production_speed_dockyard_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"state_production_speed_dockyard_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["state"]
		}, {
			"name":	"repair_speed_dockyard_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"state_repair_speed_dockyard_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["state"]
		}, {
			"name":	"production_speed_anti_air_building_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"state_production_speed_anti_air_building_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["state"]
		}, {
			"name":	"repair_speed_anti_air_building_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"state_repair_speed_anti_air_building_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["state"]
		}, {
			"name":	"production_speed_synthetic_refinery_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"state_production_speed_synthetic_refinery_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["state"]
		}, {
			"name":	"repair_speed_synthetic_refinery_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"state_repair_speed_synthetic_refinery_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["state"]
		}, {
			"name":	"production_speed_fuel_silo_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"state_production_speed_fuel_silo_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["state"]
		}, {
			"name":	"repair_speed_fuel_silo_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"state_repair_speed_fuel_silo_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["state"]
		}, {
			"name":	"production_speed_radar_station_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"state_production_speed_radar_station_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["state"]
		}, {
			"name":	"repair_speed_radar_station_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"state_repair_speed_radar_station_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["state"]
		}, {
			"name":	"production_speed_rocket_site_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"state_production_speed_rocket_site_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["state"]
		}, {
			"name":	"repair_speed_rocket_site_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"state_repair_speed_rocket_site_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["state"]
		}, {
			"name":	"production_speed_nuclear_reactor_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"state_production_speed_nuclear_reactor_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["state"]
		}, {
			"name":	"repair_speed_nuclear_reactor_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["country"]
		}, {
			"name":	"state_repair_speed_nuclear_reactor_factor",
			"type":	"number",
			"decimal_places":	2,
			"categories":	["state"]
		}, {
			"name":	"political_advisor_cost_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"army_chief_cost_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"air_chief_cost_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"navy_chief_cost_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"high_command_cost_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"theorist_cost_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"aircraft_manufacturer_cost_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"economy_cost_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"trade_laws_cost_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"country_cost_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"mobilization_laws_cost_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"industrial_concern_cost_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"tank_manufacturer_cost_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"naval_manufacturer_cost_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"materiel_manufacturer_cost_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"hidden_ideas_cost_factor",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["country"]
		}, {
			"name":	"operation_rescue_operative_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_rescue_operative_outcome",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_rescue_operative_risk",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_infiltrate_risk",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_risk",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_infiltrate_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_infiltrate_civilian_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_infiltrate_civilian_outcome",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_infiltrate_civilian_risk",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_fake_intel_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_fake_intel_outcome",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_fake_intel_risk",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_capture_cipher_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_capture_cipher_outcome",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_capture_cipher_risk",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_infiltrate_armed_forces_army_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_infiltrate_armed_forces_army_outcome",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_infiltrate_armed_forces_army_risk",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_infiltrate_armed_forces_navy_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_infiltrate_armed_forces_navy_outcome",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_infiltrate_armed_forces_navy_risk",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_infiltrate_armed_forces_airforce_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_infiltrate_armed_forces_airforce_outcome",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_infiltrate_armed_forces_airforce_risk",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_coup_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_coup_government_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_coup_government_outcome",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_coup_government_risk",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_boost_resistance_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_boost_resistance_outcome",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_boost_resistance_risk",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_make_resistance_contacts_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_make_resistance_contacts_outcome",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_make_resistance_contacts_risk",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_collaboration_government_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_collaboration_government_outcome",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_collaboration_government_risk",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_coordinated_strike_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_coordinated_strike_outcome",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_coordinated_strike_risk",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_steal_tech_risk",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_steal_tech_outcome",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_steal_tech_civilian_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_steal_tech_civilian_outcome",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_steal_tech_civilian_risk",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"target_sabotage_risk",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"target_sabotage_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_targeted_sabotage_industry_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_targeted_sabotage_industry_outcome",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_targeted_sabotage_industry_risk",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_targeted_sabotage_infrastructure_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_targeted_sabotage_infrastructure_outcome",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_targeted_sabotage_infrastructure_risk",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_targeted_sabotage_resources_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_targeted_sabotage_resources_outcome",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_targeted_sabotage_resources_risk",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_steal_tech_army_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_steal_tech_army_outcome",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_steal_tech_army_risk",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_steal_tech_navy_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_steal_tech_navy_outcome",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_steal_tech_navy_risk",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_steal_tech_airforce_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_steal_tech_airforce_outcome",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"operation_steal_tech_airforce_risk",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"FRA_instigate_workers_revolution_britain_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"FRA_instigate_workers_revolution_britain_outcome",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"FRA_instigate_workers_revolution_britain_risk",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"FRA_instigate_workers_revolution_italy_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"FRA_instigate_workers_revolution_italy_outcome",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"FRA_instigate_workers_revolution_italy_risk",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"FRA_instigate_workers_revolution_spain_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"FRA_instigate_workers_revolution_spain_outcome",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"FRA_instigate_workers_revolution_spain_risk",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"FRA_instigate_workers_revolution_germany_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"FRA_instigate_workers_revolution_germany_outcome",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"FRA_instigate_workers_revolution_germany_risk",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"FRA_coup_in_north_africa_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"FRA_coup_in_north_africa_outcome",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"FRA_coup_in_north_africa_risk",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"FRA_coup_in_syria_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"FRA_coup_in_syria_outcome",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"FRA_coup_in_syria_risk",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"FRA_coup_in_indochina_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"FRA_coup_in_indochina_outcome",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"FRA_coup_in_indochina_risk",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"FRA_coup_in_central_africa_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"FRA_coup_in_central_africa_outcome",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"FRA_coup_in_central_africa_risk",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"FRA_coup_in_west_africa_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"FRA_coup_in_west_africa_outcome",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"FRA_coup_in_west_africa_risk",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"FRA_coup_in_madagascar_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"FRA_coup_in_madagascar_outcome",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"FRA_coup_in_madagascar_risk",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"heavy_water_raid_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"heavy_water_raid_outcome",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"heavy_water_raid_risk",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"bruneval_raid_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"bruneval_raid_outcome",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"bruneval_raid_risk",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"capture_tito_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"capture_tito_outcome",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"capture_tito_risk",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"rescue_mussolini_cost",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"rescue_mussolini_outcome",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}, {
			"name":	"rescue_mussolini_risk",
			"type":	"number",
			"decimal_places":	0,
			"categories":	["intelligence_agency"]
		}],
	"dynamic_variables":	{
		"global":	{
			"year":	{
				"description":	"current year"
			},
			"operations":	{
				"description":	"array of objects in operations database"
			},
			"majors":	{
				"description":	"get array of all majors (including non existing"
			},
			"technology":	{
				"description":	"array of objects in technology database"
			},
			"num_days":	{
				"description":	"current total days"
			},
			"date":	{
				"description":	"get date value that can be comparable to other date values and localized using GetDateString/GetDateStringShortMonth/GetDateStringNoHour/GetDateStringNoHourLong scripted locs"
			},
			"countries":	{
				"description":	"get array of all countries (including non existing"
			},
			"ideology_groups":	{
				"description":	"array of objects in ideology_groups database"
			},
			"difficulty":	{
				"description":	"check if the difficulty is above or below specified value 0-2 (difficulty enum). Example: difficulty > 0 (above easy)",
				"is_trigger":	true
			},
			"threat":	{
				"description":	"check the global threat value. 0-1 value",
				"is_trigger":	true
			}
		},
		"country":	{
			"political_power":	{
				"description":	"total political power of country"
			},
			"resource_consumed":	{
				"description":	"number of resources consumed by country, resource type is defined in target resource_consumed@steel"
			},
			"manpower":	{
				"description":	"DEPRECATED, MAY OVERFLOW. total manpower of country"
			},
			"air_intel":	{
				"description":	"air intel against a target country. example GER.air_intel@ENG"
			},
			"overlord":	{
				"description":	"master of this subject"
			},
			"num_of_nukes":	{
				"description":	"check amount of nukes",
				"is_trigger":	true
			},
			"command_power":	{
				"description":	"total command power of country"
			},
			"enemies_of_allies":	{
				"description":	"array of enemies of allies"
			},
			"owned_controlled_states":	{
				"description":	"array owned and core states"
			},
			"navy_intel":	{
				"description":	"navy intel against a target country. example GER.navy_intel@ENG"
			},
			"manpower_k":	{
				"description":	"total manpower of country in thousands"
			},
			"num_battalions":	{
				"description":	"number of battalions"
			},
			"max_manpower":	{
				"description":	"DEPRECATED, MAY OVERFLOW. maximum manpower of country"
			},
			"faction_members":	{
				"description":	"array of faction members"
			},
			"fuel_k":	{
				"description":	"total fuel of country in thousands"
			},
			"max_fuel_k":	{
				"description":	"max fuel of country in thousands"
			},
			"num_owned_controlled_states":	{
				"description":	"number of owned and core states"
			},
			"agency_upgrade_number":	{
				"description":	"Checks the number of upgrade done in the intelligence agency. \nagency_upgrade_number > 4",
				"is_trigger":	true
			},
			"max_available_manpower":	{
				"description":	"DEPRECATED, MAY OVERFLOW. total available manpower of country"
			},
			"ai_strategy_dont_defend_ally_borders":	{
				"description":	"ai strategy value dont_defend_ally_borders against country. Example: GER.ai_strategy_dont_defend_ally_borders@ENG"
			},
			"max_available_manpower_k":	{
				"description":	"total available manpower of country in thousands"
			},
			"opinion":	{
				"description":	"opinion of a country targeted on another one. example GER.opinion@ENG"
			},
			"owned_states":	{
				"description":	"array of owned states"
			},
			"max_manpower_k":	{
				"description":	"maximum manpower of country in thousands"
			},
			"num_ships_with_type":	{
				"description":	"number of ships controlled in country, ship type is defined in target. example num_ships_with_type@carrier. can be a sub unit def type or one of carrier,capital,screen, submarine"
			},
			"army_experience":	{
				"description":	"army experience of a country"
			},
			"conscription_ratio":	{
				"description":	"Checks  conscription ratio of the country compared to target conscription ratio.\n",
				"is_trigger":	true
			},
			"navy_experience":	{
				"description":	"navy experience of a country"
			},
			"air_experience":	{
				"description":	"air experience of a country"
			},
			"any_war_score":	{
				"description":	"compares the warscore of all wars in a country to see if any fullfills the comparison condition 0-100 - Example: any_war_score > 40",
				"is_trigger":	true
			},
			"num_armies":	{
				"description":	"number of armies"
			},
			"ai_strategy_ignore_claim":	{
				"description":	"ai strategy value ignore_claim against country. Example: GER.ai_strategy_ignore_claim@ENG"
			},
			"party_popularity":	{
				"description":	"popularity of targeted party [0.00, 1.00]. example party_popularity@democratic. May also target ruling_party. This also supports country variables, so you can party_popularity@my_var_name for variables that store ideologies"
			},
			"num_ships":	{
				"description":	"number of ships"
			},
			"enemies_naval_strength_ratio":	{
				"description":	"Compares the estimated navy strength between the scope country and all its enemies",
				"is_trigger":	true
			},
			"num_deployed_planes":	{
				"description":	"number of deployed planes"
			},
			"command_power_daily":	{
				"description":	"Checks if daily command power increase is more or less that specified value \n command_power_daily > 1.5",
				"is_trigger":	true
			},
			"num_deployed_planes_with_type":	{
				"description":	"number of deployed planes with equipment type. example num_deployed_planes_with_type@fighter"
			},
			"legitimacy":	{
				"description":	"legitimacy of scope country. -1 if not an exile"
			},
			"researched_techs":	{
				"description":	"returns the array of researched technologies"
			},
			"num_armies_in_state":	{
				"description":	"number of armies in state, state is in target. example num_armies_in_state@123"
			},
			"num_armies_with_type":	{
				"description":	"number of armies with dominant type, dominant type is defined in target. example: num_armies_with_type@light_armor"
			},
			"army_intel":	{
				"description":	"army intel against a target country. example GER.army_intel@ENG"
			},
			"num_battalions_with_type":	{
				"description":	"number of battalions with sub unit type, sub unit type is defined in target. example: num_battalions_with_type@light_armor"
			},
			"civilian_intel":	{
				"description":	"civilian intel against a target country. example GER.civilian_intel@ENG"
			},
			"stability":	{
				"description":	"stability of a country"
			},
			"modifier":	{
				"description":	"a modifier stored in country scope"
			},
			"highest_party_ideology":	{
				"description":	"ideology of the most popular party. Can exclude the ruling party by using @exclude_ruling_party. Example: highest_party_ideology OR highest_party_ideology@exclude_ruling_party"
			},
			"highest_party_popularity":	{
				"description":	"popularity size of the most popular party [0.00, 1.00]. Can exclude the ruling party by using @exclude_ruling_party. Example: highest_party_popularity OR highest_party_popularity@exclude_ruling_party"
			},
			"neighbors_owned":	{
				"description":	"array of neighbors to owned states"
			},
			"current_party_ideology_group":	{
				"description":	"returns the token for current party ideology group"
			},
			"alliance_naval_strength_ratio":	{
				"description":	"Compares the estimated naval strength between the scope country, his allies and his enemies.",
				"is_trigger":	true
			},
			"resource":	{
				"description":	"number of surplus resources in country, resource type is defined in target resource@steel"
			},
			"num_controlled_states":	{
				"description":	"number of controlled states"
			},
			"controlled_states":	{
				"description":	"array of controlled states"
			},
			"potential_and_current_enemies":	{
				"description":	"array of potential and actual enemies"
			},
			"capital":	{
				"description":	"capital state of the country"
			},
			"encryption_strength":	{
				"description":	"total encryption strength of a country that is needed"
			},
			"num_owned_states":	{
				"description":	"number of owned states"
			},
			"resource_produced":	{
				"description":	"number of resources produced by country, resource type is defined in target. example resource_produced@steel"
			},
			"core_resistance":	{
				"description":	"returns core resistance of target country"
			},
			"num_core_states":	{
				"description":	"number of core states"
			},
			"core_states":	{
				"description":	"array of core states"
			},
			"enemies":	{
				"description":	"array of enemies at war with"
			},
			"subjects":	{
				"description":	"array of subjects"
			},
			"neighbors":	{
				"description":	"array of neighbors"
			},
			"host":	{
				"description":	"exile host of this country"
			},
			"exiles":	{
				"description":	"exile host of this country"
			},
			"days_mission_timeout":	{
				"description":	"timeout in days for a specific timed mission, mission type token is defined in target. example: days_mission_timeout@GER_mefo_bills_mission"
			},
			"allies":	{
				"description":	"array of allies (faction members). prefer using faction_members instead"
			},
			"faction_leader":	{
				"description":	"faction leader of this country's faction"
			},
			"ai_attitude_protective_weight":	{
				"description":	"weight for an ai attitude attitude_protectiveagainst country. Example: GER.ai_attitude_protective_weight@ENG"
			},
			"resource_exported":	{
				"description":	"number of resources exported by country, resource type is defined in target resource_exported@steel"
			},
			"num_equipment_in_armies":	{
				"description":	"number of equipment in armies of the country, equipment type token is defined in target. example num_equipment_in_armies@infantry_equipment"
			},
			"resource_imported":	{
				"description":	"number of resources imported by country, resource type is defined in target resource_imported@steel"
			},
			"num_target_equipment_in_armies":	{
				"description":	"number of equipment required in armies of the country, equipment type token is defined in target. example num_target_equipment_in_armies@infantry_equipment"
			},
			"num_equipment":	{
				"description":	"number of equipment in country. example num_equipment@infantry_equipment"
			},
			"num_of_operatives":	{
				"description":	"Checks the number of operatives the country controls",
				"is_trigger":	true
			},
			"num_equipment_in_armies_k":	{
				"description":	"number of equipment in armies of the country in thousands, equipment type token is defined in target. example num_equipment_in_armies_k@infantry_equipment"
			},
			"num_target_equipment_in_armies_k":	{
				"description":	"number of equipment required in armies of the country in thousands, equipment type token is defined in target. example num_target_equipment_in_armies_k@infantry_equipment"
			},
			"autonomy_ratio":	{
				"description":	"autonomy of scope country. -1 if not a subject"
			},
			"ai_attitude_wants_antagonize":	{
				"description":	"returns 1 if ai wants antagonize"
			},
			"ai_attitude_wants_weaken":	{
				"description":	"returns 1 if ai wants weaken"
			},
			"ai_attitude_wants_ally":	{
				"description":	"returns 1 if ai wants ally"
			},
			"ai_attitude_wants_protect":	{
				"description":	"returns 1 if ai wants protect"
			},
			"ai_attitude_wants_ignore":	{
				"description":	"returns 1 if ai wants ignore"
			},
			"ai_attitude_is_threatened":	{
				"description":	"returns 1 if ai is threatened"
			},
			"core_compliance":	{
				"description":	"returns core compliance of target country"
			},
			"occupied_countries":	{
				"description":	"array of occupied countries"
			},
			"original_tag":	{
				"description":	"returns the original tag of a country"
			},
			"decryption_speed":	{
				"description":	"total encryption strength of a country that is needed"
			},
			"cryptology_defense_level":	{
				"description":	"cryptology defense level of a country"
			},
			"army_leaders":	{
				"description":	"all army leaders of a country"
			},
			"navy_leaders":	{
				"description":	"all navy leaders of a country"
			},
			"operatives":	{
				"description":	"all operatives of a country"
			},
			"num_of_military_factories":	{
				"description":	"check amount of military factories",
				"is_trigger":	true
			},
			"num_of_civilian_factories":	{
				"description":	"check amount of civilian factories",
				"is_trigger":	true
			},
			"num_of_naval_factories":	{
				"description":	"check amount of naval factories",
				"is_trigger":	true
			},
			"foreign_manpower":	{
				"description":	"check the amount of foreign garrison manpower we have",
				"is_trigger":	true
			},
			"has_manpower":	{
				"description":	"check amount of manpower",
				"is_trigger":	true
			},
			"num_subjects":	{
				"description":	"check the number of subjects of nation",
				"is_trigger":	true
			},
			"has_political_power":	{
				"description":	"check amount of political power",
				"is_trigger":	true
			},
			"num_of_available_military_factories":	{
				"description":	"check amount of available military factories",
				"is_trigger":	true
			},
			"num_of_available_naval_factories":	{
				"description":	"check amount of available naval factories",
				"is_trigger":	true
			},
			"num_of_available_civilian_factories":	{
				"description":	"check amount of available civilian factories",
				"is_trigger":	true
			},
			"surrender_progress":	{
				"description":	"check if a country is close to surrendering",
				"is_trigger":	true
			},
			"political_power_daily":	{
				"description":	"Checks if daily political power increase is more or less that specified value \n political_power_daily > 1.5",
				"is_trigger":	true
			},
			"land_doctrine_level":	{
				"description":	"checks researched land doctrine level",
				"is_trigger":	true
			},
			"casualties":	{
				"description":	"Check the amount of casualties a country has suffered in all of it's wars",
				"is_trigger":	true
			},
			"num_of_factories":	{
				"description":	"check amount of total factories",
				"is_trigger":	true
			},
			"num_of_controlled_states":	{
				"description":	"check amount of controlled stats",
				"is_trigger":	true
			},
			"has_added_tension_amount":	{
				"description":	"Compare if the country has added above or below the specified ammount of tension",
				"is_trigger":	true
			},
			"ai_irrationality":	{
				"description":	"check the ai irrationality value",
				"is_trigger":	true
			},
			"ai_strategy_antagonize":	{
				"description":	"ai strategy value antagonize against country. Example: GER.ai_strategy_antagonize@ENG"
			},
			"num_divisions":	{
				"description":	"Will compare towards the amount of divisions a country has control over, if strength matters use has_army_size.",
				"is_trigger":	true
			},
			"original_research_slots":	{
				"description":	"check number of research slots at start of game",
				"is_trigger":	true
			},
			"ai_wants_divisions":	{
				"description":	"Will compare towards the amount of divisions an ai wants to have.",
				"is_trigger":	true
			},
			"alliance_strength_ratio":	{
				"description":	"Compares the estimated army strength between the scope country, his allies and his enemies.",
				"is_trigger":	true
			},
			"num_faction_members":	{
				"description":	"Compares the number of members in the faction for the current country. \n Example: num_faction_members > 10",
				"is_trigger":	true
			},
			"enemies_strength_ratio":	{
				"description":	"Compares the estimated army strength between the scope country and all its enemies",
				"is_trigger":	true
			},
			"compare_autonomy_progress_ratio":	{
				"description":	"check if autonomy progress ratio is higher than value, example:\ncompare_autonomy_progress_ratio > 0.5",
				"is_trigger":	true
			},
			"num_tech_sharing_groups":	{
				"description":	"checks how many groups a nation is a member of",
				"is_trigger":	true
			},
			"ai_strategy_invade":	{
				"description":	"ai strategy value invade against country. Example: GER.ai_strategy_invade@ENG"
			},
			"num_occupied_states":	{
				"description":	"check the number of states occupied by nation",
				"is_trigger":	true
			},
			"amount_research_slots":	{
				"description":	"check number of research current research slots \n amount_research_slots > 2",
				"is_trigger":	true
			},
			"manpower_per_military_factory":	{
				"description":	"Number of available manpower per factory the country has. Excluding dockyards.\nmanpower_per_military_factory < 1000",
				"is_trigger":	true
			},
			"has_stability":	{
				"description":	"check value of stability 0-1: Example has_stability < 0.6",
				"is_trigger":	true
			},
			"has_war_support":	{
				"description":	"check value of war_support 0-1: Example has_war_support < 0.6",
				"is_trigger":	true
			},
			"num_of_civilian_factories_available_for_projects":	{
				"description":	"check amount of civilian factories available for a new project to use",
				"is_trigger":	true
			},
			"political_power_growth":	{
				"description":	"Check the value of political power daily growth.Exacmple: political_power_growth > 0",
				"is_trigger":	true
			},
			"amount_manpower_in_deployment_queue":	{
				"description":	"Checks for amount manpower currently in deploymentview. amount_manpower_in_training > 10",
				"is_trigger":	true
			},
			"has_legitimacy":	{
				"description":	"Check scope country legitimacy 0-100: Example has_legitimacy < 60",
				"is_trigger":	true
			},
			"casualties_k":	{
				"description":	"Check the amount of casualties in thousands a country has suffered in all of it's wars",
				"is_trigger":	true
			},
			"fuel_ratio":	{
				"description":	"Compares the fuel ratio to a variable.\nExample: fuel_ratio > 0.5",
				"is_trigger":	true
			},
			"days_since_capitulated":	{
				"description":	"Checks the number of days since the country last capitulated, even if it is no longer capitulated.\n\tIf it has not ever capitulated, the value is extremely large.\n\tIt is recommended to combine this with has_capitulated = yes when you specifically want to ignore non-active capitulations.\nExamples:\n\tHOL = { has_capitulated = yes days_since_capitulated > 60 } # The Netherlands has been capitulated for more than two months\n\tFRA = { has_capitulated = yes days_since_capitulated < 21 } # France has capitulated sometime within the past three weeks\n\tGER = { OR = { has_capitulated = no days_since_capitulated > 14 } } # Germany is not both actively and recently capitulated\n",
				"is_trigger":	true
			},
			"mine_threat":	{
				"description":	"A trigger to check how dangerous enemy mines are for a country. Controlled by NAVAL_MINE_DANGER defines. Returns a value between 0 and 1. Example mine_threat > 0.5 ",
				"is_trigger":	true
			},
			"convoy_threat":	{
				"description":	"A trigger to check convoy threat for a country. Controlled by NAVAL_CONVOY_DANGER defines. Returns a value between 0 and 1. Example convoy_threat > 0.5 ",
				"is_trigger":	true
			},
			"decryption_progress":	{
				"description":	"checks decryption ratio against a country. Example: \ndecryption_progress = { \n target = GER\n value > 0.5\n} \n#or decryption_progress@GER as variable\n",
				"is_trigger":	true
			},
			"garrison_manpower_need":	{
				"description":	"check the amount of manpower needed by garrisons",
				"is_trigger":	true
			},
			"num_operative_slots":	{
				"description":	"Checks the number of available operative slots a country has.\nIf this differs from the number of operative, this does not mean the country can recruit an operative, but that it will eventually be able to.",
				"is_trigger":	true
			},
			"num_free_operative_slots":	{
				"description":	"Checks the number of operative a country can recruit right now.\nNote that this is not necessarily greater than zero if num_operative_slots returned a number greater than the number of operative.",
				"is_trigger":	true
			},
			"num_fake_intel_divisions":	{
				"description":	"Will compare towards the amount of fake intel divisions a country has control over. .",
				"is_trigger":	true
			},
			"has_collaboration":	{
				"description":	"checks the collaboration in a target country with our currently scoped country. Example: \nhas_collaboration = { \n target = GER\n value > 0.5\n} \n#or has_collaboration@GER as variable\n",
				"is_trigger":	true
			},
			"target_conscription_amount":	{
				"description":	"Checks the target conscription amount of the country.\n",
				"is_trigger":	true
			},
			"current_conscription_amount":	{
				"description":	"Checks the current conscription amount of the country.\n",
				"is_trigger":	true
			},
			"num_researched_technologies":	{
				"description":	"Number of researched technologies",
				"is_trigger":	true
			},
			"network_national_coverage":	{
				"description":	"checks network national coverage you have over a country. Example: \nnetwork_national_coverage = { \n target = GER\n value > 0.5\n} \n",
				"is_trigger":	true
			},
			"ai_strategy_conquer":	{
				"description":	"ai strategy value conquer against country. Example: GER.ai_strategy_conquer@ENG"
			},
			"ai_strategy_befriend":	{
				"description":	"ai strategy value befriend against country. Example: GER.ai_strategy_befriend@ENG"
			},
			"ai_strategy_consider_weak":	{
				"description":	"ai strategy value consider_weak against country. Example: GER.ai_strategy_consider_weak@ENG"
			},
			"ai_strategy_protect":	{
				"description":	"ai strategy value protect against country. Example: GER.ai_strategy_protect@ENG"
			},
			"ai_strategy_alliance":	{
				"description":	"ai strategy value alliance against country. Example: GER.ai_strategy_alliance@ENG"
			},
			"ai_strategy_contain":	{
				"description":	"ai strategy value contain against country. Example: GER.ai_strategy_contain@ENG"
			},
			"ai_strategy_support":	{
				"description":	"ai strategy value support against country. Example: GER.ai_strategy_support@ENG"
			},
			"ai_strategy_force_defend_ally_borders":	{
				"description":	"ai strategy value force_defend_ally_borders against country. Example: GER.ai_strategy_force_defend_ally_borders@ENG"
			},
			"ai_strategy_influence":	{
				"description":	"ai strategy value influence against country. Example: GER.ai_strategy_influence@ENG"
			},
			"ai_strategy_ignore":	{
				"description":	"ai strategy value ignore against country. Example: GER.ai_strategy_ignore@ENG"
			},
			"ai_strategy_send_volunteers_desire":	{
				"description":	"ai strategy value send_volunteers_desire against country. Example: GER.ai_strategy_send_volunteers_desire@ENG"
			},
			"ai_strategy_occupation_policy":	{
				"description":	"ai strategy value occupation_policy against country. Example: GER.ai_strategy_occupation_policy@ENG"
			},
			"ai_strategy_declare_war":	{
				"description":	"ai strategy value declare_war against country. Example: GER.ai_strategy_declare_war@ENG"
			},
			"ai_strategy_prepare_for_war":	{
				"description":	"ai strategy value prepare_for_war against country. Example: GER.ai_strategy_prepare_for_war@ENG"
			},
			"ai_strategy_decrypt_target":	{
				"description":	"ai strategy value decrypt_target against country. Example: GER.ai_strategy_decrypt_target@ENG"
			},
			"ai_strategy_activate_crypto":	{
				"description":	"ai strategy value activate_crypto against country. Example: GER.ai_strategy_activate_crypto@ENG"
			},
			"ai_attitude_neutral_weight":	{
				"description":	"weight for an ai attitude attitude_neutralagainst country. Example: GER.ai_attitude_neutral_weight@ENG"
			},
			"ai_attitude_hostile_weight":	{
				"description":	"weight for an ai attitude attitude_hostileagainst country. Example: GER.ai_attitude_hostile_weight@ENG"
			},
			"ai_attitude_friendly_weight":	{
				"description":	"weight for an ai attitude attitude_friendlyagainst country. Example: GER.ai_attitude_friendly_weight@ENG"
			},
			"ai_attitude_outraged_weight":	{
				"description":	"weight for an ai attitude attitude_outragedagainst country. Example: GER.ai_attitude_outraged_weight@ENG"
			},
			"ai_attitude_threatened_weight":	{
				"description":	"weight for an ai attitude attitude_threatenedagainst country. Example: GER.ai_attitude_threatened_weight@ENG"
			},
			"ai_attitude_allied_weight":	{
				"description":	"weight for an ai attitude attitude_alliedagainst country. Example: GER.ai_attitude_allied_weight@ENG"
			}
		},
		"state":	{
			"arms_factory_level":	{
				"description":	"military factory level in the state"
			},
			"damaged_building_level":	{
				"description":	"damaged building level of a building with type, uses target as building type. example damaged_building_level@arms_factory"
			},
			"modifier":	{
				"description":	"value of modifier stored in this state, uses target as modifier token, example: 123.modifier@local_manpower"
			},
			"industrial_complex_level":	{
				"description":	"civilian factor level in the state"
			},
			"core_countries":	{
				"description":	"countries that cores the state"
			},
			"infrastructure_level":	{
				"description":	"infrastructure level in the state"
			},
			"days_since_last_strategic_bombing":	{
				"description":	"Checks the days since last strategic bombing.\ndays_since_last_strategic_bombing < 10\n",
				"is_trigger":	true
			},
			"distance_to":	{
				"description":	"distance to another state, uses target as another state. example: 123.distance_to@124"
			},
			"non_damaged_building_level":	{
				"description":	"non damaged building level of a building with type, uses target as building type. example non_damaged_building_level@arms_factory"
			},
			"building_level":	{
				"description":	"building level of a building with type, uses target as building type. example building_level@arms_factory"
			},
			"resource":	{
				"description":	"resources produced in state. example resource@steel"
			},
			"owner":	{
				"description":	"owner of the state"
			},
			"controller":	{
				"description":	"controller of the state"
			},
			"resistance":	{
				"description":	"Compares the current resistance level of a state to a value. Example: resistance > 50 ",
				"is_trigger":	true
			},
			"state_population":	{
				"description":	"check the population in the state",
				"is_trigger":	true
			},
			"state_strategic_value":	{
				"description":	"Checks for state strategic value",
				"is_trigger":	true
			},
			"state_and_terrain_strategic_value":	{
				"description":	"Checks for state strategic value",
				"is_trigger":	true
			},
			"state_population_k":	{
				"description":	"check the population in the state in thousands (use to avoid variable overflows)",
				"is_trigger":	true
			},
			"compliance":	{
				"description":	"Compares the current compliance level of a state to a value. Example: compliance > 50 ",
				"is_trigger":	true
			},
			"compliance_speed":	{
				"description":	"Compares the current compliance speed of a state to a value. Example: compliance_speed > 50 ",
				"is_trigger":	true
			},
			"resistance_speed":	{
				"description":	"Compares the current resistance speed of a state to a value. Example: resistance_speed > 50 ",
				"is_trigger":	true
			},
			"resistance_target":	{
				"description":	"Compares the target resistance level of a state to a value. Example: resistance_target > 50 ",
				"is_trigger":	true
			}
		},
		"unit_leader":	{
			"num_units":	{
				"description":	"number of units controlled by leader"
			},
			"num_units_with_type":	{
				"description":	"number of units with dominant type controlled by leader, dominant type is defined in target. example: num_units_with_type@light_armor"
			},
			"has_orders_group":	{
				"description":	"1 if leader has orders group, zero otherwise"
			},
			"num_units_in_state":	{
				"description":	"number of units controlled by leader in state, state is in target. example num_units_in_state@123"
			},
			"num_rocket":	{
				"description":	"number of units with rocket dominant type"
			},
			"num_equipment":	{
				"description":	"number of equipment in army of a leader, equipment type token is defined in target. example num_equipment@infantry_equipment"
			},
			"num_max_traits":	{
				"description":	"number of maximum assignable traits a leader can have"
			},
			"num_cavalry":	{
				"description":	"number of units with cavalry dominant type"
			},
			"avg_units_acclimation":	{
				"description":	"average unit acclimatization for a specific climate, acclimatization type is defined in target. example avg_units_acclimation@cold_climate"
			},
			"num_artillery":	{
				"description":	"number of units with artillery dominant type"
			},
			"num_target_equipment":	{
				"description":	"number of equipment required in army of a leader, equipment type token is defined in target. example num_target_equipment@infantry_equipment"
			},
			"logistics_level":	{
				"description":	"logistics level of the leader"
			},
			"num_infantry":	{
				"description":	"number of units with infantry dominant type"
			},
			"num_units_defensive_combats_on":	{
				"description":	"number of units that are defensively fighting on a terrain, terrain type is defined as target. example: num_units_defensive_combats_on@plains"
			},
			"num_ships_with_type":	{
				"description":	"number of ships controlled by leader, ship type is defined in target. example num_ships_with_type@carrier"
			},
			"own_capture_chance_factor":	{
				"description":	"The chance this operative has to be captured, taking into account the country it is operating for and the country it is operating against."
			},
			"num_ships":	{
				"description":	"number of ships controlled by leader"
			},
			"num_armored":	{
				"description":	"number of units with armored dominant type"
			},
			"num_battalions":	{
				"description":	"number of battalions"
			},
			"num_special":	{
				"description":	"number of units with special dominant type"
			},
			"num_mechanized":	{
				"description":	"number of units with mechanized dominant type"
			},
			"attack_level":	{
				"description":	"attack level of the leader"
			},
			"num_personality_traits":	{
				"description":	"number of personality traits a leader has"
			},
			"num_motorized":	{
				"description":	"number of units with motorized dominant type"
			},
			"maneuvering_level":	{
				"description":	"maneuvering level of the leader"
			},
			"num_battalions_with_type":	{
				"description":	"number of battalions with sub unit type, sub unit type is defined in target. example: num_battalions_with_type@light_armor"
			},
			"own_harmed_time_factor":	{
				"description":	"The time factor applied to the status \"harmed\". Takes int accountthe country it is operating for and the country it is operating against."
			},
			"num_battle_plans":	{
				"description":	"number of battle plans of unit leader"
			},
			"avg_defensive_combat_status":	{
				"description":	"average progress of defensive combats"
			},
			"num_traits":	{
				"description":	"number of traits a leader has"
			},
			"num_status_traits":	{
				"description":	"number of status traits a leader has"
			},
			"defense_skill_level":	{
				"description":	"Compares defense skill level of a unit leader.\nExample: defense_skill_level > 5",
				"is_trigger":	true
			},
			"num_assigned_traits":	{
				"description":	"number of assigned traits the leader has"
			},
			"leader_modifier":	{
				"description":	"value of a modifier stored in leader modifier, modifier token is defined in target. example leader_modifier@navy_max_range"
			},
			"num_terrain_traits":	{
				"description":	"number of terrain traits a leader has"
			},
			"avg_unit_planning_ratio":	{
				"description":	"average planning ratio of all units"
			},
			"num_basic_traits":	{
				"description":	"number of basic traits a leader has"
			},
			"skill_level":	{
				"description":	"skill level of the leader"
			},
			"army_attack_level":	{
				"description":	"attack level of the leader"
			},
			"attack_skill_level":	{
				"description":	"Compares attack skill level of a unit leader.\nExample: attack_skill_level > 5",
				"is_trigger":	true
			},
			"army_defense_level":	{
				"description":	"defense level of the leader"
			},
			"defense_level":	{
				"description":	"defense level of the leader"
			},
			"planning_level":	{
				"description":	"planning level of the leader"
			},
			"avg_combat_status":	{
				"description":	"average progress of all combats"
			},
			"coordination_level":	{
				"description":	"coordination level of the leader"
			},
			"operation_state":	{
				"description":	"the state location the operative is assigned. 0 if it is not assigned to a state"
			},
			"average_stats":	{
				"description":	"average stats of unit leader"
			},
			"avg_offensive_combat_status":	{
				"description":	"average progress of offensive combats"
			},
			"operation_type":	{
				"description":	"returns the operation token the operative is assigned"
			},
			"sum_unit_terrain_modifier":	{
				"description":	"sum of terrain modifiers of each army's location, terrain type is defined in target. example: sum_unit_terrain_modifier@sickness_chance "
			},
			"unit_modifier":	{
				"description":	"value of a modifier stored in unit modifier, modifier token is defined in target. example unit_modifier@army_attack_factor"
			},
			"num_units_in_combat":	{
				"description":	"number of units current fighting"
			},
			"operation_country":	{
				"description":	"the country location the operative is assigned. 0 if it is not assigned to a country"
			},
			"num_units_defensive_combats":	{
				"description":	"number of units in defensive combats"
			},
			"num_units_on_climate":	{
				"description":	"number of units that are on an acclimatization required location, acclimatization type is defined in target. example num_units_on_climate@hot_climate"
			},
			"num_units_offensive_combats":	{
				"description":	"number of units in offensive combats"
			},
			"planning_skill_level":	{
				"description":	"Compares planning skill level of a unit leader.\nExample: planning_skill_level > 5",
				"is_trigger":	true
			},
			"unit_ratio_ready_for_plan":	{
				"description":	"ratio of units that are ready for plan"
			},
			"num_units_crossing_river":	{
				"description":	"number of units currently passing through a river"
			},
			"num_units_offensive_combats_against":	{
				"description":	"number of units that are offensively fighting against a terrain, terrain type is defined as target. example: num_units_offensive_combats_against@plains"
			},
			"own_forced_into_hiding_time_factor":	{
				"description":	"The time factor applied to the status \"forced into hiding\". Takes into account the country it is operating for and the country it is operating against."
			},
			"skill":	{
				"description":	"compare leader skill levels",
				"is_trigger":	true
			},
			"intel_yield_factor_on_capture":	{
				"description":	"Rate at which intel is extracted from this operative by an enemy country."
			},
			"operative_captor":	{
				"description":	"returns the country tag that captured the operative"
			},
			"logistics_skill_level":	{
				"description":	"Compares logistics skill level of a unit leader.\nExample: logistics_skill_level > 5",
				"is_trigger":	true
			}
		}
	},
	"console_commands":	{
		"commands":	{
			"rendertype":	{
				"description":	"Reports what render backend is used"
			},
			"CrashReporter.SimulateCrash":	{
				"description":	"Simulates a crash (resulting in the game exiting)."
			},
			"CrashReporter.UploadCrash":	{
				"description":	"Upload the latest crash dump."
			},
			"CrashReporter.DeleteCrashData":	{
				"description":	"Delete local crash dumps older than X days."
			},
			"pdxmp_netstats":	{
				"description":	"Reports PDX MP network statistics"
			},
			"pdxmp_status":	{
				"description":	"Reports whether PDX MP is online and connected."
			},
			"pops_account_login":	{
				"available_in_release_build":	false,
				"arguments":	["email", "password"],
				"description":	"Login to a POPS Account"
			},
			"pops_account_logout":	{
				"available_in_release_build":	false,
				"description":	"Login to a POPS Account"
			},
			"pops_account_status":	{
				"available_in_release_build":	false,
				"description":	"Show whether you are currently logged into POPS or not."
			},
			"social_debuginfo":	{
				"available_in_release_build":	false,
				"description":	"Print debug info about the social layer"
			},
			"social_joinroom":	{
				"available_in_release_build":	false,
				"arguments":	["Context Index", "Room Name", "Nick Name"],
				"description":	"Join a chat room using the given social context"
			},
			"social_sendmessage":	{
				"available_in_release_build":	false,
				"arguments":	["Context Index", "Room Name", "Message"],
				"description":	"Send a message to a chat room."
			},
			"social_addfriend":	{
				"available_in_release_build":	false,
				"arguments":	["Context Index", "Account ID"],
				"description":	"Add a friend to friends list"
			},
			"collaboration":	{
				"description":	"Adds collaborations against selected country. Right click to select a country and use \"collaboration 0.3\""
			},
			"add_fake_armies":	{
				"description":	"Creates fake intel armies for the player"
			},
			"tweakergui":	{
				"description":	"Spawns a tweaker GUI"
			},
			"reload":	{
				"arguments":	["file name"],
				"description":	"Reloads assets",
				"argument_completion_support":	true
			},
			"time":	{
				"description":	"What time is it?"
			},
			"reloadfx":	{
				"arguments":	["Arguments: map/mapname/postfx or *.fx filename"],
				"description":	"Reloads the shader"
			},
			"particle_editor":	{
				"description":	"Spawns a particle editor"
			},
			"add_mines":	{
				"arguments":	["<Amount of naval mines>"],
				"aliases":	["mines"],
				"description":	"Add naval mines to selected region(s)"
			},
			"release":	{
				"arguments":	["Tag of a country to be released"],
				"aliases":	["rls"],
				"description":	"Released a given country"
			},
			"map_icon_reload_type":	{
				"available_in_release_build":	false,
				"arguments":	["<NUM> or <help>"],
				"description":	"Specify a map icon type to reload"
			},
			"randomlog":	{
				"available_in_release_build":	false,
				"aliases":	["rlog"],
				"description":	"Toggles the random logs."
			},
			"save":	{
				"aliases":	["savegame"],
				"description":	"save a savegame."
			},
			"acclimatization":	{
				"arguments":	["<climate_name>", "<value 0-100>"],
				"aliases":	["acc"],
				"description":	"Sets the acclimatization on a division(s)."
			},
			"combattest":	{
				"available_in_release_build":	false,
				"description":	"combat simulation process"
			},
			"navalcombatlog":	{
				"available_in_release_build":	false,
				"description":	"logs naval combat"
			},
			"debug":	{
				"description":	"Toggle debug mode on/off."
			},
			"ironman":	{
				"available_in_release_build":	false,
				"description":	"Applies Ironman status to current game."
			},
			"deironman":	{
				"available_in_release_build":	false,
				"description":	"Removes Ironman status from current game."
			},
			"show_xp_gain":	{
				"aliases":	["xp_gain"],
				"description":	"Show XP gain information."
			},
			"whitepeace":	{
				"arguments":	["<country tags>"],
				"aliases":	["wp"],
				"description":	"White peace with the specified countries."
			},
			"debug_orders_tree":	{
				"available_in_release_build":	false,
				"aliases":	["dot"],
				"description":	"Print out debug about orders chain."
			},
			"testtool":	{
				"available_in_release_build":	false,
				"aliases":	["test"],
				"description":	"Testing tool."
			},
			"analyzetheatres":	{
				"aliases":	["anth"],
				"description":	"Analyze theatres for errors."
			},
			"debug_front_sections":	{
				"arguments":	["<Theatre index>", "<Front index>", "<Section index>"],
				"aliases":	["dbg_fs"],
				"description":	"Visual debug of theatres, fronts and sections."
			},
			"rebuildfronts":	{
				"available_in_release_build":	false,
				"arguments":	["<Country tag>"],
				"description":	"Rebuild fronts."
			},
			"debug_unit_controller_weights":	{
				"arguments":	["<weight token>"],
				"aliases":	["dbg_ucw"],
				"description":	"Visual debug of unit controller weights. Enable track_unit_controller_weights first!"
			},
			"track_unit_controller_weights":	{
				"aliases":	["track_ucw"],
				"description":	"Will start tracking unit controller weights for current country, should be used together with debug_unit_controller_weights to view the data."
			},
			"debug_force_capitulate":	{
				"arguments":	["<tag>"],
				"aliases":	["dfc"],
				"description":	"forces capitulation of a country on next daily tick"
			},
			"massconquer":	{
				"available_in_release_build":	false,
				"aliases":	["massc"],
				"description":	"Mass conquer tool."
			},
			"deleteallunits":	{
				"aliases":	["delall"],
				"description":	"Delete all armies and fleets of the specified countries."
			},
			"deleteallunitsbut":	{
				"aliases":	["delallbut"],
				"description":	"Delete all armies and fleets of ALL countries, except specified one."
			},
			"aircombat":	{
				"available_in_release_build":	false,
				"arguments":	["<scenario name>", "<result name>", "<province id>", "<state id with airbase>", "<state id with airbase>", "<equipment type>", "<equipment type>", "[equipment creator country]", "[equipment creator country]"],
				"aliases":	["airc"],
				"description":	"Spawns an air combat in desired location."
			},
			"teleport":	{
				"arguments":	["<province_id>"],
				"aliases":	["tp"],
				"description":	"Teleports selected armies or ships to the specified province"
			},
			"theatersrebuild":	{
				"available_in_release_build":	false,
				"aliases":	["trebuild"],
				"description":	"Rebuilds all theatres in the world. All orders will be cleaned."
			},
			"test_naval_move_danger":	{
				"available_in_release_build":	false,
				"arguments":	["<from region id>", "<to region id>, <avoid as block = 1>"],
				"description":	"Tests if path between two region is blocked"
			},
			"highlight_encirclements":	{
				"description":	"Toggle highlighting of detected encirclements"
			},
			"simplified_transport":	{
				"description":	"Toggle simplified naval transports"
			},
			"fronts":	{
				"description":	"Toggle visibility of the foreign fronts"
			},
			"traderoutes":	{
				"description":	"Toggle visibility of trade routes"
			},
			"debug_norender":	{
				"description":	"Toggle rendering of map"
			},
			"debug_tactics":	{
				"description":	"Toggle visibility of debug tooltip for tactics"
			},
			"show_ships":	{
				"description":	"Toggle always showing of player ships"
			},
			"show_enemy_ships":	{
				"description":	"Toggle always showing of enemy ships"
			},
			"allowdiplo":	{
				"aliases":	["adiplo", "nocb"],
				"description":	"Allows to use all diplomatic actions for no matter the rules."
			},
			"allowtraits":	{
				"description":	"Allows to learn all traits."
			},
			"allowideas":	{
				"description":	"Allows to learn all ideas."
			},
			"allowoperations":	{
				"description":	"Allows to execute all operations."
			},
			"operation_test_phase_selection":	{
				"arguments":	[],
				"description":	"Test an operation phase."
			},
			"operation_debug":	{
				"arguments":	[],
				"description":	"Allows to execute all operations."
			},
			"operation_start":	{
				"arguments":	[],
				"description":	"Allows to execute all operations."
			},
			"debug_nuking":	{
				"description":	"Allows to nuke every province without checking any conditions."
			},
			"instantevents":	{
				"description":	"Ignores event mth s"
			},
			"nukes":	{
				"arguments":	["<count>"],
				"aliases":	["nuke"],
				"description":	"add nukes"
			},
			"reloadsupply":	{
				"aliases":	["relsup"],
				"description":	"Reinitializes the supply systems."
			},
			"rebuildlayers":	{
				"description":	"Reload mapmodes."
			},
			"deltat":	{
				"arguments":	["<speed factor>"],
				"description":	"control animation speeds"
			},
			"building_health":	{
				"arguments":	["<building type>", "<state or prov id>", "<building level>", "<health to add>"],
				"aliases":	["bhealth"],
				"description":	"Changes specified building health"
			},
			"instantconstruction":	{
				"aliases":	["ic"],
				"description":	"Toggles instant construction cheat."
			},
			"instantshiprefit":	{
				"aliases":	["isr"],
				"description":	"Toggles instant ship refitting cheat."
			},
			"instanttraining":	{
				"aliases":	["it"],
				"description":	"Toggles instant army training cheat."
			},
			"war_relations":	{
				"arguments":	["<tag>"],
				"description":	"Prints war relations info"
			},
			"add_temporary_buff":	{
				"arguments":	["<buff_index>"],
				"description":	"adds temporary buff to selected units"
			},
			"list_temporary_buffs":	{
				"arguments":	[],
				"description":	"lists all temporary buffs on selected units"
			},
			"unit_stats":	{
				"arguments":	[],
				"description":	"lists stats of selected units"
			},
			"trigger_ability":	{
				"arguments":	["<ability_name>"],
				"description":	"triggers an ability"
			},
			"profile":	{
				"arguments":	["<on> <off> <print> <clear>"],
				"description":	"profile options"
			},
			"nomapicons":	{
				"description":	"Toggles map icons."
			},
			"nopausetext":	{
				"description":	"Toggles the pausebanner for nicer screenshots."
			},
			"combatsound":	{
				"description":	"How often does the combat view give a random sound? 0-50"
			},
			"morehumans":	{
				"arguments":	["num"],
				"aliases":	["humans"],
				"description":	"Adds more humans"
			},
			"window":	{
				"arguments":	["Arguments: open/close", "window gui name"],
				"aliases":	["wnd"],
				"description":	"Opens or closes the specified window"
			},
			"reloadinterface":	{
				"description":	"Reloads the entire interface"
			},
			"reloadtechnologies":	{
				"description":	"Reloads the technology database"
			},
			"updateequipments":	{
				"description":	"Updates the equipment database"
			},
			"updatesubunits":	{
				"description":	"Updates the subunit database"
			},
			"reloadoob":	{
				"arguments":	["<Target Country Tag>"],
				"description":	"Reloads OOBs"
			},
			"createarmygroup":	{
				"arguments":	[],
				"description":	"Create field marshal group from selected groups"
			},
			"combat_analyzer":	{
				"arguments":	["<TAG1>", "<TAG2>", "<OOB1>", "<OOB2>", "<num runs> OPTIONAL", "<num days> OPTIONAL"],
				"description":	"Runs a combat between the 2 OOBs owned by the two TAGs either until done or for the specified number of days. \nUsing <num runs> the combat will be run multiple times and the averages are printed"
			},
			"update_loc":	{
				"arguments":	["localization tag"],
				"description":	"Updates the localization tag file"
			},
			"event":	{
				"arguments":	["event id", "<Target Country Tag>"],
				"description":	"Executes an event"
			},
			"research":	{
				"arguments":	["<slot id> or \"all\""],
				"description":	"Researches an technology from research slot or all."
			},
			"research_on_icon_click":	{
				"description":	"Research a technology when clicking on technology tree icon"
			},
			"Agency.Instant":	{
				"description":	"Activates Operation.Instant, IntelNetwork.Instant, Agency.InstantSlotUnlock and Agency.Autocomplete"
			},
			"add_autonomy":	{
		},
			"annex":	{
				"arguments":	["<Target Country Tag>"],
				"description":	"Begin annex/annexes the specified tag"
			},
			"no_wargoal":	{
				"description":	"No need to have a wargoal for declaring war"
			},
			"instant_wargoal":	{
				"description":	"Generation of wargoals are instant"
			},
			"testrtti":	{
				"arguments":	["<test case>"],
				"description":	"Tests performance for RTTI"
			},
			"testevent":	{
				"arguments":	["<Event ID>", "<Character ID>"],
				"description":	"Tests an event without triggering it"
			},
			"manpower":	{
				"arguments":	["<Amount>"],
				"description":	"Adds manpower to player"
			},
			"add_opinion":	{
				"arguments":	["<Country tag>"],
				"description":	"Add opinion to/from tag"
			},
			"tag":	{
				"arguments":	["<Country tag>"],
				"description":	"Switch tag to another country"
			},
			"resign":	{
				"description":	"Resign from the game"
			},
			"add_interest":	{
				"arguments":	["<Country tag>"],
				"description":	"Add specified country tag to your interest"
			},
			"remove_interest":	{
				"arguments":	["<Country tag>"],
				"description":	"Removes specified country tag from your interest"
			},
			"add_diplo":	{
				"description":	"Adds diplomatic entroute"
			},
			"build_war_blobs":	{
				"description":	"Prints a list of all your wars"
			},
			"PrintSynchStuff":	{
				"description":	"Prints random count and seed"
			},
			"SetRandomCount":	{
				"description":	"Sets the randomcount to 0 or arg"
			},
			"observe":	{
				"aliases":	["spectator"],
				"description":	"Switches to play no country at all, and no longer shows messages or pauses the game"
			},
			"lock_air_det":	{
				"arguments":	["<CountryTag>", "<Detection> (0.0-1.0) OPTIONAL"],
				"description":	"Locks Air Detection for a country, omit detection value to reset"
			},
			"lock_air_eff":	{
				"arguments":	["<CountryTag>", "<Efficiency> (0.0-1.0) OPTIONAL"],
				"description":	"Locks Air Efficiency for a country, omit efficiency value to reset"
			},
			"ai_trace":	{
				"available_in_release_build":	false,
				"description":	"Toggles the AI Trace window"
			},
			"ai":	{
				"description":	"Toggles the AI on or off"
			},
			"human_ai":	{
				"description":	"Toggles AI for Human countries"
			},
			"ai_invasion":	{
				"description":	"Toggles AI AI naval invasions"
			},
			"ai_accept":	{
				"aliases":	["yesman"],
				"description":	"Toggles AI always accept diplomacy"
			},
			"fow":	{
				"arguments":	["<Province ID> OPTIONAL"],
				"aliases":	["debug_fow"],
				"description":	"Turns off fog of war in a province or in general"
			},
			"collision":	{
				"aliases":	["debug_collision"],
				"description":	"Toggles debug display of normals/bounding boxes/collision"
			},
			"savegame":	{
				"description":	"Creates an savefile."
			},
			"savecheck":	{
				"description":	"Makes a savegame (Test_01), loads the savegame, makes a new savegame (Test_02). Those savegames should look the same."
			},
			"IP":	{
				"description":	"Shows your IP"
			},
			"nudge":	{
				"description":	"Go to the nudge tool"
			},
			"mapmode":	{
				"arguments":	["Mapmode type (int)"],
				"description":	"Change mapmode."
			},
			"fullscreen":	{
				"description":	"Toggles fullscreen"
			},
			"prices":	{
				"description":	"Price Info"
			},
			"add_core":	{
				"arguments":	["<Province ID>"],
				"description":	"Add core"
			},
			"remove_core":	{
				"arguments":	["<Province ID>"],
				"description":	"Remove core"
			},
			"debug_zoom":	{
				"available_in_release_build":	false,
				"description":	"Zooms in the game"
			},
			"debug_types":	{
				"available_in_release_build":	false,
				"description":	"Will print the data type for all dynamic reference objects. Can only be used if using RTTI."
			},
			"debug_show_event_ID":	{
				"description":	"Shows event ID"
			},
			"debug_commands":	{
				"available_in_release_build":	false,
				"description":	"Printing commandcount to message.log"
			},
			"debug_events":	{
				"description":	"Start Counting events"
			},
			"debug_dumpevents":	{
				"description":	"Dump Event data to game log"
			},
			"dump_cached_random_logs":	{
				"description":	"dumps cached random logs"
			},
			"debug_diploactions":	{
				"available_in_release_build":	false,
				"description":	"Start Counting diplomatic actions"
			},
			"debug_dumpdiploactions":	{
				"available_in_release_build":	false,
				"description":	"Dump diplomatic action data to game log"
			},
			"debug_assert":	{
				"available_in_release_build":	false,
				"description":	"Toggles asserts on/off"
			},
			"debug_smooth":	{
				"description":	"Toggle framesmoothing"
			},
			"debug_nomouse":	{
				"available_in_release_build":	false,
				"description":	"Toggles mouse scrollwheel on/off"
			},
			"debug_terrain":	{
				"description":	"Toggles Terrain on/off"
			},
			"debug_cities":	{
				"description":	"Toggles Cities painting mode on/off"
			},
			"debug_water":	{
				"description":	"Toggles Water on/off"
			},
			"debug_fronts":	{
				"available_in_release_build":	false,
				"description":	"Toggles interpolated fronts debug"
			},
			"history_logger":	{
				"description":	"Toggle history logger"
			},
			"instant_prepare":	{
				"description":	"Instantly prepares naval invasions"
			},
			"debug_off_front_snap":	{
				"available_in_release_build":	false,
				"aliases":	["dbg_fsnap"],
				"description":	"Toggles offensive fronts snapping debug"
			},
			"debug_borders":	{
				"description":	"Toggles Borders on/off"
			},
			"debug_trees":	{
				"description":	"Toggles Trees on/off"
			},
			"debug_rivers":	{
				"description":	"Toggles Rivers on/off"
			},
			"debug_postfx":	{
				"description":	"Toggles PostFX on/off"
			},
			"debug_sky":	{
				"description":	"Toggles Sky on/off"
			},
			"debug_bloom":	{
				"description":	"Toggles Bloom on/off"
			},
			"debug_tooltip":	{
				"available_in_release_build":	false,
				"description":	"Toggles Tooltips on/off"
			},
			"flagsoutput":	{
				"arguments":	["<path>"],
				"description":	"Creates texture atlas files from memory."
			},
			"cityreload":	{
				"description":	"Reloads the cities"
			},
			"error":	{
				"description":	"Show errors in log"
			},
			"version":	{
				"description":	"Show current game version"
			},
			"debug_nogui":	{
				"description":	"Toggles GUI on/off"
			},
			"debug_volume":	{
				"available_in_release_build":	false,
				"arguments":	["<Volume Delta>"],
				"description":	"Modifies music volume"
			},
			"debug_lockcamera":	{
				"available_in_release_build":	false,
				"description":	"Toggles Camera locked on/off"
			},
			"debug_lines":	{
				"available_in_release_build":	false,
				"description":	"Toggles Debuglines"
			},
			"debug_entities":	{
				"available_in_release_build":	false,
				"description":	"Toggles Debug entities"
			},
			"debug_info":	{
				"available_in_release_build":	false,
				"description":	"Toggles Debug info"
			},
			"debug_particle":	{
				"available_in_release_build":	false,
				"description":	"Toggles Particles Debug info"
			},
			"debug_textures":	{
				"available_in_release_build":	false,
				"description":	"Writes Texture info to application debug log"
			},
			"reload_textures":	{
				"arguments":	["<optional file name filters...>"],
				"aliases":	["rt", "reload_texture"],
				"description":	"Reloads all textures, with an optional filter to reload only files that include the given text"
			},
			"debug_texture":	{
				"available_in_release_build":	false,
				"description":	"draws textures like bloom"
			},
			"debug_wireframe":	{
				"available_in_release_build":	false,
				"description":	"Toggles forced wireframe on/off"
			},
			"debug_achievements_clear":	{
				"available_in_release_build":	false,
				"description":	"Clear all achievements and user stats"
			},
			"debug_achievements":	{
				"available_in_release_build":	false,
				"description":	"Enables popups for achievements to debug them"
			},
			"moveunit":	{
				"arguments":	["<Unit ID>", "<Province ID>"],
				"description":	"Moves a unit to a province"
			},
			"spawnactor":	{
				"available_in_release_build":	false,
				"arguments":	["<Actorname>", "<Province ID>", "<Animation> OPTIONAL"],
				"description":	"Spawns an actor with an optional animation"
			},
			"spawn":	{
				"available_in_release_build":	false,
				"arguments":	["<SubUnit Type>", "<Province ID>", "<Amount>"],
				"description":	"Spawns a unit in a province"
			},
			"guibounds":	{
				"aliases":	["gui"],
				"description":	"Toggles GUI bounds debug"
			},
			"cameraclamp":	{
				"available_in_release_build":	false,
				"description":	"Toggles the camera clamping"
			},
			"provtooltipdebug":	{
				"aliases":	["tdebug"],
				"description":	"Toggles the debug info in province tooltip"
			},
			"reloadweather":	{
				"arguments":	["<randomseed>"],
				"description":	"Reload and regenerate weather"
			},
			"weather":	{
				"description":	"Toggle weather simulation"
			},
			"debug_air_vs_land":	{
				"available_in_release_build":	false,
				"aliases":	["dbg_cas"],
				"description":	"Toggle debug mode for air vs land combat."
			},
			"mapnames":	{
				"description":	"Toggle map names"
			},
			"gbreload":	{
				"available_in_release_build":	false,
				"description":	"Reloads gradient borders"
			},
			"gbpaint":	{
				"available_in_release_build":	false,
				"arguments":	["layer", "channel"],
				"description":	"Toggles gradient border painting"
			},
			"occupationpaint":	{
				"arguments":	["tag<OPTIONAL>"],
				"aliases":	["op"],
				"description":	"Toggles occupation painting. If specifying a tag, that country will be occupied."
			},
			"setowner":	{
				"arguments":	["country tag", "state id"],
				"description":	"Sets state owner"
			},
			"setcontroller":	{
				"arguments":	["country tag", "province id"],
				"description":	"Sets province controller"
			},
			"profilelog":	{
				"available_in_release_build":	false,
				"description":	"Prints out the profiling informations into time.log"
			},
			"gamestate_timer":	{
				"arguments":	["on / off"],
				"aliases":	["gstimer"],
				"description":	"Enable / Disable recording of how long an hour / day / week etc takes to process."
			},
			"run":	{
				"description":	"Runs the specified file with list of commands"
			},
			"oos":	{
				"available_in_release_build":	false,
				"description":	"Out of Synch"
			},
			"debug_crash":	{
				"available_in_release_build":	false,
				"aliases":	["crash"],
				"description":	"Crash!"
			},
			"debug_unit_entity":	{
				"aliases":	["dbg_ue"],
				"description":	"Print out the entity hierarchy."
			},
			"sleep":	{
				"available_in_release_build":	false,
				"arguments":	["time in sec"],
				"aliases":	["wait"],
				"description":	"Sleep"
			},
			"goto_province":	{
				"arguments":	["province id"],
				"description":	"Centers to province"
			},
			"goto_state":	{
				"arguments":	["state id"],
				"description":	"Centers to state"
			},
			"goto_region":	{
				"arguments":	["region id"],
				"description":	"Centers to region"
			},
			"trigger_docs":	{
				"aliases":	["effect_docs", "scripting_docs", "docs"],
				"description":	"Print docs for triggers, effects and variables"
			},
			"cp":	{
				"arguments":	["CP amount"],
				"description":	"Gives command power to player"
			},
			"effect":	{
				"arguments":	["<tag> scripted_effect_name"],
				"aliases":	["e"],
				"description":	"Runs a scripted effect on selected scope",
				"argument_completion_support":	true
			},
			"eval_effect":	{
				"description":	"Runs the inlined effect on a selected scope"
			},
			"trigger":	{
				"arguments":	["<tag> scripted_trigger_name"],
				"aliases":	["t"],
				"description":	"Runs a scripted trigger on selected scope",
				"argument_completion_support":	true
			},
			"print_operation_tokens":	{
				"description":	"Runs a scripted effect on selected scope"
			},
			"xp":	{
				"arguments":	["XP amount"],
				"description":	"Gives Army, navy and air experience to player"
			},
			"threat":	{
				"arguments":	["threat amount"],
				"description":	"Adds or show thread level of player"
			},
			"add_latest_equipment":	{
				"arguments":	["equipment amount"],
				"aliases":	["ale"],
				"description":	"Gives player amount of latest equipment variants"
			},
			"add_equipment":	{
				"arguments":	["equipment amount", "equipment name"],
				"aliases":	["ae"],
				"description":	"Gives player amount of equipment that has the specified name"
			},
			"pp":	{
				"arguments":	["PP amount"],
				"aliases":	["fuhrer_mana", "political_power"],
				"description":	"Gives political power to player"
			},
			"fuel":	{
				"arguments":	["Fuel amount"],
				"aliases":	["army_juice"],
				"description":	"Adds/removes fuel to the player"
			},
			"fuel_gain":	{
				"arguments":	["Daily Fuel amount"],
				"description":	"Adds/removes daily fuel gain for player"
			},
			"empty_fuel_tanks":	{
				"arguments":	["Fuel amount"],
				"description":	"Clear fuel tanks of all armies"
			},
			"resistance":	{
				"arguments":	["amount"],
				"description":	"increases decreases resistance in a state"
			},
			"compliance":	{
				"arguments":	["amount"],
				"description":	"increases decreases compliance in a state"
			},
			"add_stability":	{
				"arguments":	["unity amount"],
				"aliases":	["st"],
				"description":	"Gives/removes stability from player"
			},
			"add_war_support":	{
				"arguments":	["unity amount"],
				"aliases":	["ws"],
				"description":	"Gives/removes war support from player"
			},
			"3dstats":	{
				"description":	"Toggles 3D Stats"
			},
			"hdr":	{
				"available_in_release_build":	false,
				"description":	"Toggles hdr"
			},
			"hdr_debug":	{
				"available_in_release_build":	false,
				"description":	"Toggles hdr debugging"
			},
			"srgb":	{
				"available_in_release_build":	false,
				"description":	"Toggles sRGB"
			},
			"bloom":	{
				"available_in_release_build":	false,
				"description":	"Toggles bloom"
			},
			"PostEffectVolumes.Default":	{
				"available_in_release_build":	false,
				"arguments":	["posteffect_values name"],
				"description":	"Toggles default posteffect values"
			},
			"night":	{
				"available_in_release_build":	false,
				"description":	"Toggles night"
			},
			"civilwar":	{
				"arguments":	["<ideology>", "[target country tag]"],
				"description":	"Spawns a civil war",
				"argument_completion_support":	true
			},
			"createlean":	{
				"available_in_release_build":	false,
				"description":	"Create LEAN textures"
			},
			"helplog":	{
				"description":	"Print out all console commands to game.log file."
			},
			"help":	{
				"arguments":	["command name"],
				"description":	"Print out all console commands or a specific command description."
			},
			"helphelp":	{
				"description":	"Double Rainbow help."
			},
			"hsv":	{
				"available_in_release_build":	false,
				"description":	"Converts RGB to HSV"
			},
			"tag_color":	{
				"description":	"Test setting a country's color"
			},
			"browser":	{
				"available_in_release_build":	false,
				"arguments":	["url"],
				"description":	"Show browser window"
			},
			"aiview":	{
				"description":	"Enable AI debug info"
			},
			"ai_dump":	{
				"available_in_release_build":	false,
				"aliases":	["aidump"],
				"description":	"Dump AI data to log file"
			},
			"ai_front_dump":	{
				"available_in_release_build":	false,
				"aliases":	["aifrontdump"],
				"description":	"Dump AI front data to log file, needs to have a unit selected"
			},
			"metrics":	{
				"available_in_release_build":	false,
				"aliases":	[],
				"description":	"Toggles collecting metrics"
			},
			"ai_research_log":	{
				"available_in_release_build":	false,
				"description":	"Toggles ai research logging"
			},
			"ai_idea_desire_log":	{
				"description":	"Prints AI desire for ideas to log. For Current country only."
			},
			"set_debug_unit_controller":	{
				"available_in_release_build":	false,
				"aliases":	["dbg_unit_controller"],
				"description":	"Sets debug unit controller tag, other countries will not update units"
			},
			"ai_pp_log":	{
				"description":	"Prints AI use of PP to log"
			},
			"airealism":	{
				"description":	"Enable realistic AI"
			},
			"ai_force_template":	{
				"description":	"Force the AI to only spend army XP on template design"
			},
			"ai_force_equipment":	{
				"description":	"Force the AI to only spend army XP on equipment design"
			},
			"pause_in_hours":	{
				"description":	"Pauses the game after X hours have passed after command is called"
			},
			"pathfind_stats":	{
				"available_in_release_build":	false,
				"description":	"Print PathFind Cache Stats"
			},
			"debug_army_entity":	{
				"aliases":	["dae"],
				"description":	"Shows debug entity for all armies"
			},
			"pathfind_cache":	{
				"available_in_release_build":	false,
				"arguments":	["on / off"],
				"description":	"Enable / Disable the PathFind Cache"
			},
			"gamespeed":	{
				"arguments":	["speed <0-5>"],
				"description":	"Set the current game speed, pausing the game at speed 0."
			},
			"unit_address":	{
				"description":	"Get the address of the first selected unit, for debugging"
			},
			"ai_front_id":	{
				"description":	"Get the address of selected group's front debug id"
			},
			"test_log":	{
				"description":	"Enable / Disable tests"
			},
			"test_save_mode":	{
				"description":	"Sets if save game for failed test should be for current or previous day"
			},
			"set_cosmetic_tag":	{
				"arguments":	["<country tag>", "<cosmetic tag>"],
				"description":	"Sets 'cosmetic tag' for a specified country"
			},
			"drop_cosmetic_tag":	{
				"arguments":	["<country tag>"],
				"description":	"Drops 'cosmetic tag' for a specified country"
			},
			"add_ideas":	{
				"arguments":	[],
				"description":	"Adds ideas (ministers or national spirits) with <ID> to the country. Use 'all' to add them all",
				"argument_completion_support":	true
			},
			"remove_ideas":	{
				"arguments":	[],
				"description":	"Removes ideas (ministers or national spirits) with <ID> to the country. Use 'all' to remove them all",
				"argument_completion_support":	true
			},
			"list_ideas":	{
				"arguments":	[],
				"description":	"Dump all ideas to console (ministers or national spirits)"
			},
			"add_party_popularity":	{
				"arguments":	["<party>", "<amount>"],
				"description":	"Adds party popularity for specified party to the current country"
			},
			"set_ruling_party":	{
				"arguments":	["<ideology>"],
				"description":	"Sets ruling party for the country"
			},
			"set_global_flag":	{
				"arguments":	["<flag name>"],
				"description":	"Sets the specified global flag to a value. Defaults to 1"
			},
			"set_country_flag":	{
				"arguments":	["<flag name>"],
				"description":	"Sets country flag on specified TAG for a duration. Defaults to current country and value 1 with infinite duration."
			},
			"get_country_flag":	{
				"arguments":	["<flag name>"],
				"description":	"Gets country flag on specified TAG. Defaults to current country"
			},
			"set_var":	{
				"arguments":	["<var name>"],
				"description":	"Set a variable"
			},
			"get_var":	{
				"arguments":	["<var name>"],
				"description":	"Gets a variable"
			},
			"set_flag":	{
				"arguments":	["<flag name>"],
				"description":	"Set a flag"
			},
			"get_flag":	{
				"arguments":	["<flag name>"],
				"description":	"Get a flag"
			},
			"list_vars":	{
				"arguments":	["<scope>"],
				"description":	"Lists all variables in a scope or for the selected country/state/unitleader"
			},
			"gain_xp":	{
				"arguments":	["<trait>"],
				"description":	"Gain xp for selected leader or for a leader trait"
			},
			"list_flags":	{
				"arguments":	["<scope>"],
				"description":	"Lists all flags in a scope or for the selected country/state/unitleader"
			},
			"list_modifiers":	{
				"arguments":	["<scope>"],
				"description":	"Lists all modifiers in a scope or for the selected country/state/unitleader"
			},
			"dbg_enable_scripted_gui":	{
				"available_in_release_build":	false,
				"arguments":	["<scope>"],
				"description":	"Enables scripted GUIs"
			},
			"prep_for_war":	{
				"arguments":	["<TAG>"],
				"description":	"Make AI country with specified TAG to prepare fight for another country "
			},
			"dbg_prov":	{
				"available_in_release_build":	false,
				"arguments":	["<int>"],
				"aliases":	[],
				"description":	"Sets type of debugging information on provinces."
			},
			"random_seed":	{
				"description":	"reseeds random with specified seed or reseeds random"
			},
			"timer":	{
				"description":	"Prints out debug timing info"
			},
			"timer_start":	{
				"description":	"Starts debug timing"
			},
			"timer_restart":	{
				"description":	"Restarts (resets and starts) debug timing"
			},
			"timer_reset":	{
				"description":	"Resets debug timing"
			},
			"timer_stop":	{
				"description":	"Stops debug timing"
			},
			"timer_dump":	{
				"description":	"Dumps debug timing info"
			},
			"ct":	{
				"description":	"Puts timer info in clipboard"
			},
			"dump_checksum":	{
				"description":	"Compute and store the checksum in a file"
			},
			"compare_to_last_checksum":	{
				"description":	"Compare current checksum with the most recent dump"
			},
			"dump_synchronized_members":	{
				"description":	"Dump the synchronized game state (the one that has checksum ID 2)"
			},
			"add_legitimacy":	{
				"arguments":	["<TAG>", "<value>"],
				"description":	"Adds legitimacy to specified tag. add_legitimacy TAG amount"
			},
			"dbg_tf_fulfillment":	{
				"description":	"Show the managed fulfillment of a taskforce (exepected number of ships after all ships have been merged in)"
			},
			"damage_units":	{
				"arguments":	["<org>", "<str>", "<num>"],
				"description":	"Damage or heal selected units or units under pointer if there is none selected. Enter 1 argument to apply damage for both types, two for individual both types"
			},
			"add_critical_hit":	{
				"arguments":	["<critical_hit_name>"],
				"description":	"add critical hit to selected ships"
			},
			"clear_critical_hits":	{
				"description":	"clear all critical hits"
			},
			"add_exile_manpower":	{
				"arguments":	["<TAG>", "<value>"],
				"description":	"Adds legitimacy to specified tag. add_legitimacy TAG amount"
			},
			"bypass_invasion_superiority_check":	{
				"aliases":	["bisc"],
				"description":	"Ignore superiority in the strategic areas crossed by a naval invasion order"
			},
			"add_fleet_arrow":	{
				"available_in_release_build":	false,
				"arguments":	["color"],
				"description":	"Add an arrow around a strategic region"
			},
			"toggle_offset_ai_daily_update":	{
				"available_in_release_build":	false,
				"description":	"Whether a country's ai daily update should be spread over a day"
			},
			"get_capital":	{
				"arguments":	["<Country tag>"],
				"description":	"Get the capital of a country"
			},
			"dbg_task_force_role_insignia_assignment":	{
				"aliases":	["tfria"],
				"description":	"print the role that would be deduced for the selected task force"
			},
			"imgui":	{
				"description":	"Controls ImGui UIs. See the sub commands."
			},
			"grow_intel_network":	{
				"description":	"Grow the intel network in the specified tag"
			},
			"print_intel_network":	{
				"description":	"Print intel network related information"
			},
			"print_intel_values":	{
				"description":	"Print the intel a country has over another"
			},
			"clear_intel_pools":	{
				"description":	"Reset the specified intel pool"
			},
			"print_radar_intel":	{
				"description":	"Print the intel value breakdown generated by radar"
			},
			"add_intel":	{
				"description":	"Set the values of a static intel pool against a specific country. E.g. `add_intel GER POL army=10`"
			},
			"force_operative_detection":	{
				"aliases":	["snitch"],
				"description":	"Print intel network related information"
			},
			"prevent_operative_detection":	{
				"description":	"Prevent a country from detecting and harming foreign operatives"
			},
			"emulate_ai_operative_assignment":	{
				"description":	"Log ai operative assignment if it were to run this tick. Takes as first argument the tag of the country to test, default to the player's."
			},
			"select":	{
				"available_in_release_build":	false,
				"arguments":	["<object id>", "<object type id> (optional)"],
				"aliases":	["sel"],
				"description":	"select object by id"
			}
		},
		"tweakables":	{
			"Operation.Instant":	{
				"type":	"bool"
			},
			"IntelNetwork.Instant":	{
				"type":	"bool"
			},
			"Focus.NoChecks":	{
				"type":	"bool"
			},
			"Focus.AutoComplete":	{
				"type":	"bool"
			},
			"fa":	{
				"type":	"bool"
			},
			"Focus.IgnorePrerequisites":	{
				"type":	"bool"
			},
			"Debug.DeleteUnitEachTick":	{
				"available_in_release_build":	false,
				"type":	"bool"
			},
			"Draw.Objects":	{
				"available_in_release_build":	false,
				"type":	"bool"
			},
			"Draw.Transparent":	{
				"available_in_release_build":	false,
				"type":	"bool"
			},
			"Draw.Shadows":	{
				"available_in_release_build":	false,
				"type":	"bool"
			},
			"Draw.ShadowBlur":	{
				"available_in_release_build":	false,
				"type":	"bool"
			},
			"PostEffectVolumes.Draw":	{
				"available_in_release_build":	false,
				"type":	"bool"
			},
			"Decision.NoChecks":	{
				"type":	"bool"
			},
			"BattleSound.PlayBackground":	{
				"available_in_release_build":	false,
				"type":	"bool"
			},
			"BattleSound.Debug":	{
				"available_in_release_build":	false,
				"type":	"bool"
			},
			"resistance_system":	{
				"type":	"bool"
			},
			"Agency.AutoComplete":	{
				"type":	"bool"
			},
			"Agency.KeepExcessOperatives":	{
				"type":	"bool"
			},
			"Agency.InstantSlotUnlock":	{
				"type":	"bool"
			},
			"Draw.Postfx":	{
				"available_in_release_build":	false,
				"type":	"bool"
			},
			"Draw.Tree":	{
				"available_in_release_build":	false,
				"type":	"bool"
			},
			"Draw.Terrain":	{
				"available_in_release_build":	false,
				"type":	"bool"
			},
			"Draw.Rivers":	{
				"available_in_release_build":	false,
				"type":	"bool"
			},
			"Draw.Water":	{
				"available_in_release_build":	false,
				"type":	"bool"
			},
			"Draw.Borders":	{
				"available_in_release_build":	false,
				"type":	"bool"
			},
			"Draw.Refractions":	{
				"available_in_release_build":	false,
				"type":	"bool"
			},
			"Tree.MipLevels":	{
				"available_in_release_build":	false,
				"type":	"bool"
			},
			"Terrain.MipLevels":	{
				"available_in_release_build":	false,
				"type":	"bool"
			},
			"BorderLOD.Threaded":	{
				"available_in_release_build":	false,
				"type":	"bool"
			},
			"PostEffectVolumes.Enabled":	{
				"available_in_release_build":	false,
				"type":	"bool"
			},
			"ShowTechBonus":	{
				"type":	"bool"
			},
			"CounterIntelligence.TestShieldColors":	{
				"type":	"bool"
			},
			"guibounds":	{
				"type":	"bool"
			},
			"Update.Particles":	{
				"available_in_release_build":	false,
				"type":	"bool"
			},
			"Update.Animations":	{
				"available_in_release_build":	false,
				"type":	"bool"
			},
			"Normals":	{
				"available_in_release_build":	false,
				"type":	"bool"
			},
			"BoundingVolumes":	{
				"available_in_release_build":	false,
				"type":	"bool"
			},
			"Collisions":	{
				"available_in_release_build":	false,
				"type":	"bool"
			},
			"Mesh.Names":	{
				"type":	"bool"
			},
			"Mesh.TextureNames":	{
				"type":	"bool"
			},
			"GUI.Wireframe":	{
				"available_in_release_build":	false,
				"type":	"bool"
			},
			"Mesh.Wireframe":	{
				"available_in_release_build":	false,
				"type":	"bool"
			},
			"Mesh.MipLevels":	{
				"available_in_release_build":	false,
				"type":	"bool"
			},
			"Particle.Wireframe":	{
				"available_in_release_build":	false,
				"type":	"bool"
			},
			"Particle.UseRingbuffer":	{
				"available_in_release_build":	false,
				"type":	"bool"
			},
			"Particle.MipLevels":	{
				"available_in_release_build":	false,
				"type":	"bool"
			},
			"ApplicationUtils.Update":	{
				"available_in_release_build":	false,
				"type":	"bool"
			},
			"Audio.DebugMin":	{
				"available_in_release_build":	false,
				"type":	"bool"
			},
			"Audio.DebugMax":	{
				"available_in_release_build":	false,
				"type":	"bool"
			},
			"Audio.Debug.LevelsSampleRate":	{
				"available_in_release_build":	false,
				"type":	"integer"
			},
			"Audio.Debug.Levels":	{
				"available_in_release_build":	false,
				"type":	"bool"
			},
			"Audio.Debug":	{
				"available_in_release_build":	false,
				"type":	"bool"
			},
			"Audio.Debug.ExtendedRange":	{
				"available_in_release_build":	false,
				"type":	"bool"
			},
			"Audio.Compressor":	{
				"available_in_release_build":	false,
				"type":	"bool"
			}
		}
	}
}
