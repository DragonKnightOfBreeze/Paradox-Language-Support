types = {
	type[autonomy] = {
		path = "game/common/autonomous_states"
		name_field = "id"
	}
}

## replace_scope = { this = country root = country }
autonomy = {
	id = localisation

	## cardinality = 0..1
	default = bool

	## cardinality = 0..1
	is_puppet = bool

	## cardinality = 0..1
	use_overlord_color = bool

	min_freedom_level = float[0..0.99]

	## cardinality = 0..1
	peace_conference_initial_freedom = float[0..1]

	manpower_influence = float[0..1]

	rule = {
		## cardinality = 0..20
		enum[game_rules] = bool
	}

	modifier = {
		## cardinality = ~1..inf
		alias_name[modifier] = alias_match_left[modifier]
	}

	ai_subject_wants_higher = {
		factor = float
	}

	ai_overlord_wants_lower = {
		factor = float
	}

	## cardinality = 0..1
	ai_overlord_wants_garrison = {
		alias_name[trigger] = alias_match_left[trigger]
	}

	allowed = {
		alias_name[trigger] = alias_match_left[trigger]
	}

	## cardinality = 0..1
	allowed_levels_filter = {
		<autonomy>
	}

	## replace_scope = { ROOT = country FROM = country}
	## cardinality = 0..1
	use_for_peace_conference_weight = {
		## cardinality = 0..1
		enum[base_factor] = float
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}

	## cardinality = 0..1
	can_take_level = {
		alias_name[trigger] = alias_match_left[trigger]
	}

	## cardinality = 0..1
	can_lose_level = {
		alias_name[trigger] = alias_match_left[trigger]
	}
}
