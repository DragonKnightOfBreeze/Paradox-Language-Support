#Loc done

types = {
	type[event_modifier] = {
		path = "game/common/event_modifiers"
		
		subtype[not_flag] = {
			## cardinality = 1..inf
			scalar = scalar
		}
		
		localisation = {
			subtype[not_flag] = {
				name = "$"
				description = "desc_$"
			}
		}
	}
	type[static_modifier] = { #todo: As far as I can tell, you cannot add to them.
		path = "game/common/static_modifiers"
		
		localisation = {
			## optional
			name = "$"
		}
	}
	type[triggered_modifier] = {
		path = "game/common/triggered_modifiers"
		
		localisation = {
			name = "$"
			description = "desc_$"
		}
	}
	type[province_triggered_modifier] = {
		path = "game/common/province_triggered_modifiers"
		
		localisation = {
			name = "$"
			description = "desc_$"
		}
	}
	#todo: Don't think you can add to them. Included for completeness
	type[timed_modifier] = {
		path = "game/common/timed_modifiers"

		localisation = {
			name = "$"
		}
	}
}

event_modifier = {
	alias_name[modifier] = alias_match_left[modifier]
	## cardinality = 0..1
	is_mercenary_modifier = yes

	## cardinality = 0..1
	religion = yes

	## cardinality = 0..1
	picture = scalar #todo: sprite?
}

static_modifier = {
	alias_name[modifier] = alias_match_left[modifier]

	## cardinality = 0..1
	picture = scalar #todo

	## cardinality = 0..1
	###Will make icon placed next to religion modifier
	religion_sub_modifier = yes 
	## cardinality = 0..1
	religion = yes
	## cardinality = 0..1
	###Tells the AI and will only show the alert if country has none
	is_scholar_modifier = yes
	## cardinality = 0..1
	expire_message_type = localisation
}


###Triggered modifiers are checked for each country once/month and then applied. Effects are fully scriptable here.
triggered_modifier = {
	##replace_scope = { this = country root = country }
	potential = {
		alias_name[trigger] = alias_match_left[trigger]
	}
	##replace_scope = { this = country root = country }
	trigger = {
		alias_name[trigger] = alias_match_left[trigger]
	}
	##replace_scope = { this = country root = country }
	alias_name[modifier] = alias_match_left[modifier]
	## cardinality = 0..1
	ai_weight = {
		factor = int
	}
}


province_triggered_modifier = {
	##replace_scope = { this = province root = province }
	potential = {
		alias_name[trigger] = alias_match_left[trigger]
	}
	##replace_scope = { this = province root = province }
	trigger = {
		alias_name[trigger] = alias_match_left[trigger]
	}
	##replace_scope = { this = province root = province }
	alias_name[modifier] = alias_match_left[modifier]
	
	## cardinality = 0..1
	##replace_scope = { this = province root = province }
	on_activation = {
		alias_name[effect] = alias_match_left[effect]
	}
	## cardinality = 0..1
	##replace_scope = { this = province root = province }
	on_deactivation = {
		alias_name[effect] = alias_match_left[effect]
	}
}

timed_modifier = {
	enum[timed_modifier_liberty] = {
		value = int
		yearly_decay = int
	}
}

enums = {
	enum[timed_modifier_liberty] = {
		liberty_desire
		reduced_liberty_desire
	}
}

###Will affect Janissary regiments if CoC DLC is available, otherwise used as a country modifier.
alias[modifier:is_janissary_modifier] = yes

###Will affect Rajput regiments if Dharma DLC is available, otherwise used as a country modifier.
alias[modifier:is_rajput_modifier] = yes
