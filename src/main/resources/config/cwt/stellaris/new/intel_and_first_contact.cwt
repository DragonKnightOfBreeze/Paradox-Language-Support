
types = {
	type[first_contact_stage] = {
		path = "game/common/first_contact"
	}
	type[intel_category] = {
		path = "game/common/intel_categories"
	}
	type[intel_level] = {
		path = "game/common/intel_levels"
	}
}

enums = {
	complex_enum[intel_tokens] = {
		path = "game/common/intel_categories"
		name = {
			intel_level = {
				enum_name
			}
		}
	}
}

intel_category = {
	## cardinality = 0..inf
	intel_level = {
		## cardinality = 0..inf
		scalar
	}
}

intel_level = {
    frame = int
    intel = {
		## cardinality = 0..inf
		int[0..100]
	}
	## cardinality = 1..inf
    <intel_category> = int
}

## push_scope = first_contact
first_contact_stage = {
	## cardinality = 0..1
	picture = <sprite>
	## cardinality = 0..1
	icon = <sprite>
	difficulty = int[-inf..inf]
	difficulty = {
		min = int[-inf..inf]
		max = int[-inf..inf]
	}
	
	## cardinality = 1..inf
	stage_event = {
		## cardinality = 0..1
		icon = <sprite>
		## cardinality = 0..1
		summary = localisation
		## cardinality = 1..1 # this has to be there or it won't work
		event_weight = {
			alias_name[modifier_rule] = alias_match_left[modifier_rule]
		}
		event = <event.first_contact>
	}

	on_roll_failed = {
		alias_name[effect] = alias_match_left[effect]
	}
}
