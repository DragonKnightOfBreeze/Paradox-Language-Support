
types = {
	type[army] = {
		path = "game/common/armies"
		subtype[buildable] = {
			potential = {
				## cardinality = 0..0
				always = no
			}
		}
		subtype[pop_spawned] = {
			is_pop_spawned = yes
		}
		subtype[has_species] = {
			## cardinality = 0..0
			has_species = no
		}
		localisation = {
			## required
			Name = "$"
			## required
			Desc = "$_desc"
		}
		pictures = {
			## primary
			icon = "#icon" # <sprite>
		}
	}
}

#TODO subtypes, and make stricter this was an initial pass
#This is a draft guess (assuming that only the resources bit has changed)
## replace_scope = { this = planet root = planet from = species }
army = {
	## cardinality = 0..1
	## replace_scope = { this = country root = country }
	resources = {
		category = <economic_category>
		alias_name[economic_template] = alias_match_left[economic_template]
	}

	## cardinality = 0..1
	###Specify another army type to use names from, instead of having to copy them for each name list.
	use_armynames_from = <army>
	## cardinality = 0..1
	defensive = bool
	## cardinality = 0..1
	is_building_spawned = bool
	## cardinality = 0..1
	is_pop_spawned = bool
	## cardinality = 0..1
	damage = float
	## cardinality = 0..1
	health = float
	## cardinality = 0..1
	has_morale = bool
	## cardinality = 0..1
	morale = float
	## cardinality = 0..1
	morale_damage = float
	## cardinality = 0..1
	collateral_damage = float
	## cardinality = 0..1
	war_exhaustion = float
	## cardinality = 0..1
	icon = <sprite>
	## cardinality = 0..1
	has_species = bool
	## cardinality = 0..1
	time = int
	## cardinality = 0..1
	pop_limited = bool
	## cardinality = 0..1
	disband_if_species_lacks_rights = bool
	## cardinality = 0..1
	rebel = bool
	## cardinality = 0..1
	occupation = bool
	## cardinality = 0..1
	prerequisites = {
		<technology>
	}
	## cardinality = 0..1
	## replace_scope = { this = country root = country }
	show_tech_unlock_if = {
		alias_name[trigger] = alias_match_left[trigger]
	}
	## cardinality = 0..1
	potential = {
		alias_name[trigger] = alias_match_left[trigger]
	}
	## cardinality = 0..1
	## replace_scope = { this = country root = country }
	potential_country = {
		alias_name[trigger] = alias_match_left[trigger]
	}
	## cardinality = 0..1
	allow = {
		alias_name[trigger] = alias_match_left[trigger]
	}
	## cardinality = 0..1
	on_queued = {
		alias_name[effect] = alias_match_left[effect]
	}
	## cardinality = 0..1
	on_unqueued = {
		alias_name[effect] = alias_match_left[effect]
	}
	subtype[pop_spawned] = {
		## cardinality = 0..1
		## replace_scope = { this = pop root = pop }
		###spawn_chance: only works on defensive armies; pop scope check that lets you give weights for what sort of army should be spawned. Calculation is health * spawn_chance (default: 1), and it always picks the best one
		spawn_chance = {
			factor = float
			alias_name[modifier_rule] = alias_match_left[modifier_rule]
		}
	}

	## cardinality = 0..1
	## replace_scope = { this = country root = country }
	ai_weight = {
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}
}
