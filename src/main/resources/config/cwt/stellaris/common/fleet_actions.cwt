
### Adds actions to the scoped fleet's action queue
alias[effect:queue_actions] = {
	alias_name[fleet_action] = alias_match_left[fleet_action]
}

alias[fleet_action:repeat] = {
    
	## cardinality = 0..1
    max_iterations = int
    
	## cardinality = 0..1
    while = {
		###TODO: ID seems to have to be in quotes (Vanilla also does that). Also, I think they are meant to be unique ideas, but I'm not sure about that. -Caligula
		id = scalar
        alias_name[trigger] = alias_match_left[trigger]
    }   

    alias_name[fleet_action] = alias_match_left[fleet_action]    
}

###This requires the fleet to be a planet destroyer
alias[fleet_action:destroy_planet] = {
	target = scope[planet]
	## cardinality = 0..1
	skip_rules = bool
	## cardinality = 0..1
	skip_fire_phase = bool
	## cardinality = 0..1
	skip_windup_phase = bool
}

alias[fleet_action:find_random_system] = {
	## cardinality = 0..1
	## push_scope = system
    trigger = {
		###TODO: ID seems to have to be in quotes (Vanilla also does that). Also, I think they are meant to be unique ideas, but I'm not sure about that. -Caligula
		id = scalar
        alias_name[trigger] = alias_match_left[trigger]
    }
    ## push_scope = system
    found_system = {
        alias_name[fleet_action] = alias_match_left[fleet_action] 
    }
   
	## cardinality = 0..1
    failed = {
        alias_name[fleet_action] = alias_match_left[fleet_action] 
    }
}

alias[fleet_action:find_random_planet] = {
	## cardinality = 0..1
	## push_scope = planet
    trigger = {
		###TODO: ID seems to have to be in quotes (Vanilla also does that). Also, I think they are meant to be unique ideas, but I'm not sure about that. -Caligula
		id = scalar
        alias_name[trigger] = alias_match_left[trigger]
    }
    ## push_scope = planet
    found_planet = {
        alias_name[fleet_action] = alias_match_left[fleet_action] 
    }
	
	## cardinality = 0..1
    failed = {
        alias_name[fleet_action] = alias_match_left[fleet_action] 
    }
}

alias[fleet_action:find_random_fleet] = {
	## cardinality = 0..1
	## push_scope = fleet
    trigger = {
		###TODO: ID seems to have to be in quotes (Vanilla also does that). Also, I think they are meant to be unique ideas, but I'm not sure about that. -Caligula
		id = scalar
        alias_name[trigger] = alias_match_left[trigger]
    }
    ## push_scope = fleet
    found_fleet = {
        alias_name[fleet_action] = alias_match_left[fleet_action] 
    }
	
	## cardinality = 0..1
    failed = {
        alias_name[fleet_action] = alias_match_left[fleet_action] 
    }

    ## cardinality = 0..1
    system_only = bool
}

alias[fleet_action:find_closest_system] = {
	## cardinality = 0..1
	## push_scope = system
    trigger = {
		###TODO: ID seems to have to be in quotes (Vanilla also does that). Also, I think they are meant to be unique ideas, but I'm not sure about that. -Caligula
		id = scalar
        alias_name[trigger] = alias_match_left[trigger]
    }
    ## push_scope = system
    found_system = {
        alias_name[fleet_action] = alias_match_left[fleet_action] 
    }
    
	## cardinality = 0..1
    failed = {
        alias_name[fleet_action] = alias_match_left[fleet_action] 
    }
}

alias[fleet_action:find_closest_planet] = {
	## cardinality = 0..1
	## push_scope = planet
    trigger = {
		###TODO: ID seems to have to be in quotes (Vanilla also does that). Also, I think they are meant to be unique ideas, but I'm not sure about that. -Caligula
		id = scalar
        alias_name[trigger] = alias_match_left[trigger]
    }
    ## push_scope = planet
    found_planet = {
        alias_name[fleet_action] = alias_match_left[fleet_action] 
    }
    
	## cardinality = 0..1
    failed = {
        alias_name[fleet_action] = alias_match_left[fleet_action] 
    }    
}

alias[fleet_action:find_closest_fleet] = {
	## cardinality = 0..1
	## push_scope = fleet
    trigger = {
		###TODO: ID seems to have to be in quotes (Vanilla also does that). Also, I think they are meant to be unique ideas, but I'm not sure about that. -Caligula
		id = scalar
        alias_name[trigger] = alias_match_left[trigger]
    }
    ## push_scope = fleet
    found_fleet = {
        alias_name[fleet_action] = alias_match_left[fleet_action] 
    }
    
	## cardinality = 0..1
    failed = {
        alias_name[fleet_action] = alias_match_left[fleet_action] 
    }
    
    ## cardinality = 0..1
    system_only = bool   
}

alias[fleet_action:effect] = {
	###TODO: ID seems to have to be in quotes (Vanilla also does that). Also, I think they are meant to be unique ideas, but I'm not sure about that. -Caligula
    id = scalar
    alias_name[effect] = alias_match_left[effect]
}


alias[fleet_action:wait] = int
alias[fleet_action:wait] = {
    duration = int
	## cardinality = 0..1
	random = int
}

alias[fleet_action:merge_fleet] = {
    target = scope[fleet]
	## cardinality = 0..1
	allow_ftl = bool
}

alias[fleet_action:attack_fleet] = {
    target = scope[fleet]
	## cardinality = 0..1
	allow_ftl = bool
}


alias[fleet_action:move_to] = scope_group[celestial_coordinate]

alias[fleet_action:orbit_planet] = scope[planet]
alias[fleet_action:orbit_planet] = random

alias[fleet_action:change_stance] = {
    stance = enum[fleet_stance]
    ## cardinality = 0..1
    ###days to wait
	days = int
}
