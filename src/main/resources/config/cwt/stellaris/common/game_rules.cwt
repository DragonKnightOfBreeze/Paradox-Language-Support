types = {
	type[game_rule] = {
		path = "game/common/game_rules"

		## type_key_filter = is_valid_rival
		## replace_scope = { this = country root = country }
		subtype[is_valid_rival] = {
		}
		## type_key_filter = can_add_claim
		## replace_scope = { this = system root = country }
		subtype[can_add_claim] = {
		}
		## type_key_filter = can_get_claim_from_lost_system
		## replace_scope = { this = country root = country }
		subtype[can_get_claim_from_lost_system] = {
		}
		## type_key_filter = species_has_citizenship
		## replace_scope = { this = species root = country }
		subtype[species_has_citizenship] = {
		}
		## type_key_filter = should_abduct_pop
		## replace_scope = { this = pop root = country }
		subtype[should_abduct_pop] = {
		}
		## type_key_filter = species_can_live_on_planet
		## replace_scope = { this = species root = planet }
		subtype[species_can_live_on_planet] = {
		}
		## type_key_filter = can_vote_in_democratic_election
		## replace_scope = { this = pop root = country }
		subtype[can_vote_in_democratic_election] = {
		}
		## type_key_filter = can_generate_leader_from_pop
		## replace_scope = { this = pop root = country }
		subtype[can_generate_leader_from_pop] = {
		}
		## type_key_filter = can_generate_leader_from_species
		## replace_scope = { this = species root = country }
		subtype[can_generate_leader_from_species] = {
		}
		## type_key_filter = can_create_espionage_asset_from_species
		## replace_scope = { this = species root = country }
		subtype[can_create_espionage_asset_from_species] = {
		}
		## type_key_filter = can_generate_military_leader_from_pop
		## replace_scope = { this = pop root = country }
		subtype[can_generate_military_leader_from_pop] = {
		}
		## type_key_filter = can_generate_army_from_planet
		## replace_scope = { this = country root = species }
		subtype[can_generate_army_from_planet] = {
		}
		## type_key_filter = can_release_vassal
		## replace_scope = { this = country root = planet }
		subtype[can_release_vassal] = {
		}
		## type_key_filter = can_release_vassal_from_species
		## replace_scope = { this = country root = species }
		subtype[can_release_vassal_from_species] = {
		}
		## type_key_filter = can_generate_army_from_species
		## replace_scope = { this = country root = species }
		subtype[can_generate_army_from_species] = {
		}
		## type_key_filter = can_modify_species
		## replace_scope = { this = country root = species }
		subtype[can_modify_species] = {
		}
		## type_key_filter = subject_can_expand
		## replace_scope = { this = country root = country }
		subtype[subject_can_expand] = {
		}
		## type_key_filter = can_take_hostile_actions
		## replace_scope = { this = country root = country }
		subtype[can_take_hostile_actions] = {
		}
		## type_key_filter = can_declare_war
		## replace_scope = { this = country root = country }
		subtype[can_declare_war] = {
		}
		## type_key_filter = can_colonize_planet
		## replace_scope = { this = planet root = country }
		subtype[can_colonize_planet] = {
		}
		## type_key_filter = can_colonize_outside_borders
		## replace_scope = { this = planet root = country }
		subtype[can_colonize_outside_borders] = {
		}
		## type_key_filter = can_terraform_planet
		## replace_scope = { this = planet root = country }
		subtype[can_terraform_planet] = {
		}
		## type_key_filter = can_colonize_with_pop
		## replace_scope = { this = pop root = country }
		subtype[can_colonize_with_pop] = {
		}
		## type_key_filter = can_colonize_with_species
		## replace_scope = { this = species root = country }
		subtype[can_colonize_with_species] = {
		}
		## type_key_filter = pop_has_random_ethics
		## replace_scope = { this = pop root = pop from = country }
		subtype[pop_has_random_ethics] = {
		}
		## type_key_filter = species_has_happiness
		## replace_scope = { this = species root = species from = country }
		subtype[species_has_happiness] = {
		}
		## type_key_filter = can_be_hostile_towards
		## replace_scope = { this = country root = country }
		subtype[can_be_hostile_towards] = {
		}
		## type_key_filter = can_species_procreate
		## replace_scope = { this = species root = planet }
		subtype[can_species_procreate] = {
		}
		## type_key_filter = can_species_be_assembled
		## replace_scope = { this = species root = planet }
		subtype[can_species_be_assembled] = {
		}
		## type_key_filter = can_orbital_bombard
		## replace_scope = { this = planet root = fleet from = planet }
		subtype[can_orbital_bombard] = {
		}
		## type_key_filter = can_planet_support_orbital_station
		## replace_scope = { this = planet root = country }
		subtype[can_planet_support_orbital_station] = {
		}
		## type_key_filter = has_full_sensor_range
		## replace_scope = { this = country root = country }
		subtype[has_full_sensor_range] = {
		}
		## type_key_filter = show_notification_for_ground_combat
		## replace_scope = { this = planet root = country from = country }
		subtype[show_notification_for_ground_combat] = {
		}
		## type_key_filter = should_apply_neighbor_rival_modifier
		## replace_scope = { this = country root = country }
		subtype[should_apply_neighbor_rival_modifier] = {
		}
		## type_key_filter = are_rebels_hostile
		## replace_scope = { this = country root = country }
		subtype[are_rebels_hostile] = {
		}
		## type_key_filter = should_colony_be_destroyed_on_pc_change
		## replace_scope = { this = planet root = planet }
		subtype[should_colony_be_destroyed_on_pc_change] = {
		}
		## type_key_filter = is_extradimensional_portal
		## replace_scope = { this = fleet root = country }
		subtype[is_extradimensional_portal] = {
		}
		## type_key_filter = is_extradimensional_anchor
		## replace_scope = { this = fleet root = country }
		subtype[is_extradimensional_anchor] = {
		}
		## type_key_filter = will_anger_fallen_empire
		## replace_scope = { this = country root = country }
		subtype[will_anger_fallen_empire] = {
		}
		## type_key_filter = can_have_robot_pops
		## replace_scope = { this = country root = country }
		subtype[can_have_robot_pops] = {
		}
		## type_key_filter = can_stop_purge_pop_manually
		## replace_scope = { this = pop root = pop }
		subtype[can_stop_purge_pop_manually] = {
		}
		## type_key_filter = can_purge_pop_manually
		## replace_scope = { this = pop root = pop }
		subtype[can_purge_pop_manually] = {
		}
		## type_key_filter = fleet_uses_templates
		## replace_scope = { this = fleet }
		subtype[fleet_uses_templates] = {
		}
		## type_key_filter = can_orbital_repair_ships
		# ## replace_scope = { this = starbase root = starbase } #can be a megastructure or planet too
		subtype[can_orbital_repair_ships] = {
		}
		## type_key_filter = can_spawn_debris
		## replace_scope = { this = ship root = country }
		subtype[can_spawn_debris] = {
		}
		## type_key_filter = ai_should_restrict_system
		## replace_scope = { this = system root = country }
		subtype[ai_should_restrict_system] = {
		}
		## type_key_filter = can_subjugate_empires
		## replace_scope = { this = country root = country }
		subtype[can_subjugate_empires] = {
		}
		## type_key_filter = can_jump_drive
		## replace_scope = { this = fleet root = fleet }
		subtype[can_jump_drive] = {
		}
		## type_key_filter = can_spawn_occupation_armies
		## replace_scope = { this = country root = country }
		subtype[can_spawn_occupation_armies] = {
		}
		## type_key_filter = system_blocks_sensors
		## replace_scope = { this = system root = country }
		subtype[system_blocks_sensors] = {
		}
		## type_key_filter = can_enter_system_by_jump
		## replace_scope = { this = system root = country }
		subtype[can_enter_system_by_jump] = {
		}
		## type_key_filter = can_resettle_pop
		## replace_scope = { this = pop root = pop }
		subtype[can_resettle_pop] = {
		}
		## type_key_filter = can_country_resettle
		## replace_scope = { this = country root = country }
		subtype[can_country_resettle] = {
		}
		## type_key_filter = can_resettle_planet
		## replace_scope = { this = planet root = planet }
		subtype[can_resettle_planet] = {
		}
		## type_key_filter = can_resettle_planet_no_owner_check
		## replace_scope = { this = planet root = planet }
		subtype[can_resettle_planet_no_owner_check] = {
		}
		## type_key_filter = should_spawn_deposits
		## replace_scope = { this = planet }
		subtype[should_spawn_deposits] = {
		}
		## type_key_filter = is_new_colony
		## replace_scope = { this = planet }
		subtype[is_new_colony] = {
		}
		## type_key_filter = pop_generates_crime
		## replace_scope = { this = pop }
		subtype[pop_generates_crime] = {
		}
		## type_key_filter = can_pops_grow_on_planet
		## replace_scope = { this = planet }
		subtype[can_pops_grow_on_planet] = {
		}
		## type_key_filter = can_pops_assemble_on_planet
		## replace_scope = { this = planet }
		subtype[can_pops_assemble_on_planet] = {
		}
		## type_key_filter = can_pops_decline_on_planet
		## replace_scope = { this = planet }
		subtype[can_pops_decline_on_planet] = {
		}
		## type_key_filter = can_force_grow_on_planet
		## replace_scope = { this = planet root = country }
		subtype[can_force_grow_on_planet] = {
		}
		## type_key_filter = can_force_decline_on_planet
		## replace_scope = { this = planet root = country }
		subtype[can_force_decline_on_planet] = {
		}
		## type_key_filter = can_force_decline_species
		## replace_scope = { this = species root = country }
		subtype[can_force_decline_species] = {
		}
		## type_key_filter = should_force_decline_species
		## replace_scope = { this = species root = species from = planet }
		subtype[should_force_decline_species] = {
		}
		## type_key_filter = can_build_branch_offices
		## replace_scope = { this = country }
		subtype[can_build_branch_offices] = {
		}
		## type_key_filter = can_support_branch_offices
		## replace_scope = { this = country }
		subtype[can_support_branch_offices] = {
		}
		## type_key_filter = can_build_branch_office_on_planet
		## replace_scope = { this = planet root = country }
		subtype[can_build_branch_office_on_planet] = {
		}
		## type_key_filter = is_criminal_syndicate_rule
		## replace_scope = { this = country }
		subtype[is_criminal_syndicate_rule] = {
		}
		## type_key_filter = can_crossbreed_species_on_planet
		## replace_scope = { this = planet }
		subtype[can_crossbreed_species_on_planet] = {
		}
		## type_key_filter = can_crossbreed_species
		## replace_scope = { this = species root = species }
		subtype[can_crossbreed_species] = {
		}
		## type_key_filter = can_win_timed_victory
		## replace_scope = { this = no_scope }
		subtype[can_win_timed_victory] = {
		}
		## type_key_filter = can_use_galactic_market
		## replace_scope = { this = country }
		subtype[can_use_galactic_market] = {
		}
		## type_key_filter = can_be_sold_on_slave_market
		## replace_scope = { this = pop root = country }
		subtype[can_be_sold_on_slave_market] = {
		}
		## type_key_filter = can_be_part_of_galactic_community
		## replace_scope = { this = country }
		subtype[can_be_part_of_galactic_community] = {
		}
		## type_key_filter = can_be_part_of_galactic_empire
		## replace_scope = { this = country }
		subtype[can_be_part_of_galactic_empire] = {
		}
		## type_key_filter = can_see_galactic_community
		## replace_scope = { this = country }
		subtype[can_see_galactic_community] = {
		}
		## type_key_filter = can_be_part_of_galactic_council
		## replace_scope = { this = country }
		subtype[can_be_part_of_galactic_council] = {
		}
		## type_key_filter = must_be_advanced_empire
		## replace_scope = { this = country }
		subtype[must_be_advanced_empire] = {
		}
		## type_key_filter = is_allowed_to_be_advanced_empire
		## replace_scope = { this = country }
		subtype[is_allowed_to_be_advanced_empire] = {
		}
		## type_key_filter = has_enough_pops_for_necrophage_on_planet
		## replace_scope = { this = planet }
		subtype[has_enough_pops_for_necrophage_on_planet] = {
		}
		## type_key_filter = can_pop_auto_migrate
		## replace_scope = { this = pop root = planet }
		subtype[can_pop_auto_migrate] = {
		}
		## type_key_filter = can_planet_auto_migrate
		## replace_scope = { this = planet }
		subtype[can_planet_auto_migrate] = {
		}
		## type_key_filter = can_planet_receive_auto_migration
		## replace_scope = { this = planet }
		subtype[can_planet_receive_auto_migration] = {
		}
		## type_key_filter = can_have_first_contact
		## replace_scope = { this = country from = country }
		subtype[can_have_first_contact] = {
		}
		## type_key_filter = can_use_envoys_to_raise_imperial_authority
		## replace_scope = { this = country root = country }
		subtype[can_use_envoys_to_raise_imperial_authority] = {
		}
		## type_key_filter = can_use_envoys_to_lower_imperial_authority
		## replace_scope = { this = country root = country }
		subtype[can_use_envoys_to_lower_imperial_authority] = {
		}
		## type_key_filter = should_planetary_automate
		## replace_scope = { this = planet }
		subtype[should_planetary_automate] = {
		}
	}
}


game_rule = {
	alias_name[trigger] = alias_match_left[trigger]
}
