#Add branch office subtype
types = {
	## graph_related_types = { technology }
	type[building] = {
		path = "game/common/buildings"
		subtype[branch_office_building] = {
			owner_type = corporate
		}
		localisation = {
			## required
			Name = "$"
			## required
			Description = "$_desc"
		}
		pictures = {
			## primary
			icon = "#icon" # icon[gfx/interface/icons/buildings] | <building>
			## primary
			icon = "gfx/interface/icons/buildings/$.dds" # inferred
		}
	}
}

enums = {
	enum[building_categories] = {
		army
		manufacturing
		government
		pop_assembly
		resource
		unity
		research
		trade
		amenity
	}
}


## push_scope = planet
building = {
	## cardinality = 0..inf
	desc = {
		## replace_scope = { this = planet root = planet }
		trigger = {
			alias_name[trigger] = alias_match_left[trigger]
		}
		text = localisation
	}
	## cardinality = 0..1
	owner_type = corporate
	## cardinality = 0..1
	owner_type = subject_holding

	## cardinality = 0..1
	base_buildtime = int

	## cardinality = 0..1
	###whether this building is exempt from being swapped into groups by the AI; default: no
	exempt_from_ai_planet_specialization = bool

	## cardinality = 0..1
	category = enum[building_categories]

	## cardinality = 0..1
	icon = icon[gfx/interface/icons/buildings] #todo: filepath
	## cardinality = 0..1
	icon = <building>
	## cardinality = 0..1
	capital = bool
	## cardinality = 0..1
	can_demolish = bool
	## cardinality = 0..1
	can_be_ruined = bool
	## cardinality = 0..1
	can_be_disabled = bool
	## cardinality = 0..1
	can_build = bool
	## cardinality = 0..1
	base_cap_amount = int
	## cardinality = 0..1
	add_to_first_building_slot = yes
	## cardinality = 0..1
	is_capped_by_modifier = bool
	## cardinality = 0..1
	branch_office_building = bool
	## cardinality = 0..1
	planetary_ftl_inhibitor = bool
	## cardinality = 0..1
	position_priority = int

	## cardinality = 0..1
	allow = {
		alias_name[trigger] = alias_match_left[trigger]
	}

	## cardinality = 0..1
	empire_limit = {
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}

	## cardinality = 0..1
	on_queued = {
		alias_name[effect] = alias_match_left[effect]
	}

	## cardinality = 0..1
	on_unqueued = {
		alias_name[effect] = alias_match_left[effect]
	}

	## cardinality = 0..1
	on_built = {
		alias_name[effect] = alias_match_left[effect]
	}

	## cardinality = 0..1
	on_destroy = {
		alias_name[effect] = alias_match_left[effect]
	}

	## cardinality = 0..1
	potential = {
		alias_name[trigger] = alias_match_left[trigger]
	}

	## cardinality = 0..1
	abort_trigger = {
		alias_name[trigger] = alias_match_left[trigger]
	}

	## cardinality = 0..1
	ruined_trigger = {
		alias_name[trigger] = alias_match_left[trigger]
	}

	## cardinality = 0..1
	destroy_trigger = {
		alias_name[trigger] = alias_match_left[trigger]
	}

	## cardinality = 0..1
	## replace_scope = { root = country this = country }
	show_tech_unlock_if = {
		alias_name[trigger] = alias_match_left[trigger]
	}

	alias_name[triggered_planet_modifier_direct] = alias_match_left[triggered_planet_modifier_direct]
	alias_name[triggered_desc] = alias_match_left[triggered_desc]

	alias_name[triggered_country_modifier_planet] = alias_match_left[triggered_country_modifier_planet]

	## cardinality = 0..1
	resources = {
		category = <economic_category>
		alias_name[economic_template] = alias_match_left[economic_template]
	}

	## cardinality = 0..1
	upgrades = {
		## cardinality = 0..1
		<building>
	}

	## cardinality = 0..1
	## replace_scope = { this = planet root = planet }
	planet_modifier = {
		alias_name[modifier] = alias_match_left[modifier]
	}

	## cardinality = 0..1
	prerequisites = {
		## cardinality = 0..inf
		## incomingReferenceLabel = prereq
		<technology>
	}

	## cardinality = 0..1
	ai_weight = {
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}

	## cardinality = 0..inf
	ai_resource_production = {
		## cardinality = 1..inf
		<resource> = int
		trigger = {
			alias_name[trigger] = alias_match_left[trigger]
		}
	}

	## cardinality = 0..1
	convert_to = {
		## cardinality = 1..inf
		<building>
	}

	## cardinality = 0..1
	## replace_scope = { this = country root = country }
	country_modifier = {
		alias_name[modifier] = alias_match_left[modifier]
	}
	
	## cardinality = 0..1
	## replace_scope = { this = army root = army }
	army_modifier = {
		alias_name[modifier] = alias_match_left[modifier]
	}
	
	## cardinality = 0..1
	### Property on buildings which when added to the AI build queue will remove all non essential build tasks.
	is_essential = bool
}
