#subtype[species_trait] needs a lack of leader_trait = yes. Using [!leader_trait] for now

types = {
	type[trait] = {
		path = "game/common/traits"

		subtype[leader_trait] = {
			leader_trait = { }
			leader_trait = all
		}
		subtype[ruler_trait] = {
			leader_class = { ruler }
		}
		subtype[scientist_trait] = {
			leader_class = { scientist }
		}
		subtype[species_trait] = {
			## cardinality = 0..1
			leader_trait = no
		}

		localisation = {
			## required
			Name = "$"
			## required
			Description = "$_desc"
		}
		pictures = {
			## primary
			icon = "#icon" # filepath
		}
	}
}

trait = {
	## cardinality = 0..1
	host_has_dlc = enum[DLCs]
	## cardinality = 0..1
	### Default = no
	immortal_leaders = bool

	subtype[species_trait] = {
		## cardinality = 0..1
		cost = int
		## cardinality = 0..1
		icon = filepath
		## cardinality = 0..1
		valid_for_all_ethics = bool
		## cardinality = 0..1
		###This only does something if valid_for_all_ethics is set to no
		allowed_ethics = {
			## cardinality = 1..inf
			<ethos>
		}
		allowed_archetypes = {
			## cardinality = 1..inf
			<species_archetype>
		}
		## cardinality = 0..1
		allowed_planet_classes = {
			## cardinality = 1..inf
			<planet_class>
		}
		## cardinality = 0..1
		ideal_planet_class = <planet_class>
		## cardinality = 0..1
		species_class = {
			## cardinality = 1..inf
			<species_class>
		}
		## cardinality = 0..1
		## replace_scope = { this = country root = country }
		modifier = {
			alias_name[modifier] = alias_match_left[modifier]
		}
		## cardinality = 0..1
		## replace_scope = { this = planet root = planet }
		assembling_modifier = {
			alias_name[modifier] = alias_match_left[modifier]
		}
		## cardinality = 0..1
		## replace_scope = { this = planet root = planet }
		declining_modifier = {
			alias_name[modifier] = alias_match_left[modifier]
		}
		## cardinality = 0..1
		## replace_scope = { this = planet root = planet }
		growing_modifier = {
			alias_name[modifier] = alias_match_left[modifier]
		}
		## cardinality = 0..inf
		###won't show in trait tooltips, use custom_tooltip/custom_tooltip_with_modifiers
		alias_name[triggered_pop_modifier] = alias_match_left[triggered_pop_modifier]
		## cardinality = 0..inf
		alias_name[triggered_planet_growth_habitability_modifier] = alias_match_left[triggered_planet_growth_habitability_modifier]
		## cardinality = 0..1
		### Default = yes
		sapient = bool
		## cardinality = 0..1
		### Default = no
		forced_happiness = bool
		## cardinality = 0..1
		sorting_priority = int
		## cardinality = 0..1
		### Default = no
		improves_leaders = bool
		## cardinality = 0..1
		### Default = no
		advanced_trait = bool
		## cardinality = 0..1
		leader_trait = no
		## cardinality = 0..1
		leader_age_min = int
		## cardinality = 0..1
		leader_age_max = int
		## replace_scope = { this = species root = species from = country }
		## cardinality = 0..1
		species_potential_add = {
			alias_name[trigger] = alias_match_left[trigger]
		}
		## replace_scope = { this = species root = species from = country }
		## cardinality = 0..1
		species_possible_add = {
			alias_name[trigger] = alias_match_left[trigger]
		}
		## replace_scope = { this = species root = species from = country }
		## cardinality = 0..1
		species_potential_remove = {
			alias_name[trigger] = alias_match_left[trigger]
		}
		## replace_scope = { this = species root = species from = country }
		## cardinality = 0..1
		species_possible_remove = {
			alias_name[trigger] = alias_match_left[trigger]
		}
		## replace_scope = { this = species root = species from = country }
		## cardinality = 0..1
		species_possible_merge_add = {
			alias_name[trigger] = alias_match_left[trigger]
		}
		## replace_scope = { this = species root = species from = country }
		## cardinality = 0..1
		species_possible_merge_remove = {
			alias_name[trigger] = alias_match_left[trigger]
		}
		## cardinality = 0..1
		prerequisites = {
			## cardinality = 0..100
			<technology>
		}
		## cardinality = 0..1
		opposites = {
			## cardinality = 1..100
			<trait.species_trait>
		}

		## cardinality = 0..1
		potential_crossbreeding_chance = float

		## cardinality = 0..1
		slave_cost = {
			energy = int
		}
		## cardinality = 0..1
		infertile = bool

		## cardinality = 0..1
		random_weight = {
			## cardinality = 1..inf
			<species_class> = float
		}
	}

	subtype[leader_trait] = {

		cost = int
		icon = filepath

		leader_trait = {
			## cardinality = 1..5
			enum[leader_classes]
		}
		leader_trait = all
		## cardinality = 0..1
		### Default = no
		hide_age = bool
		## cardinality = 0..1
		can_retreat = bool #admiral
		## cardinality = 0..1
		## replace_scope = { this = country root = country }
		modifier = {
			alias_name[modifier] = alias_match_left[modifier]
		}

		## cardinality = 0..1
		## replace_scope = { this = leader root = leader }
		self_modifier = {
			alias_name[modifier] = alias_match_left[modifier]
		}
		## cardinality = 0..1
		prerequisites = {
			## cardinality = 0..100
			<technology>
		}
		## cardinality = 0..1
		leader_class = {
			## cardinality = 1..5
			enum[leader_classes]
		}

		## cardinality = 0..1
		leader_potential_add = {
			alias_name[trigger] = alias_match_left[trigger]
		}

		## cardinality = 0..1
		requires_traits = {
			## cardinality = 1..100
			<trait.species_trait>
		}
		## cardinality = 0..1
		opposites = {
			## cardinality = 1..100
			<trait.leader_trait>
		}
	}
	## cardinality = 0..1
	ai_categories = {
		## cardinality = 1..4
		enum[trait_ai_classes]
	}

	## cardinality = 0..1
	initial = bool
	## cardinality = 0..1
	randomized = bool

	## cardinality = 0..1
	custom_tooltip = localisation
	## cardinality = 0..1
	###unlike custom_tooltip, this shows in addition to the modifiers
	custom_tooltip_with_modifiers = localisation

	## cardinality = 0..1
	ai_weight = {
		enum[weight_or_factor] = int
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}
}

enums = {
	enum[trait_ai_classes] = {
		engineering
		physics
		society
		survey
	}
}
