
types = {
    type[bloodline] = {
        path_strict = yes
        path = "game/common/bloodlines"
        localisation = {
            name = "$"
            description = "$_desc"
        }
    }
}

bloodline = {
    ## cardinality = 0..inf
    ### Modifiers the bloodline applies to everyone that has it.
    alias_name[modifier] = alias_match_left[modifier]
    
    # TODO: Docs
    ## cardinality = 0..inf
    ### Optional. Defines command modifiers that should affect all members of the bloodline.
    <dynamic_modifier> = int

    ## cardinality = 0..inf
    ### Modifiers the bloodline applies to everyone that has it.
    alias_name[bloodline_modifier] = alias_match_left[bloodline_modifier]

    ## cardinality = 0..1
    ### Command modifiers the bloodline applies to everyone that has it.
    command_modifier = {
        alias_name[command_modifier] = alias_match_left[command_modifier]
    }

    ## cardinality = 0..1
    ### Inheritance rules for the bloodline type. Defaults to "all_descendants".
    inheritance = enum[bloodline_inheritance_types]

    ## cardinality = 0..1
    ### If no, a patrilineal/matrilineal bloodline will never pass down through the mother/father, respectively, regardless of marriage type. Defaults to "yes".
    matrilineal_override = bool

    ## cardinality = 0..1
    ### If yes, bastards can inherit the bloodline. Defaults to "no".
    allow_bastards = bool

    ## cardinality = 0..1
    ### 96x93px picture to use in the bloodlines viewer. Defaults to "GFX_bloodlines_placeholder_symbol".
    picture = <sprite>

    ## cardinality = 0..1
    ### Flags automatically assigned to each created bloodline of this type.
    flags = {
        ## cardinality = 0..inf
        value_set[bloodline_flag]
    }

    ## cardinality = 0..1
    ## replace_scope = { this = character root = character }
    ### Conditions for a bloodline holder to get its benefits. Defaults to always active.
    active = single_alias_right[trigger_clause]
}