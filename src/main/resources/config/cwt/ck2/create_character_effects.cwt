
# TODO: Figure out defaults for a lot of these
## scope = { character province }
### Creates a random character with the given parameters and possibly with a specific education, depending on the effect used.
alias[effect:enum[create_character_effects]] = {
    # Seems like this is the only *required* value
    ### The character's dynasty will be set to this dynasty.
    dynasty = <dynasty>

    ### The character will have no dynasty (be lowborn).
    dynasty = none

    ### The character will have a random dynasty.
    dynasty = random

    # TODO: What does it do otherwise?
    ### The character will have a culture-appropriate dynasty if there are available unused ones.
    dynasty = culture

    ### The character will have a culture-appropriate dynasty if there are available unused ones, otherwise it picks a random dynasty name from the culture.
    dynasty = actually_culture

    # TODO: Find default age (random adult?)
    ## cardinality = 0..1
    ### The age of the newly created character.
    age = int

    ## cardinality = 0..1
    ### The name of the newly created character. If not set, randomly picks an appropriate name.
    name = scalar

    ## cardinality = 0..1
    ### If set, gives the character a nickname.
    has_nickname = <nickname>

    ## cardinality = 0..1
    ### Set some or all of the base attributes of the character. Those not set will be random.
    attributes = {
        ## cardinality = 1..5
        enum[attributes] = int
    }

    ## cardinality = 0..inf
    ### Traits to give to the character.
    trait = <trait>

    ## cardinality = 0..1
    ### Base health of the character.
    health = float

    ## cardinality = 0..1
    ### Base fertility of the character.
    fertility = float

    ## cardinality = 0..1
    ### If yes, the character will receive random traits in addition to those specified by this effect. Defaults to "no".
    random_traits = bool

    ## cardinality = 0..1
    ### If yes, the character will be female. PROBABLY Defaults to "no".
    female = bool

    ## cardinality = 0..1
    ### The character will have a 50% chance of being female.
    female = random

    ## cardinality = 0..1
    ### The character will have [value]% chance of being female.
    female = int

    ## cardinality = 0..1
    ### The character's employer will be the owner of this title. If not set, defaults to the scoped character or the owner of the scoped province.
    employer = <title>

    ## cardinality = 0..1
    ### The character's religion will be this.
    religion = scope[religion]

    ## cardinality = 0..1
    ### The character's religion will be this.
    religion = scope[character]

    ## cardinality = 0..1
    ### The character's culture will be this.
    culture = scope[character]

    ## cardinality = 0..1
    ### The character's religion will be randomly selected out of those eligible for that.
    culture = random

    ## cardinality = 0..1
    ### The character's culture will be this.
    culture = <culture>

    ## cardinality = 0..1
    ### The character's specific dna for their portrait.
    dna = portrait_dna_field

    ## cardinality = 0..1
    ### Flags that will be set on the character on creation.
    flag = value_set[character_flag]

    # TODO: Confirm
    ## cardinality = 0..1
    ### UNCONFIRMED Used for portraits, trait inheritance and such.
    genetic_father = scope[character]

    # TODO: Confirm
    ## cardinality = 0..1
    ### UNCONFIRMED Used for portraits, trait inheritance and such.
    genetic_mother = scope[character]

    # TODO: Figure out
    ## cardinality = 0..1
    ### UNKNOWN
    race = scope[character]

    ## cardinality = 0..1
    ### If yes, character won't ever be pruned from the database. Defaults to "no".
    historical = bool

    ## cardinality = 0..1
    ### Age at which a character has become immortal, if they have a trait with immortality = yes.
    immortal_age = int
}