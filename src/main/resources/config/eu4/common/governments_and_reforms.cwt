
types = {
	type[government] = {
		path = "game/common/governments"

		subtype[normal] = {
			basic_reform = scalar
		}

		## type_key_filter = pre_dharma_mapping
		subtype[pre_dharma_mapping] = {
		}

		localisation = {
			subtype[normal] = {
				## required
				name = "$_name"
			}
		}
	}
	type[government_reform] = {
		path = "game/common/government_reforms"
		## type_key_filter = defaults_reform
		subtype[default] = {
		}
		subtype[legacy] = {
			legacy_government = yes
		}
		subtype[basic] = {
			basic_reform = yes
		}
#		## type_key_filter <> defaults_reform
		subtype[new] = {
			## cardinality = 0..1
			legacy_government = no
		}
		localisation = {
			## required
			name = "$"
		}
	}
	#necessary for localisations
	## type_key_filter <> { defaults_reform republic_mechanic monarchy_mechanic theocracy_mechanic tribe_mechanic }
	type[new_government_reform] = {
		path = "game/common/government_reforms"
		subtype[new] = {
			## cardinality = 0..1
			legacy_government = no
		}
		localisation = {
			subtype[new] = {
				## required
				description = "$_desc"
			}
		}
	}
	type[government_ranks] = {
		path = "game/common/government_ranks"
		path_file = "00_government_ranks.txt"
		name_from_file = yes
		type_per_file = yes
	}
	type[government_name] = {
		path = "game/common/government_names"
		subtype[default] = {
			government_reform = scalar
		}
	}
}

government_reform = {
	subtype[default] = {
		valid_for_new_country = bool
		allow_convert = bool
		rulers_can_be_generals = bool
		heirs_can_be_generals = bool
		fixed_rank = int[0..3]
		republican_name = bool
		militarised_society = bool
		government_abilities = { }
		claim_states = bool
		religion = bool
		republic = bool
		dictatorship = bool
		is_elective = bool
		queen = bool
		heir = bool
		has_parliament = bool
		has_devotion = bool
		has_meritocracy = bool
		allow_force_tributary = bool
		duration = int
		election_on_death = bool
		monarchy = bool
		tribal = bool
		different_religion_acceptance = int
		different_religion_group_acceptance = int
		boost_income = bool
		monastic = bool
		can_use_trade_post = bool
		native_mechanic = bool
		can_form_trade_league = bool
		free_city = bool
		is_trading_city = bool
		trade_city_reform = ""
		maintain_dynasty = bool
		allow_migration = bool
		nation_designer_trigger = { }
		nation_designer_cost = int
		papacy = bool
		has_harem = bool
		has_pashas = bool
		allow_vassal_war = bool
		allow_vassal_alliance = bool
		min_autonomy = int
		factions = { }
		foreign_slave_rulers = bool
		royal_marriage = bool
		nomad = bool
		assimilation_cultures = { }
		states_general_mechanic = { }
		valid_for_nation_designer = bool
		allow_normal_conversion = bool
		start_territory_to_estates = float
		has_term_election = bool
		factions_frame = 2
		factions_frame = 9
		force_admiral_leader = bool
		admirals_become_rulers = bool
		generals_become_rulers = bool
		allow_banners = bool
		uses_revolutionary_zeal = bool
		revolutionary = bool
		revolutionary_client_state = bool
		disallowed_trade_goods = {
			## cardinality = 0..inf
			<trade_good>
		}
		free_concentrate_development = bool
		raze_province = bool
		force_conversion_gives_global_holy_war_released_modifier = bool
		allow_draft_transport_ships = bool
	}

	
	subtype[legacy] = {
		legacy_government = yes
	}

	subtype[basic] = {
		basic_reform = yes
	}

	subtype[new] = {
		legacy_equivalent = <government_reform.legacy>
		legacy_equivalent = enum[hardcoded_legacygovernments]
		
		## cardinality = 0..1
		assimilation_cultures = {
			## cardinality = 1..inf
			## replace_scope = { root = country this = country }
			<culture_group> = {
				alias_name[modifier] = alias_match_left[modifier]
			}
		}
	}

	subtype[!default] = {
		## severity = info
		icon = scalar #todo: refers to a file name in a certain folder
		
		## cardinality = 0..1
		queen = bool
		## cardinality = 0..1
		heir = bool
		## cardinality = 0..1
		religion = bool
		## cardinality = 0..1
		papacy = bool
		## cardinality = 0..1
		nomad = bool
		## cardinality = 0..1
		start_territory_to_estates = float
		## cardinality = 0..1
		allow_normal_conversion = bool
		## cardinality = 0..1
		valid_for_new_country = bool
		## cardinality = 0..1
		valid_for_nation_designer = bool
		## cardinality = 0..1
		nation_designer_cost = int
		## cardinality = 0..1
		monarchy = bool
		
		## cardinality = 0..1
		has_devotion = bool
		## cardinality = 0..1
		allow_force_tributary = bool
		## cardinality = 0..1
		different_religion_acceptance = int
		## cardinality = 0..1
		different_religion_group_acceptance = int
		## cardinality = 0..1
		uses_revolutionary_zeal = bool
	
		## cardinality = 0..1
		election_on_death = bool
		## cardinality = 0..1
		tribal = bool
		## cardinality = 0..1
		monastic = bool
		## cardinality = 0..1
		native_mechanic = bool

		## cardinality = 0..1
		dictatorship = bool
		## cardinality = 0..1
		is_elective = bool
		## cardinality = 0..1
		is_trading_city = bool

		## cardinality = 0..1
		free_city = bool
		## cardinality = 0..1
		allow_migration = bool

		## cardinality = 0..1
		lock_level_when_selected = bool

		## cardinality = 0..1
		rulers_can_be_generals = bool
		## cardinality = 0..1
		heirs_can_be_generals = bool
		
		## cardinality = 0..1
		allow_convert = bool
	
		## cardinality = 0..1
		maintain_dynasty = bool
	
		## cardinality = 0..1
		allow_vassal_war = bool
		## cardinality = 0..1
		allow_vassal_alliance = bool
	
		## cardinality = 0..1
		revolutionary = bool
		## cardinality = 0..1
		revolutionary_client_state = bool
		
		## cardinality = 0..1
		free_concentrate_development = bool
		## cardinality = 0..1
		raze_province = bool
		## cardinality = 0..1
		force_conversion_gives_global_holy_war_released_modifier = bool
		## cardinality = 0..1
		allow_draft_transport_ships = bool
		## cardinality = 0..1
		replacement_on_independence_war = indep_daimyo
		
		## replace_scope = { root = country this = country }
		## cardinality = 0..1
		nation_designer_trigger = {
			alias_name[trigger] = alias_match_left[trigger]
		}


		## cardinality = 0..1
		fixed_rank = int[0..3]

		## replace_scope = { root = country this = country }
		modifiers = {
			alias_name[modifier] = alias_match_left[modifier]
		}
		## replace_scope = { root = country this = country }
		ai = {
			factor = float
			alias_name[modifier_rule] = alias_match_left[modifier_rule]
		}

		## replace_scope = { root = country this = country }
		## cardinality = 0..1
		potential = {
			alias_name[trigger] = alias_match_left[trigger]
		}
		
		## replace_scope = { root = country this = country }
		## cardinality = 0..1
		trigger = {
			alias_name[trigger] = alias_match_left[trigger]
		}
		
		## replace_scope = { root = country this = country }
		## cardinality = 0..1
		effect = {
			alias_name[effect] = alias_match_left[effect]
		}
		
		## replace_scope = { root = country this = country }
		## cardinality = 0..1
		removed_effect = {
			alias_name[effect] = alias_match_left[effect]
		}
		
		## cardinality = 0..1
		government_abilities = {
			enum[government_mechanics]
		}

		## cardinality = 0..inf
		conditional = {
			allow = {
				## cardinality = 0..inf
				has_dlc = enum[DLCs]
				## cardinality = 0..inf
				NOT = {
					## cardinality = 0..inf
					has_dlc = enum[DLCs]
				}
			}
			## cardinality = 0..1
			allow_migration = bool
			## cardinality = 0..1
			can_use_trade_post = bool
			## cardinality = 0..1
			can_form_trade_league = bool
			## cardinality = 0..1
			trade_city_reform = <government_reform>
			## cardinality = 0..1
			has_parliament = bool

			## cardinality = 0..1
			has_devotion = bool
			## cardinality = 0..1
			has_meritocracy = bool
			## cardinality = 0..1
			has_harem = bool
			## cardinality = 0..1
			has_pashas = bool
			## cardinality = 0..1
			claim_states = bool
			## cardinality = 0..1
			government_abilities = {
				enum[government_mechanics]
			}
			## cardinality = 0..1
			militarised_society = bool
			## cardinality = 0..1
			foreign_slave_rulers = bool
			## cardinality = 0..1
			states_general_mechanic = {
				## cardinality = 0..1
				## replace_scope = { root = country this = country }
				statists = {
					alias_name[modifier] = alias_match_left[modifier]
				}
				## cardinality = 0..1
				## replace_scope = { root = country this = country }
				orangists = {
					alias_name[modifier] = alias_match_left[modifier]
				}
				## cardinality = 0..1
				## replace_scope = { root = country this = country }
				monarchists = {
					alias_name[modifier] = alias_match_left[modifier]
				}
				## cardinality = 0..1
				## replace_scope = { root = country this = country }
				revolutionaries = {
					alias_name[modifier] = alias_match_left[modifier]
				}
				## cardinality = 0..1
				## replace_scope = { root = country this = country }
				militarists = {
					alias_name[modifier] = alias_match_left[modifier]
				}
				## cardinality = 0..1
				## replace_scope = { root = country this = country }
				theocrats = {
					alias_name[modifier] = alias_match_left[modifier]
				}
			}

			## cardinality = 0..1
			queen = bool
			## cardinality = 0..1
			heir = bool
			## cardinality = 0..1
			duration = int
			## cardinality = 0..1
			has_term_election = bool
			
			## cardinality = 0..1
			factions = {
				## cardinality = 0..inf
				<faction>
			}

			## cardinality = 0..1
			is_elective = bool
			
			## cardinality = 0..1
			allow_banners = bool
			## cardinality = 0..1
			election_on_death = bool
			
			## cardinality = 0..1
			custom_attributes = {
				## cardinality = 0..1
				enables_plutocratic_idea_group = bool
				## cardinality = 0..1
				enables_aristocratic_idea_group = bool
				## cardinality = 0..1
				lottery_election = bool
				## cardinality = 0..1
				election_on_death = bool
				## cardinality = 0..1
				is_merchant_republic = bool
				## cardinality = 0..1
				locked_government_type = bool
				## cardinality = 0..1
				maratha_general_interaction = bool
				## cardinality = 0..1
				better_purbias_interaction = bool
				## cardinality = 0..1
				enables_nepotism = bool
				## cardinality = 0..1
				force_admiral_leader = bool
				## cardinality = 0..1
				admirals_become_rulers = bool
				## cardinality = 0..1
				gives_war_against_the_world_tooltip_dummy = yes
				## cardinality = 0..inf
				value_set[custom_attribute] = bool
			}
		}
		
		## cardinality = 0..1
		can_form_trade_league = bool
		
		## cardinality = 0..1
		has_term_election = bool
		## cardinality = 0..1
		duration = int
		## cardinality = 0..1
		republican_name = bool
		## cardinality = 0..1
		royal_marriage = bool
		## cardinality = 0..1
		boost_income = bool
	
		## cardinality = 0..1
		factions = {
			## cardinality = 1..inf
			<faction>
		}
	
		## cardinality = 0..1
		republic = bool
	
		## cardinality = 0..1
		custom_attributes = {
			## cardinality = 0..1
			enables_plutocratic_idea_group = bool
			## cardinality = 0..1
			enables_aristocratic_idea_group = bool
			## cardinality = 0..1
			lottery_election = bool
			## cardinality = 0..1
			election_on_death = bool
			## cardinality = 0..1
			is_merchant_republic = bool
			## cardinality = 0..1
			locked_government_type = bool
			## cardinality = 0..1
			maratha_general_interaction = bool
			## cardinality = 0..1
			better_purbias_interaction = bool
			## cardinality = 0..1
			enables_nepotism = bool
			## cardinality = 0..1
			force_admiral_leader = bool
			## cardinality = 0..1
			admirals_become_rulers = bool
			## cardinality = 0..1
			gives_war_against_the_world_tooltip_dummy = yes
			## cardinality = 0..inf
			value_set[custom_attribute] = bool
		}

		## cardinality = 0..1
		factions_frame = 2
		## cardinality = 0..1
		factions_frame = 9
		## cardinality = 0..1
		generals_become_rulers = bool
		## cardinality = 0..1
		disallowed_trade_goods = {
			## cardinality = 0..inf
			<trade_good>
		}
		
		## cardinality = 0..1
		post_removed_effect = {
			alias_name[effect] = alias_match_left[effect]
		}
	}
}

enums = {
	enum[government_icons] = {
		ambrosian_republic
		arabic_scripture
		asian_scripture
		assembly_hall
		ballot_box
		british_queen
		castle
		celestial_empire
		chieftain
		chinese_palace
		church
		clergyman
		compass
		constitution
		crown
		crown_highlighted
		daimyo
		dutch_flag
		dutch_republic
		elective_monarchy
		english_monarchy
		feudal_theocracy
		fist_in_air
		free_city
		general_eastern_administrative
		generic_people
		horde_riding
		horde_riding_highlighted
		indian_crown
		indian_palace
		indian_sultanate
		judge
		king
		king_2
		king_2_highlighted
		king_highlighted
		landscape
		mamluk_government
		man_and_children
		man_on_podium
		mandala_system
		map
		map_2
		merchant
		merchant_ship
		misl_confederacy
		monks
		muslim
		muslim_highlighted
		nayankara_system
		noble_indian
		noble_muslim
		nobleman
		ottoman_government
		papacy
		paper_money_map
		paper_with_seal
		paper_with_seal_3
		parliament
		parliament_hall
		parliament_highlighted
		peacock_throne
		peasant_republic
		peasants
		people_walking
		politician
		pope
		pope_highlighted
		prussian_monarchy
		prussian_monarchy_2
		queen
		rajput_kingdom
		religious_leader
		religious_leader_highlighted
		retain_tribal_hierarchy
		revolutionary_republic
		rioting_burning
		rioting_burning_2
		russian_principality
		samurai
		shaman
		shogunate
		siddhi_recruitment
		soldiers
		soldiers_2
		soldiers_3
		soldiers_3_highlighted
		soldiers_4
		soldiers_5
		soldiers_6
		states_general
		strength_of_the_khalsa
		trading_city
		tribal_centralize_power
		tribal_civil_society
		tribal_council
		tribal_lip_service
		tribal_martial_society
		tribal_religious_society
	}
	enum[hardcoded_legacygovernments] = {
		administrative_monarchy
		administrative_republic
		ambrosian_republic_legacy
		american_republic_legacy
		black_market_consortium_government
		bureaucratic_despotism
		celestial_empire_legacy
		colonial_government_legacy
		constitutional_monarchy
		constitutional_republic
		cossacks_legacy_reform
		daimyo_legacy
		despotic_monarchy
		dutch_republic_legacy
		elective_monarchy_legacy
		english_monarchy_legacy
		enlightened_despotism
		federal_republic_legacy
		feudal_monarchy
		feudal_theocracy_legacy
		holy_state_legacy
		holy_state_legacy
		imperial_city
		indep_daimyo_legacy
		iqta_legacy
		mamluk_government_legacy
		merchant_republic
		military_dictatorship
		monastic_order_government
		native_council_legacy
		noble_republic
		oligarchic_republic
		ottoman_government_legacy
		papal_government
		peasants_republic_legacy
		pirate_kingdom
		pirate_republic
		principality_legacy
		protectorate_parliament_legacy
		prussian_monarchy_legacy
		prussian_republic
		republican_dictatorship
		revolutionary_empire
		revolutionary_republic
		shogunate_legacy
		siberian_native_council
		signoria
		steppe_horde_legacy
		theocratic_government
		trading_city_legacy
		tribal_democracy_legacy
		tribal_despotism_legacy
		tribal_federation_legacy
		tribal_kingdom_legacy
		tsardom_legacy
		united_cantons_legacy
		veche_republic_legacy
		venetian_merchant_republic
		war_against_the_world_government
	}
}


government = {
	subtype[normal] = {
		basic_reform = <government_reform.basic>
		color = {
			## cardinality = 3..3
			int[0..255]
		}
	
		reform_levels = {
			## cardinality = 1..10
			localisation = {
				reforms = {
					## cardinality = 1..inf
					<government_reform.new>
				}
			}
		}
		legacy_government = {
			## cardinality = 0..inf
			<government_reform.legacy>
			## cardinality = 0..inf
			enum[hardcoded_legacygovernments]
		}
		## cardinality = 0..inf
		exclusive_reforms = {
			## cardinality = 1..inf
			<government_reform.new>
		}
	}

	subtype[pre_dharma_mapping] = {
		<government_reform> = {
			government = <government>
			legacy_government = <government_reform.legacy>
			## cardinality = 0..inf
			enum[hardcoded_legacygovernments]
		}
		tribal_democracy = {
			government = <government>
			legacy_government = <government_reform.legacy>
			## cardinality = 0..inf
			legacy_government = enum[hardcoded_legacygovernments]
		}
		native_council = {
			government = <government>
			legacy_government = <government_reform.legacy>
			## cardinality = 0..inf
			legacy_government = enum[hardcoded_legacygovernments]
		}
		all_mechanics = {
			government = <government>
			legacy_government = <government_reform.legacy>
			## cardinality = 0..inf
			legacy_government = enum[hardcoded_legacygovernments]
		}
	}
}

government_ranks = {
	## cardinality = 0..10
	## replace_scope = { root = country this = country }
	int[1..10] = {
		alias_name[modifier] = alias_match_left[modifier]
	}
}

government_name = {
	subtype[default] = {
		rank = {
			## cardinality = 1..10
			int[1..10] = localisation
		}
	
		ruler_male = {
			## cardinality = 1..10
			int[1..10] = localisation
		}

		ruler_female = {
			## cardinality = 1..10
			int[1..10] = localisation
		}

		consort_male  = {
			## cardinality = 1..10
			int[1..10] = localisation
		}

		consort_female = {
			## cardinality = 1..10
			int[1..10] = localisation
		}

		heir_male = {
			## cardinality = 1..10
			int[1..10] = localisation
		}

		heir_female = {
			## cardinality = 1..10
			int[1..10] = localisation
		}

		government_reform = <government_reform.basic>
	}
	
	subtype[!default] = {
		rank = {
			## cardinality = 0..10
			int[1..10] = localisation
		}

		## cardinality = 0..1
		ruler_male = {
			## cardinality = 0..10
			int[1..10] = localisation
		}

		## cardinality = 0..1
		ruler_female = {
			## cardinality = 0..10
			int[1..10] = localisation
		}

		## cardinality = 0..1
		consort_male  = {
			## cardinality = 0..10
			int[1..10] = localisation
		}

		## cardinality = 0..1
		consort_female = {
			## cardinality = 0..10
			int[1..10] = localisation
		}

		## cardinality = 0..1
		heir_male = {
			## cardinality = 0..10
			int[1..10] = localisation
		}

		## cardinality = 0..1
		heir_female = {
			## cardinality = 0..10
			int[1..10] = localisation
		}
	}

	## replace_scope = { root = country this = country }
	trigger = {
		alias_name[trigger] = alias_match_left[trigger]
	}
}
