
types = {
	type[advisor_id] = {
		path = "game/history/advisors"
		name_field = "advisor_id"
	}
    type[diplomacy_history] = {
        path = "game/history/diplomacy"
        name_from_file = yes
        type_per_file = yes
        subtype[normal] = {
            ## cardinality = 0..0
            date_field = {
                scalar = scalar
            }
        }
		## type_key_filter = celestial_empire
        subtype[celestial] = {
        }
		## type_key_filter = hre
        subtype[hre] = {
        }
    }
	#Todo: The name presumably has some requirements, but they are ignored for now

	## push_scope = province
	type[province_history] = {
		path = "game/history/provinces"
		name_from_file = yes
		type_per_file = yes

		subtype[not_sea] = {
			trade_goods = scalar
		}
		subtype[owned] = {
			owner = scalar
		}
	}
	#todo: does this work with two name_x stuff?
	type[war_history] = {
		path = "game/history/wars"
		name_from_file = yes
		type_per_file = yes

		name_field = "name"
	}
	#Todo: The name presumably has some requirements, but they are ignored for now
	type[country_history] = {
		path = "game/history/countries"
		name_from_file = yes
		type_per_file = yes

		subtype[not_nat_pir_reb] = {
			government = scalar
		}
		subtype[sunni] = {
			religion = sunni
		}
	}
}


advisor_id = {
	advisor_id = int
	name = scalar #todo: name
	location = <province_id>
	## cardinality = 0..1
	discount = bool
	skill = int[1..3]
	type = <advisor_type>
	## cardinality = 0..1
	culture = <culture>
	## cardinality = 0..1
	religion = <religion>
	date = date_field
	death_date = date_field
	## cardinality = 0..1
	female = yes
}


diplomacy_history = {
	subtype[normal] = {
		## cardinality = 0..inf
		<subject_type> = {
			first = enum[country_tags]
			second = enum[country_tags]
			start_date = date_field
			end_date = date_field
		}

		## cardinality = 0..inf
		alliance = {
			first = enum[country_tags]
			second = enum[country_tags]
			start_date = date_field
			end_date = date_field
			## cardinality = 0..1
			trade_league = 1
		}

		## cardinality = 0..inf
		enum[other_diplo_history] = {
			first = enum[country_tags]
			second = enum[country_tags]
			start_date = date_field
			end_date = date_field
		}

		## cardinality = 0..inf
		dependency = {
			#or can you have different stuff entered there? <subject_type> would make sense except they already have their own stuff
			subject_type = <subject_type>
			first = enum[country_tags]
			second = enum[country_tags]
			start_date = date_field
			end_date = date_field
		}
	}

	subtype[celestial] = {
		## cardinality = 0..inf
		date_field = {
			celestial_emperor = enum[country_tags]
			celestial_emperor = ---
		}
	}
	subtype[hre] = {
		## cardinality = 0..inf
		date_field = {
			emperor = enum[country_tags]
			emperor = ---
		}
	}
}

enums = {
	enum[other_diplo_history] = {
		guarantee
		union
		royal_marriage
	}
}


province_history = {
	subtype[not_sea] = {
		culture = <culture>
		religion = <religion>
		hre = bool
		base_tax = int
		base_production = int
		base_manpower = int
		trade_goods = <trade_good>
		trade_goods = unknown
		capital = scalar #todo: is this referred to anywhere?
		## cardinality = 0..1
		extra_cost = int
		## cardinality = 0..1
		center_of_trade = int[1..3]
		## cardinality = 0..1
		estate = <estate>
		## cardinality = 0..1
		revolt_risk = int[0..100]
		## cardinality = 0..1
		unrest = int[0..100]
		## cardinality = 0..1
		seat_in_parliament = yes

		## cardinality = 0..1
		latent_trade_goods = {
			<trade_good.latent>
		}

		alias_name[effect] = alias_match_left[effect]

		## cardinality = 0..inf
		date_field = {
			## cardinality = 0..2
			revolt = {
				## cardinality = 0..1
				type = <rebel_type>
				## cardinality = 0..1
				type = religious_rebels
				## cardinality = 0..1
				size = float
				## cardinality = 0..1
				leader = scalar #todo: name
				## cardinality = 0..1
				name = scalar #todo: name
			}
			## cardinality = 0..2
			seat_in_parliament = bool
			## cardinality = 0..1
			base_tax = int
			## cardinality = 0..1
			base_manpower = int
			## cardinality = 0..1
			base_production = int
			## cardinality = 0..1
			estate = <estate>
			## cardinality = 0..1
			controller = enum[country_tags]
			## cardinality = 0..inf
			discovered_by = enum[country_tags]
			## cardinality = 0..inf
			discovered_by = <technology_group>
			## cardinality = 0..1
			owner = enum[country_tags]
			## cardinality = 0..1
			owner = ---
			## cardinality = 0..1
			controller = enum[country_tags]
			## cardinality = 0..1
			controller = ---
			## cardinality = 0..inf
			add_core = enum[country_tags]
			## cardinality = 0..inf
			remove_core = enum[country_tags]
			## cardinality = 0..1
			is_city = bool
			## cardinality = 0..1
			culture = <culture>
			## cardinality = 0..1
			religion = <religion>
			## cardinality = 0..1
			reformation_center = <religion>
			## cardinality = 0..1
			trade_goods = <trade_good>
			## cardinality = 0..1
			capital = scalar #todo: is this referred to anywhere?
			## cardinality = 0..1
			trade_goods = <trade_good>
			## cardinality = 0..1
			unrest = int[0..100]
			#todo: what is the max number of buildings?
			#todo: yes/no?
			## cardinality = 0..inf
			<building> = bool
			## cardinality = 0..1
			hre = bool
			## cardinality = 0..1
			revolt_risk = int[0..100]


			## cardinality = 0..1
			native_size = int
			## cardinality = 0..1
			native_ferocity = float[0..10]
			## cardinality = 0..1
			native_hostileness = float[0..10]

			## cardinality = 0..1
			extra_cost = int
			## cardinality = 0..1
			center_of_trade = int[1..3]

			## cardinality = 0..1
			citysize = int

			alias_name[effect] = alias_match_left[effect]
		}
	}

	## cardinality = 0..inf
	discovered_by = <technology_group>
	## cardinality = 0..inf
	discovered_by = enum[country_tags]


	subtype[!not_sea] = {
		## cardinality = 0..inf
		# set to warning instead of error as some people like to have future history for wastelands in scenario editor
		## severity = warning
		date_field = {
			## cardinality = 0..inf
			discovered_by = enum[country_tags]
			## cardinality = 0..inf
			discovered_by = <technology_group>
		}
	}

	subtype[owned] = {
		owner = enum[country_tags]
		controller = enum[country_tags]
		is_city = yes
		## cardinality = 0..inf
		add_core = enum[country_tags]

		#todo: what is the max number of buildings?
		## cardinality = 0..inf
		<building> = yes

		## cardinality = 0..0
		## severity = info
		native_size = scalar
		## cardinality = 0..0
		## severity = info
		native_ferocity = scalar
		## cardinality = 0..0
		## severity = info
		native_hostileness = scalar
	}

	subtype[!owned] = {
		native_size = int
		native_ferocity = float[0..10]
		native_hostileness = float[0..10]
	}
}

war_history = {
	name = scalar #todo: name
	## cardinality = 0..1
	succession = enum[country_tags]

	war_goal = {
		type = <wargoal_type>
		casus_belli = <casus_belli>
		## cardinality = 0..1
		province = <province_id>
		## cardinality = 0..1
		tag = enum[country_tags]
	}

	## cardinality = 2..inf
	date_field = {
		## cardinality = 0..inf
		add_attacker = enum[country_tags]
		#todo: I assume you must remove all those added or the war will go down as never ending
		## cardinality = 0..inf
		rem_attacker = enum[country_tags]

		## cardinality = 0..inf
		add_defender = enum[country_tags]
		#todo: I assume you must remove all those added or the war will go down as never ending
		## cardinality = 0..inf
		rem_defender = enum[country_tags]

		## cardinality = 0..1
		battle = {
			name = scalar
			location = <province_id>
			attacker = {
				commander = scalar #todo: name?
				## cardinality = 1..4
				enum[unit_types] = int
				###In percent (0-100)
				losses = int[0..100]
				country = enum[country_tags]
			}
			defender = {
				commander = scalar #todo: name?
				## cardinality = 1..4
				enum[unit_types] = int
				###In percent (0-100)
				losses = int[0..100]
				country = enum[country_tags]
			}
			result = bool
		}
	}
}



country_history = {
	subtype[not_nat_pir_reb] = {
		government = <government>
		## cardinality = 0..1
		add_government_reform = <government_reform>
		## cardinality = 0..1
		government_rank = int[1..3]
		## cardinality = 0..1
		mercantilism = int[0..100]
		technology_group = <technology_group>
		## cardinality = 0..1
		unit_type = <technology_group>
		religion = <religion>
		## cardinality = 0..1
		secondary_religion = <religion>
		primary_culture = <culture>
		capital = <province_id>
		## cardinality = 0..1
		###Cannot move capital away from this province & no power cost to move to it
		fixed_capital = <province_id>
		## cardinality = 0..1
		national_focus = enum[power_categories]
		## cardinality = 0..1
		religious_school = <religious_school>
		## cardinality = 0..inf
		historical_rival = enum[country_tags]
		## cardinality = 0..inf
		historical_friend = enum[country_tags]
		## cardinality = 0..1
		elector = yes
		## cardinality = 0..1
		historical_council = enum[council_positions]

		alias_name[effect] = alias_match_left[effect]

		subtype[sunni] = {
			religious_school = <religious_school>
		}

		## cardinality = 0..inf
		date_field = {
			## cardinality = 0..1
			monarch = {
				# set to warning instead of error as regency does not require a name
				## severity = warning
				name = localisation_synced #value_set[ruler_name]
				## cardinality = 0..1
				dynasty = localisation_synced #value_set[dynasty_name]
				## cardinality = 0..1
				birth_date = date_field
				## cardinality = 0..1
				death_date = date_field
				adm = int[0..6]
				dip = int[0..6]
				mil = int[0..6]
				## cardinality = 0..1
				regent = yes
				## cardinality = 0..1
				claim = int[0..100]
				## cardinality = 0..1
				female = yes
				## cardinality = 0..1
				culture = <culture>
				## cardinality = 0..1
				religion = <religion>

				## cardinality = 0..1
				leader = {
					name = localisation_synced #value_set[leader_name]
					type = enum[military_leader_types]
					fire = int
					shock = int
					manuever = int
					siege = int
					## cardinality = 0..1
					death_date = date_field
					## cardinality = 0..1
					personality = <leader_personality>
					## cardinality = 0..1
					female = yes
				}
			}
			## cardinality = 0..1
			heir = {
				name = localisation_synced #value_set[heir_name]
				## cardinality = 0..1
				monarch_name = localisation_synced #value_set[ruler_name]
				## cardinality = 0..1
				dynasty = localisation_synced #value_set[dynasty_name]
				birth_date = date_field
				## cardinality = 0..1
				death_date = date_field
				## cardinality = 0..1
				adm = int[0..6]
				dip = int[0..6]
				mil = int[0..6]
				## cardinality = 0..1
				claim = int[0..100]
				## cardinality = 0..1
				female = yes
				## cardinality = 0..1
				culture = <culture>
				## cardinality = 0..1
				religion = <religion>

				## cardinality = 0..1
				leader = {
					name = localisation_synced #value_set[leader_name]
					type = enum[military_leader_types]
					fire = int
					shock = int
					manuever = int
					siege = int
					## cardinality = 0..1
					death_date = date_field
					## cardinality = 0..1
					personality = <leader_personality>
					## cardinality = 0..1
					female = yes
				}
			}
			## cardinality = 0..1
			queen = {
				country_of_origin = enum[country_tags]
				name = localisation_synced #value_set[consort_name]
				dynasty = localisation_synced #value_set[dynasty_name]
				birth_date = date_field
				## cardinality = 0..1
				death_date = date_field
				## cardinality = 0..1
				female = bool
				adm = int[0..6]
				dip = int[0..6]
				mil = int[0..6]
				## cardinality = 0..1
				culture = <culture>
				## cardinality = 0..1
				religion = <religion>

				## cardinality = 0..1
				leader = {
					name = localisation_synced #value_set[leader_name]
					type = enum[military_leader_types]
					fire = int
					shock = int
					manuever = int
					siege = int
					## cardinality = 0..1
					death_date = date_field
					## cardinality = 0..1
					personality = <leader_personality>
					## cardinality = 0..1
					female = yes
				}
			}
			## cardinality = 0..inf
			leader = {
				name = localisation_synced #value_set[leader_name]
				type = enum[military_leader_types]
				fire = int
				shock = int
				manuever = int
				siege = int
				## cardinality = 0..1
				death_date = date_field
				## cardinality = 0..1
				personality = <leader_personality>
				## cardinality = 0..1
				female = yes
			}

			alias_name[effect] = alias_match_left[effect]

			## cardinality = 0..1
			###Pretty sure this one only works when a leader is spawned
			clear_scripted_personalities = yes
			## cardinality = 0..1
			religion = <religion>
			## cardinality = 0..1
			government = <government>
			## cardinality = 0..1
			culture = <culture>
			## cardinality = 0..1
			primary_culture = <culture>
			## cardinality = 0..inf
			decision = <decision>
			## cardinality = 0..1
			capital = <province_id>
			## cardinality = 0..1
			religious_school = <religious_school>
			## cardinality = 0..1
			historical_rival = enum[country_tags]
			## cardinality = 0..1
			historical_friend = enum[country_tags]
			## cardinality = 0..1
			government_rank = int[1..3]
			## cardinality = 0..1
			elector = bool
			## cardinality = 0..1
			technology_group = <technology_group>
			## cardinality = 0..1
			mercantilism = int[0..100]
			## cardinality = 0..1
			changed_tag_from = enum[country_tags]
			## cardinality = 0..1
			revolution_target = bool
		}
	}
	subtype[!not_nat_pir_reb] = {
		technology_group = <technology_group>
	}
}
