types = {
    type[pool_character_selector] = {
        path = "game/common/pool_character_selectors"
    }
}

pool_character_selector = {
    ## push_scope = character
    ### Which pool characters are valid to be considered.
    valid_character = single_alias_right[trigger_clause]
    ## push_scope = character
    ### Score for random selection of valid pool characters.
    character_score = single_alias_right[weight_block]
    ### Configs mainly used for randomization.
    config = {
        ## cardinality = 0..1
        ### Also used to validate pool characters (ie no need to check for trait that will be required by the background).
        background = <character_background>
        ### Age span for randomization.
        age = {
            ## cardinality = 2..2
            int
        }
    }
    ## cardinality = 0..1
    ### Starting from the highest scoring candidates, the number of candidates that will be considered for random scoring (not scripting or setting to negative will use all valid =1 will select the highest scoring always (random tiebreaker).
    selection_count = int

    # TODO: These were just wild guesses, IDK if they are only applied to random characters or for every pool character.
    ### Which hardcoded pool type to filter characters from.
    pool = enum[pool_types]
    ## cardinality = 0..1
    ### Whether pool characters should be only selected from the same court.
	court = bool
    ### Gender restriction for pool characters.
	gender = enum[pool_genders]
    ## cardinality = 0..1
    ### Cultural restriction for pool characters.
	culture = enum[pool_cultures]
}

enums = {
    # TODO: All of these are probably incomplete, they have no documentation, I only collected the ones from the files.
    enum[pool_types] = {
        faith
        culture_group
    }
    enum[pool_genders] = {
        random
        male
        clergy
        commander
    }
    enum[pool_cultures] = {
        company
        character
    }
}