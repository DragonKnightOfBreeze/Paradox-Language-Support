{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "CWT",
  "scopeName": "source.cwt",
  "fileTypes": ["cwt"],
  "patterns": [
    { "include": "#comments" },
    { "include": "#property" },
    { "include": "#operators" },
    { "include": "#booleans" },
    { "include": "#numbers" },
    { "include": "#strings" },
    { "include": "#punctuation" },
    { "include": "#braces" }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.doc.cwt",
          "match": "(^|\\s)(###).*",
          "captures": {
            "2": { "name": "punctuation.definition.comment.cwt" }
          }
        },
        {
          "name": "comment.line.option.cwt",
          "match": "(\\s*)(##).*",
          "captures": {
            "2": { "name": "punctuation.definition.comment.cwt" }
          }
        },
        {
          "name": "comment.line.cwt",
          "match": "(\\s*)(#).*",
          "captures": {
            "2": { "name": "punctuation.definition.comment.cwt" }
          }
        }
      ]
    },
    "operators": {
      "patterns": [
        { "name": "keyword.operator.comparison.cwt", "match": "==|!=|<>|=" }
      ]
    },
    "booleans": {
      "patterns": [
        { "name": "constant.language.boolean.cwt", "match": "\\b(?:yes|no)\\b" }
      ]
    },
    "numbers": {
      "patterns": [
        { "name": "constant.numeric.float.cwt", "match": "\\b-?\\d+\\.\\d+\\b" },
        { "name": "constant.numeric.integer.cwt", "match": "\\b-?\\d+\\b" }
      ]
    },
    "property": {
      "patterns": [
        {
          "name": "meta.property.cwt",
          "match": "(\"([^\"\\\\\\r\\n]|\\\\[\\s\\S])*\"?)(?=\\s*(?:==|=|!=|<>))",
          "captures": {
            "1": { "name": "variable.other.key.cwt" }
          },
          "patterns": [
            { "name": "constant.character.escape.cwt", "match": "\\\\." }
          ]
        },
        {
          "name": "meta.property.cwt",
          "match": "([^#={}\\s\"]+\"?)(?=\\s*(?:==|=|!=|<>))",
          "captures": {
            "1": { "name": "variable.other.key.cwt" }
          },
          "patterns": [
            { "name": "constant.character.escape.cwt", "match": "\\\\." }
          ]
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.cwt",
          "match": "\"(?:[^\"\\\\\\r\\n]|\\\\[\\s\\S])*\"?",
          "patterns": [
            { "name": "constant.character.escape.cwt", "match": "\\\\." }
          ]
        },
        {
          "name": "string.unquoted.cwt",
          "match": "[^#={}\\s\"]+\"?",
          "patterns": [
            { "name": "constant.character.escape.cwt", "match": "\\\\." }
          ]
        }
      ]
    },
    "punctuation": {
      "patterns": [
        { "name": "punctuation.section.group.begin.cwt", "match": "\\(" },
        { "name": "punctuation.section.group.end.cwt", "match": "\\)" },
        { "name": "punctuation.section.brackets.begin.cwt", "match": "\\[" },
        { "name": "punctuation.section.brackets.end.cwt", "match": "\\]" },
        { "name": "punctuation.separator.comma.cwt", "match": "," }
      ]
    },
    "braces": {
      "patterns": [
        { "name": "punctuation.section.block.begin.cwt", "match": "\\{" },
        { "name": "punctuation.section.block.end.cwt", "match": "\\}" }
      ]
    }
  }
}
