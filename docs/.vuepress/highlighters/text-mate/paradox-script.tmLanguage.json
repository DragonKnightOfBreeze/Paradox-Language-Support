{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Paradox Script",
  "scopeName": "source.paradox.script",
  "patterns": [
    { "include": "#comments" },
    { "include": "#property" },
    { "include": "#variables" },
    { "include": "#operators" },
    { "include": "#colors" },
    { "include": "#booleans" },
    { "include": "#numbers" },
    { "include": "#strings" },
    { "include": "#inline-math" },
    { "include": "#punctuation" },
    { "include": "#braces" }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.number-sign.paradox.script",
          "match": "(^|\\s)(#).*",
          "captures": {
            "2": { "name": "punctuation.definition.comment.paradox.script" }
          }
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "name": "variable.other.scripted.paradox.script",
          "match": "(^|[\\s\\[{<>=])@[A-Za-z_$\\[][^@#={}\\s\"]*",
          "captures": {
            "2": { "name": "variable.other.scripted.key.paradox.script" }
          }
        }
      ]
    },
    "operators": {
      "patterns": [
        { "name": "keyword.operator.comparison.paradox.script", "match": "==|!=|<=|>=|<|>|\\?=|=" },
        { "name": "keyword.operator.arithmetic.paradox.script", "match": "[+\\-*/%]" }
      ]
    },
    "booleans": {
      "patterns": [
        { "name": "constant.language.boolean.paradox.script", "match": "\\b(?:yes|no)\\b" }
      ]
    },
    "colors": {
      "patterns": [
        { "name": "support.function.color.paradox.script", "match": "(?i)(rgb|hsv|hsv360)(?=\\s*\\{)" }
      ]
    },
    "inline-math": {
      "patterns": [
        {
          "name": "meta.inline.math.paradox.script",
          "begin": "@\\[",
          "beginCaptures": { "0": { "name": "punctuation.section.embedded.begin.paradox.script" } },
          "end": "\\]",
          "endCaptures": { "0": { "name": "punctuation.section.embedded.end.paradox.script" } },
          "patterns": [
            { "name": "keyword.operator.arithmetic.paradox.script", "match": "[+*/%\\-|]" },
            { "name": "punctuation.section.group.paradox.script", "match": "[()]" },
            { "name": "constant.numeric.number.paradox.script", "match": "-?\\d+(?:\\.\\d+)?" },
            { "name": "variable.other.scripted.paradox.script", "match": "@[A-Za-z_][A-Za-z0-9_]*" }
          ]
        }
      ]
    },
    "property": {
      "patterns": [
        {
          "name": "meta.property.paradox.script",
          "match": "(\"([^\"\\\\\\r\\n]|\\\\[\\s\\S])*\"?)(?=\\s*(?:=|!=|<|>|<=|>=|\\?=))",
          "captures": {
            "1": { "name": "variable.other.key.paradox.script" }
          },
          "patterns": [
            { "name": "constant.character.escape.cwt", "match": "\\\\." }
          ]
        },
        {
          "name": "meta.property.paradox.script",
          "match": "([^@#=<>?{}\\[\\]\\s\"]+\"?)(?=\\s*(?:=|!=|<|>|<=|>=|\\?=))",
          "captures": {
            "1": { "name": "variable.other.key.paradox.script" }
          },
          "patterns": [
            { "name": "constant.character.escape.cwt", "match": "\\\\." }
          ]
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.paradox.script",
          "match": "\"([^\"\\\\]|\\\\[\\s\\S])*\"?",
          "patterns": [
            { "name": "constant.character.escape.paradox.script", "match": "\\\\." }
          ]
        },
        {
          "name": "string.unquoted.paradox.script",
          "match": "[^@#=<>?{}\\[\\]\\s\"]+\"?",
          "patterns": [
            { "name": "constant.character.escape.cwt", "match": "\\\\." }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        { "name": "constant.numeric.float.paradox.script", "match": "\\b-?\\d+\\.\\d+\\b" },
        { "name": "constant.numeric.integer.paradox.script", "match": "\\b-?\\d+\\b" }
      ]
    },
    "punctuation": {
      "patterns": [
        { "name": "punctuation.section.group.begin.paradox.script", "match": "\\(" },
        { "name": "punctuation.section.group.end.paradox.script", "match": "\\)" },
        { "name": "punctuation.section.brackets.begin.paradox.script", "match": "\\[" },
        { "name": "punctuation.section.brackets.end.paradox.script", "match": "\\]" },
        { "name": "punctuation.separator.comma.paradox.script", "match": "," }
      ]
    },
    "braces": {
      "patterns": [
        { "name": "punctuation.section.block.begin.paradox.script", "match": "\\{" },
        { "name": "punctuation.section.block.end.paradox.script", "match": "\\}" }
      ]
    }
  }
}
